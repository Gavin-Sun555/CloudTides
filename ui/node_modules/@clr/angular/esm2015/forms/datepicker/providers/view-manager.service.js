/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { ClrPopoverPositions } from '../../../utils/popover/enums/positions.enum';
/**
 * This service manages which view is visible in the datepicker popover.
 */
import * as ɵngcc0 from '@angular/core';
let ViewManagerService = class ViewManagerService {
    constructor() {
        this._currentView = "DAYVIEW" /* DAYVIEW */;
        this.position = ClrPopoverPositions['bottom-left'];
    }
    get isDayView() {
        return this._currentView === "DAYVIEW" /* DAYVIEW */;
    }
    get isYearView() {
        return this._currentView === "YEARVIEW" /* YEARVIEW */;
    }
    get isMonthView() {
        return this._currentView === "MONTHVIEW" /* MONTHVIEW */;
    }
    changeToMonthView() {
        this._currentView = "MONTHVIEW" /* MONTHVIEW */;
    }
    changeToYearView() {
        this._currentView = "YEARVIEW" /* YEARVIEW */;
    }
    changeToDayView() {
        this._currentView = "DAYVIEW" /* DAYVIEW */;
    }
};
ViewManagerService.ɵfac = function ViewManagerService_Factory(t) { return new (t || ViewManagerService)(); };
ViewManagerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ViewManagerService, factory: ViewManagerService.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewManagerService, [{
        type: Injectable
    }], function () { return []; }, null); })();
export { ViewManagerService };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlldy1tYW5hZ2VyLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIm5nOi9AY2xyL2FuZ3VsYXIvZm9ybXMvZGF0ZXBpY2tlci9wcm92aWRlcnMvdmlldy1tYW5hZ2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBU2xGO0FBQ0E7QUFDQSxHQUFHOztBQUVILElBQWEsa0JBQWtCLEdBQS9CLE1BQWEsa0JBQWtCO0FBQy9CLElBREE7QUFBZ0IsUUFDTixpQkFBWSwyQkFBa0Q7QUFDeEUsUUFBRSxhQUFRLEdBQXVCLG1CQUFtQixDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ3BFLElBd0JBLENBQUM7QUFDRCxJQXhCRSxJQUFJLFNBQVM7QUFBSyxRQUNoQixPQUFPLElBQUksQ0FBQyxZQUFZLDRCQUErQixDQUFDO0FBQzVELElBQUUsQ0FBQztBQUNILElBQ0UsSUFBSSxVQUFVO0FBQUssUUFDakIsT0FBTyxJQUFJLENBQUMsWUFBWSw4QkFBZ0MsQ0FBQztBQUM3RCxJQUFFLENBQUM7QUFDSCxJQUNFLElBQUksV0FBVztBQUFLLFFBQ2xCLE9BQU8sSUFBSSxDQUFDLFlBQVksZ0NBQWlDLENBQUM7QUFDOUQsSUFBRSxDQUFDO0FBQ0gsSUFDRSxpQkFBaUI7QUFBSyxRQUNwQixJQUFJLENBQUMsWUFBWSw4QkFBK0IsQ0FBQztBQUNyRCxJQUFFLENBQUM7QUFDSCxJQUNFLGdCQUFnQjtBQUFLLFFBQ25CLElBQUksQ0FBQyxZQUFZLDRCQUE4QixDQUFDO0FBQ3BELElBQUUsQ0FBQztBQUNILElBQ0UsZUFBZTtBQUFLLFFBQ2xCLElBQUksQ0FBQyxZQUFZLDBCQUE2QixDQUFDO0FBQ25ELElBQUUsQ0FBQztBQUNILENBQUMsQ0FBQTtBQTNCWSxrQkFBa0Isb0JBRDlCLFVBQVUsRUFBRSxJQUNBLGtCQUFrQixDQTJCOUI7Ozs7Z0RBQ0Q7QUFBQyxTQTVCWSxrQkFBa0I7QUFDOUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENsclBvcG92ZXJQb3NpdGlvbnMgfSBmcm9tICcuLi8uLi8uLi91dGlscy9wb3BvdmVyL2VudW1zL3Bvc2l0aW9ucy5lbnVtJztcbmltcG9ydCB7IENsclBvcG92ZXJQb3NpdGlvbiB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3BvcG92ZXIvaW50ZXJmYWNlcy9wb3BvdmVyLXBvc2l0aW9uLmludGVyZmFjZSc7XG5cbmNvbnN0IGVudW0gRGF0ZXBpY2tlclZpZXdFbnVtIHtcbiAgTU9OVEhWSUVXID0gJ01PTlRIVklFVycsXG4gIFlFQVJWSUVXID0gJ1lFQVJWSUVXJyxcbiAgREFZVklFVyA9ICdEQVlWSUVXJyxcbn1cblxuLyoqXG4gKiBUaGlzIHNlcnZpY2UgbWFuYWdlcyB3aGljaCB2aWV3IGlzIHZpc2libGUgaW4gdGhlIGRhdGVwaWNrZXIgcG9wb3Zlci5cbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFZpZXdNYW5hZ2VyU2VydmljZSB7XG4gIHByaXZhdGUgX2N1cnJlbnRWaWV3OiBEYXRlcGlja2VyVmlld0VudW0gPSBEYXRlcGlja2VyVmlld0VudW0uREFZVklFVztcbiAgcG9zaXRpb246IENsclBvcG92ZXJQb3NpdGlvbiA9IENsclBvcG92ZXJQb3NpdGlvbnNbJ2JvdHRvbS1sZWZ0J107XG5cbiAgZ2V0IGlzRGF5VmlldygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fY3VycmVudFZpZXcgPT09IERhdGVwaWNrZXJWaWV3RW51bS5EQVlWSUVXO1xuICB9XG5cbiAgZ2V0IGlzWWVhclZpZXcoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRWaWV3ID09PSBEYXRlcGlja2VyVmlld0VudW0uWUVBUlZJRVc7XG4gIH1cblxuICBnZXQgaXNNb250aFZpZXcoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRWaWV3ID09PSBEYXRlcGlja2VyVmlld0VudW0uTU9OVEhWSUVXO1xuICB9XG5cbiAgY2hhbmdlVG9Nb250aFZpZXcoKTogdm9pZCB7XG4gICAgdGhpcy5fY3VycmVudFZpZXcgPSBEYXRlcGlja2VyVmlld0VudW0uTU9OVEhWSUVXO1xuICB9XG5cbiAgY2hhbmdlVG9ZZWFyVmlldygpOiB2b2lkIHtcbiAgICB0aGlzLl9jdXJyZW50VmlldyA9IERhdGVwaWNrZXJWaWV3RW51bS5ZRUFSVklFVztcbiAgfVxuXG4gIGNoYW5nZVRvRGF5VmlldygpOiB2b2lkIHtcbiAgICB0aGlzLl9jdXJyZW50VmlldyA9IERhdGVwaWNrZXJWaWV3RW51bS5EQVlWSUVXO1xuICB9XG59XG4iXX0=