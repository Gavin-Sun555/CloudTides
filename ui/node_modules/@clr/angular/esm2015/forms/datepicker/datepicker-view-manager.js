/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { DatepickerFocusService } from './providers/datepicker-focus.service';
import { ViewManagerService } from './providers/view-manager.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './monthpicker';
import * as ɵngcc3 from './yearpicker';
import * as ɵngcc4 from './daypicker';

function ClrDatepickerViewManager_clr_monthpicker_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-monthpicker");
} }
function ClrDatepickerViewManager_clr_yearpicker_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-yearpicker");
} }
function ClrDatepickerViewManager_clr_daypicker_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-daypicker");
} }
let ClrDatepickerViewManager = class ClrDatepickerViewManager {
    constructor(viewManagerService) {
        this.viewManagerService = viewManagerService;
    }
    /**
     * Returns if the current view is the monthpicker.
     */
    get isMonthView() {
        return this.viewManagerService.isMonthView;
    }
    /**
     * Returns if the current view is the yearpicker.
     */
    get isYearView() {
        return this.viewManagerService.isYearView;
    }
    /**
     * Returns if the current view is the daypicker.
     */
    get isDayView() {
        return this.viewManagerService.isDayView;
    }
};
ClrDatepickerViewManager.ɵfac = function ClrDatepickerViewManager_Factory(t) { return new (t || ClrDatepickerViewManager)(ɵngcc0.ɵɵdirectiveInject(ViewManagerService)); };
ClrDatepickerViewManager.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrDatepickerViewManager, selectors: [["clr-datepicker-view-manager"]], hostVars: 3, hostBindings: function ClrDatepickerViewManager_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-modal", true);
        ɵngcc0.ɵɵclassProp("datepicker", true);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([DatepickerFocusService])], decls: 3, vars: 3, consts: [[4, "ngIf"]], template: function ClrDatepickerViewManager_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ClrDatepickerViewManager_clr_monthpicker_0_Template, 1, 0, "clr-monthpicker", 0);
        ɵngcc0.ɵɵtemplate(1, ClrDatepickerViewManager_clr_yearpicker_1_Template, 1, 0, "clr-yearpicker", 0);
        ɵngcc0.ɵɵtemplate(2, ClrDatepickerViewManager_clr_daypicker_2_Template, 1, 0, "clr-daypicker", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.isMonthView);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isYearView);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isDayView);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.ClrMonthpicker, ɵngcc3.ClrYearpicker, ɵngcc4.ClrDaypicker], encapsulation: 2 });
ClrDatepickerViewManager.ctorParameters = () => [
    { type: ViewManagerService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrDatepickerViewManager, [{
        type: Component,
        args: [{
                selector: 'clr-datepicker-view-manager',
                template: "<!--\n* Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n* This software is released under MIT license.\n* The full license information can be found in LICENSE in the root directory of this project.\n-->\n\n<clr-monthpicker *ngIf=\"isMonthView\"></clr-monthpicker>\n<clr-yearpicker *ngIf=\"isYearView\"></clr-yearpicker>\n<clr-daypicker *ngIf=\"isDayView\"></clr-daypicker>\n",
                providers: [DatepickerFocusService],
                host: {
                    '[class.datepicker]': 'true',
                    '[attr.aria-modal]': 'true'
                }
            }]
    }], function () { return [{ type: ViewManagerService }]; }, null); })();
export { ClrDatepickerViewManager };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci12aWV3LW1hbmFnZXIuanMiLCJzb3VyY2VzIjpbIm5nOi9AY2xyL2FuZ3VsYXIvZm9ybXMvZGF0ZXBpY2tlci9kYXRlcGlja2VyLXZpZXctbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDOUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7QUFXdEUsSUFBYSx3QkFBd0IsR0FBckMsTUFBYSx3QkFBd0I7QUFDckMsSUFBRSxZQUFvQixrQkFBc0M7QUFBSSxRQUExQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO0FBQUMsSUFBRSxDQUFDO0FBQ2hFLElBQ0U7QUFDRjtBQUNFLE9BQUc7QUFDTCxJQUFFLElBQUksV0FBVztBQUFLLFFBQ2xCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQztBQUMvQyxJQUFFLENBQUM7QUFDSCxJQUNFO0FBQ0Y7QUFDRSxPQUFHO0FBQ0wsSUFBRSxJQUFJLFVBQVU7QUFBSyxRQUNqQixPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLENBQUM7QUFDOUMsSUFBRSxDQUFDO0FBQ0gsSUFDRTtBQUNGO0FBQ0UsT0FBRztBQUNMLElBQUUsSUFBSSxTQUFTO0FBQUssUUFDaEIsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDO0FBQzdDLElBQUUsQ0FBQztBQUNILENBQUM7Ozs7Ozs7Ozs7Ozs7OzswSEFBQTtBQUNEO0FBQWtELFlBdkJSLGtCQUFrQjtBQUFHO0FBRGxELHdCQUF3QixvQkFUcEMsU0FBUyxDQUFDLFVBQ1QsUUFBUSxFQUFFO29CQUE2QjtLQUN2Qzs7d1VBQTZDLFVBQzdDLFNBQVMsRUFBRSxDQUFDLHNCQUFzQixDQUFDLFVBQ25DLElBQUksRUFBRSxjQUNKO1FBQW9CLEVBQUUsTUFBTSxjQUM1QixtQkFBbUIsRUFBRTtJQUFNLFdBQzVCLE1BQ0YsQ0FBQztFQUNXLHdCQUF3QixDQXVCcEM7Ozs7NEVBQ0Q7QUFBQyxTQXhCWSx3QkFBd0I7QUFDcEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBEYXRlcGlja2VyRm9jdXNTZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvZGF0ZXBpY2tlci1mb2N1cy5zZXJ2aWNlJztcbmltcG9ydCB7IFZpZXdNYW5hZ2VyU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL3ZpZXctbWFuYWdlci5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY2xyLWRhdGVwaWNrZXItdmlldy1tYW5hZ2VyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2RhdGVwaWNrZXItdmlldy1tYW5hZ2VyLmh0bWwnLFxuICBwcm92aWRlcnM6IFtEYXRlcGlja2VyRm9jdXNTZXJ2aWNlXSxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MuZGF0ZXBpY2tlcl0nOiAndHJ1ZScsXG4gICAgJ1thdHRyLmFyaWEtbW9kYWxdJzogJ3RydWUnLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBDbHJEYXRlcGlja2VyVmlld01hbmFnZXIge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHZpZXdNYW5hZ2VyU2VydmljZTogVmlld01hbmFnZXJTZXJ2aWNlKSB7fVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGlmIHRoZSBjdXJyZW50IHZpZXcgaXMgdGhlIG1vbnRocGlja2VyLlxuICAgKi9cbiAgZ2V0IGlzTW9udGhWaWV3KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnZpZXdNYW5hZ2VyU2VydmljZS5pc01vbnRoVmlldztcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGlmIHRoZSBjdXJyZW50IHZpZXcgaXMgdGhlIHllYXJwaWNrZXIuXG4gICAqL1xuICBnZXQgaXNZZWFyVmlldygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy52aWV3TWFuYWdlclNlcnZpY2UuaXNZZWFyVmlldztcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGlmIHRoZSBjdXJyZW50IHZpZXcgaXMgdGhlIGRheXBpY2tlci5cbiAgICovXG4gIGdldCBpc0RheVZpZXcoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMudmlld01hbmFnZXJTZXJ2aWNlLmlzRGF5VmlldztcbiAgfVxufVxuIl19