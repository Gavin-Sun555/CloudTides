import { __decorate, __param } from "tslib";
/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Inject } from '@angular/core';
import { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';
import * as ɵngcc0 from '@angular/core';
let ClrStackContentInput = class ClrStackContentInput {
    constructor(uniqueId) {
        this.uniqueId = uniqueId;
    }
};
ClrStackContentInput.ɵfac = function ClrStackContentInput_Factory(t) { return new (t || ClrStackContentInput)(ɵngcc0.ɵɵdirectiveInject(UNIQUE_ID)); };
ClrStackContentInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClrStackContentInput, selectors: [["", "clrStackInput", ""]], hostVars: 3, hostBindings: function ClrStackContentInput_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-labelledby", ctx.uniqueId);
        ɵngcc0.ɵɵclassProp("clr-input", true);
    } } });
ClrStackContentInput.ctorParameters = () => [
    { type: String, decorators: [{ type: Inject, args: [UNIQUE_ID,] }] }
];
ClrStackContentInput = __decorate([ __param(0, Inject(UNIQUE_ID))
], ClrStackContentInput);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrStackContentInput, [{
        type: Directive,
        args: [{
                selector: '[clrStackInput]',
                host: {
                    '[class.clr-input]': 'true',
                    '[attr.aria-labelledby]': 'uniqueId'
                }
            }]
    }], function () { return [{ type: String, decorators: [{
                type: Inject,
                args: [UNIQUE_ID]
            }] }]; }, null); })();
export { ClrStackContentInput };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2stY29udGVudC1pbnB1dC5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci9kYXRhL3N0YWNrLXZpZXcvc3RhY2stY29udGVudC1pbnB1dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLCtDQUErQyxDQUFDOztBQVMxRSxJQUFhLG9CQUFvQixHQUFqQyxNQUFhLG9CQUFvQjtBQUNqQyxJQUFFLFlBQXNDLFFBQWdCO0FBQUksUUFBcEIsYUFBUSxHQUFSLFFBQVEsQ0FBUTtBQUFDLElBQUUsQ0FBQztBQUM1RCxDQUFDOzs7OztXQUFBO0FBQ0Q7QUFBOEMseUNBRi9CLE1BQU0sU0FBQyxTQUFTO0FBQVE7QUFEMUIsb0JBQW9CLG9CQVBoQyxTQUFTLENBQUMsVUFDVCx6QkFNRSxDQUNXLFdBQUEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0VBUHRCLEVBQUUsaUJBQWlCLHJCQU9JLEdBRHBCLG9CQUFvQixDQUVoQztLQVBDLElBQUksRUFBRSxjQUNKLG1CQUFtQixFQUFFLE1BQU0sY0FDM0I7V0FBd0IsRUFBRSxVQUFVO1NBQ3JDLE9BQ0Y7QUFBQzs7Ozs7Ozs7O2tDQUlGO0FBQUMsU0FIWSxvQkFBb0I7QUFDaEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVU5JUVVFX0lEIH0gZnJvbSAnLi4vLi4vdXRpbHMvaWQtZ2VuZXJhdG9yL2lkLWdlbmVyYXRvci5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2NsclN0YWNrSW5wdXRdJyxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MuY2xyLWlucHV0XSc6ICd0cnVlJyxcbiAgICAnW2F0dHIuYXJpYS1sYWJlbGxlZGJ5XSc6ICd1bmlxdWVJZCcsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIENsclN0YWNrQ29udGVudElucHV0IHtcbiAgY29uc3RydWN0b3IoQEluamVjdChVTklRVUVfSUQpIHB1YmxpYyB1bmlxdWVJZDogc3RyaW5nKSB7fVxufVxuIl19