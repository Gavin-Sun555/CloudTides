import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, EventEmitter, Output } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = [[["clr-stack-header"]], "*"];
const _c1 = ["clr-stack-header", "*"];
let ClrStackView = class ClrStackView {
    constructor() {
        /**
         * Undocumented experimental feature: inline editing.
         */
        this.editable = false;
        this.save = new EventEmitter(false);
        this._editMode = false;
        this.editingChange = new EventEmitter(false);
        /**
         * End of undocumented experimental feature.
         */
    }
    get editing() {
        return this.editable && this._editMode;
    }
    set editing(value) {
        if (this.editable) {
            this._editMode = value;
            this.editingChange.emit(value);
            if (!value) {
                this.save.emit(null);
            }
        }
    }
};
ClrStackView.ɵfac = function ClrStackView_Factory(t) { return new (t || ClrStackView)(); };
ClrStackView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrStackView, selectors: [["clr-stack-view"]], outputs: { save: "clrStackSave" }, ngContentSelectors: _c1, decls: 3, vars: 0, consts: [[1, "stack-view"]], template: function ClrStackView_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵprojection(2, 1);
        ɵngcc0.ɵɵelementEnd();
    } }, styles: ["[_nghost-%COMP%] { display: block; }"] });
__decorate([
    Output('clrStackSave')
], ClrStackView.prototype, "save", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrStackView, [{
        type: Component,
        args: [{
                selector: 'clr-stack-view',
                template: `
        <ng-content select="clr-stack-header"></ng-content>
        <div class="stack-view"><ng-content></ng-content></div>
    `,
                styles: [`
        :host { display: block; }
    `]
            }]
    }], function () { return []; }, { save: [{
            type: Output,
            args: ['clrStackSave']
        }] }); })();
export { ClrStackView };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2stdmlldy5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci9kYXRhL3N0YWNrLXZpZXcvc3RhY2stdmlldy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7OztBQWVoRSxJQUFhLFlBQVksR0FBekIsTUFBYSxZQUFZO0FBQ3pCLElBREE7QUFBZ0IsUUFDZDtBQUNGO0FBRUEsV0FESztBQUNMLFFBQUUsYUFBUSxHQUFZLEtBQUssQ0FBQztBQUM1QixRQUMwQixTQUFJLEdBQXVCLElBQUksWUFBWSxDQUFPLEtBQUssQ0FBQyxDQUFDO0FBQ25GLFFBQ1UsY0FBUyxHQUFZLEtBQUssQ0FBQztBQUNyQyxRQUNFLGtCQUFhLEdBQTBCLElBQUksWUFBWSxDQUFVLEtBQUssQ0FBQyxDQUFDO0FBQzFFLFFBY0U7QUFDRjtBQUVBLFdBREs7QUFDTCxJQUFBLENBQUM7QUFDRCxJQWpCRSxJQUFJLE9BQU87QUFBSyxRQUNkLE9BQU8sSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDO0FBQzNDLElBQUUsQ0FBQztBQUNILElBQ0UsSUFBSSxPQUFPLENBQUMsS0FBYztBQUM1QixRQUFJLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtBQUN2QixZQUFNLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0FBQzdCLFlBQU0sSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDckMsWUFBTSxJQUFJLENBQUMsS0FBSyxFQUFFO0FBQ2xCLGdCQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzdCLGFBQU87QUFDUCxTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0gsQ0FHQzs7Ozs7Ozs7NkRBQUE7QUF0QnlCO0FBQWEsSUFBcEMsTUFBTSxDQUFDLGNBQWMsQ0FBQztBQUFDLDBDQUF5RDtBQU50RSxZQUFZLG9CQWJ4QixTQUFTLENBQUMsVUFDVCxRQUFRLEVBQUU7T0FBZ0IsVUFDMUI7QUFBUSxFQUFFOzs7NENBR1A7R0FHRCx5Q0FFQyxPQUVKLENBQUMsSUFDVztJQUFZLENBNEJ4Qjs7Ozs7Ozs7b0JBQ0Q7QUFBQyxTQTdCWSxZQUFZO0FBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjbHItc3RhY2stdmlldycsXG4gIHRlbXBsYXRlOiBgXG4gICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cImNsci1zdGFjay1oZWFkZXJcIj48L25nLWNvbnRlbnQ+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzdGFjay12aWV3XCI+PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PjwvZGl2PlxuICAgIGAsXG4gIC8vIEN1c3RvbSBlbGVtZW50cyBhcmUgaW5saW5lIGJ5IGRlZmF1bHQuXG4gIHN0eWxlczogW1xuICAgIGBcbiAgICAgICAgOmhvc3QgeyBkaXNwbGF5OiBibG9jazsgfVxuICAgIGAsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIENsclN0YWNrVmlldyB7XG4gIC8qKlxuICAgKiBVbmRvY3VtZW50ZWQgZXhwZXJpbWVudGFsIGZlYXR1cmU6IGlubGluZSBlZGl0aW5nLlxuICAgKi9cbiAgZWRpdGFibGU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBAT3V0cHV0KCdjbHJTdGFja1NhdmUnKSBzYXZlOiBFdmVudEVtaXR0ZXI8dm9pZD4gPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KGZhbHNlKTtcblxuICBwcml2YXRlIF9lZGl0TW9kZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGVkaXRpbmdDaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oZmFsc2UpO1xuXG4gIGdldCBlZGl0aW5nKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmVkaXRhYmxlICYmIHRoaXMuX2VkaXRNb2RlO1xuICB9XG5cbiAgc2V0IGVkaXRpbmcodmFsdWU6IGJvb2xlYW4pIHtcbiAgICBpZiAodGhpcy5lZGl0YWJsZSkge1xuICAgICAgdGhpcy5fZWRpdE1vZGUgPSB2YWx1ZTtcbiAgICAgIHRoaXMuZWRpdGluZ0NoYW5nZS5lbWl0KHZhbHVlKTtcbiAgICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgdGhpcy5zYXZlLmVtaXQobnVsbCk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBFbmQgb2YgdW5kb2N1bWVudGVkIGV4cGVyaW1lbnRhbCBmZWF0dXJlLlxuICAgKi9cbn1cbiJdfQ==