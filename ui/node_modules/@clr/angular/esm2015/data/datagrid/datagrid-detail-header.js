import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component } from '@angular/core';
import { DetailService } from './providers/detail.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../utils/focus/focus-on-view-init/focus-on-view-init';
import * as ɵngcc2 from '../../icon/icon';

const _c0 = ["*"];
let ClrDatagridDetailHeader = class ClrDatagridDetailHeader {
    constructor(detailService, commonStrings) {
        this.detailService = detailService;
        this.commonStrings = commonStrings;
    }
    get titleId() {
        return `${this.detailService.id}-title`;
    }
};
ClrDatagridDetailHeader.ɵfac = function ClrDatagridDetailHeader_Factory(t) { return new (t || ClrDatagridDetailHeader)(ɵngcc0.ɵɵdirectiveInject(DetailService), ɵngcc0.ɵɵdirectiveInject(ClrCommonStringsService)); };
ClrDatagridDetailHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrDatagridDetailHeader, selectors: [["clr-dg-detail-header"]], hostVars: 2, hostBindings: function ClrDatagridDetailHeader_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("datagrid-detail-header", true);
    } }, ngContentSelectors: _c0, decls: 5, vars: 2, consts: [["clrFocusOnViewInit", "", 1, "datagrid-detail-header-title", 3, "id"], [1, "datagrid-detail-pane-close"], ["type", "button", 1, "btn", "btn-link", 3, "click"], ["size", "24", "shape", "times"]], template: function ClrDatagridDetailHeader_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelementStart(3, "button", 2);
        ɵngcc0.ɵɵlistener("click", function ClrDatagridDetailHeader_Template_button_click_3_listener() { return ctx.detailService.close(); });
        ɵngcc0.ɵɵelement(4, "clr-icon", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("id", ctx.titleId);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵattribute("aria-label", ctx.commonStrings.keys.close);
    } }, directives: [ɵngcc1.ClrFocusOnViewInit, ɵngcc2.ClrIconCustomTag], encapsulation: 2 });
ClrDatagridDetailHeader.ctorParameters = () => [
    { type: DetailService },
    { type: ClrCommonStringsService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrDatagridDetailHeader, [{
        type: Component,
        args: [{
                selector: 'clr-dg-detail-header',
                host: {
                    '[class.datagrid-detail-header]': 'true'
                },
                template: `
    <div class="datagrid-detail-header-title" clrFocusOnViewInit [id]="titleId">
      <ng-content></ng-content>
    </div>
    <div class="datagrid-detail-pane-close">
      <button type="button" 
              class="btn btn-link" 
              (click)="detailService.close()" 
              [attr.aria-label]="commonStrings.keys.close">
        <clr-icon size="24" shape="times"></clr-icon>
      </button>
    </div>
  `
            }]
    }], function () { return [{ type: DetailService }, { type: ClrCommonStringsService }]; }, null); })();
export { ClrDatagridDetailHeader };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtZGV0YWlsLWhlYWRlci5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci9kYXRhL2RhdGFncmlkL2RhdGFncmlkLWRldGFpbC1oZWFkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzNELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDOzs7Ozs7QUFxQmxGLElBQWEsdUJBQXVCLEdBQXBDLE1BQWEsdUJBQXVCO0FBQ3BDLElBSUUsWUFBbUIsYUFBNEIsRUFBUyxhQUFzQztBQUFJLFFBQS9FLGtCQUFhLEdBQWIsYUFBYSxDQUFlO0FBQUMsUUFBUSxrQkFBYSxHQUFiLGFBQWEsQ0FBeUI7QUFBQyxJQUFFLENBQUM7QUFDcEcsSUFMRSxJQUFJLE9BQU87QUFDYixRQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsUUFBUSxDQUFDO0FBQzVDLElBQUUsQ0FBQztBQUNILENBRUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0ZBQUE7QUFDRDtBQUFpRCxZQUZiLGFBQWE7QUFBSSxZQUFvQix1QkFBdUI7QUFBRztBQUx0Rix1QkFBdUIsb0JBbkJuQyxTQUFTLENBQUMsVUFDVCxRQUFRLEVBQUU7YUFBc0IsVUFDaEM7RUFBSSxFQUFFO0NBQ0osZ0NBQWdDLEVBQUUsTUFBTTtFQUN6QyxVQUNELFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7b0NBWVQsTUFDRixDQUFDLElBQ1c7VUFBdUIsQ0FNbkM7Ozs7OzBHQUNEO0FBQUMsU0FQWSx1QkFBdUI7QUFDbkMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERldGFpbFNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy9kZXRhaWwuc2VydmljZSc7XG5pbXBvcnQgeyBDbHJDb21tb25TdHJpbmdzU2VydmljZSB9IGZyb20gJy4uLy4uL3V0aWxzL2kxOG4vY29tbW9uLXN0cmluZ3Muc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Nsci1kZy1kZXRhaWwtaGVhZGVyJyxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MuZGF0YWdyaWQtZGV0YWlsLWhlYWRlcl0nOiAndHJ1ZScsXG4gIH0sXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImRhdGFncmlkLWRldGFpbC1oZWFkZXItdGl0bGVcIiBjbHJGb2N1c09uVmlld0luaXQgW2lkXT1cInRpdGxlSWRcIj5cbiAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZGF0YWdyaWQtZGV0YWlsLXBhbmUtY2xvc2VcIj5cbiAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIFxuICAgICAgICAgICAgICBjbGFzcz1cImJ0biBidG4tbGlua1wiIFxuICAgICAgICAgICAgICAoY2xpY2spPVwiZGV0YWlsU2VydmljZS5jbG9zZSgpXCIgXG4gICAgICAgICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiY29tbW9uU3RyaW5ncy5rZXlzLmNsb3NlXCI+XG4gICAgICAgIDxjbHItaWNvbiBzaXplPVwiMjRcIiBzaGFwZT1cInRpbWVzXCI+PC9jbHItaWNvbj5cbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBDbHJEYXRhZ3JpZERldGFpbEhlYWRlciB7XG4gIGdldCB0aXRsZUlkKCkge1xuICAgIHJldHVybiBgJHt0aGlzLmRldGFpbFNlcnZpY2UuaWR9LXRpdGxlYDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBkZXRhaWxTZXJ2aWNlOiBEZXRhaWxTZXJ2aWNlLCBwdWJsaWMgY29tbW9uU3RyaW5nczogQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UpIHt9XG59XG4iXX0=