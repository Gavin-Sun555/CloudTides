import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, ContentChild } from '@angular/core';
import { ClrDatagridColumnToggle } from './datagrid-column-toggle';
import { Selection } from './providers/selection';
import { SelectionType } from './enums/selection-type';
import { ColumnsService } from './providers/columns.service';
import { DetailService } from './providers/detail.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../../forms/checkbox/checkbox-wrapper';
import * as ɵngcc3 from '../../forms/checkbox/checkbox';
import * as ɵngcc4 from '../../forms/common/label';
import * as ɵngcc5 from './datagrid-column-toggle';

function ClrDatagridFooter_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 1);
    ɵngcc0.ɵɵelementStart(2, "clr-checkbox-wrapper", 2);
    ɵngcc0.ɵɵelement(3, "input", 3);
    ɵngcc0.ɵɵelementStart(4, "label");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.selection.current.length);
} }
function ClrDatagridFooter_ng_container_1_clr_dg_column_toggle_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-dg-column-toggle");
} }
function ClrDatagridFooter_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵprojection(1, 1);
    ɵngcc0.ɵɵtemplate(2, ClrDatagridFooter_ng_container_1_clr_dg_column_toggle_2_Template, 1, 0, "clr-dg-column-toggle", 0);
    ɵngcc0.ɵɵelementStart(3, "div", 4);
    ɵngcc0.ɵɵprojection(4, 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.hasHideableColumns && !ctx_r1.toggle);
} }
const _c0 = [[["clr-dg-pagination"]], [["clr-dg-column-toggle"]], "*"];
const _c1 = ["clr-dg-pagination", "clr-dg-column-toggle", "*"];
let ClrDatagridFooter = class ClrDatagridFooter {
    constructor(selection, detailService, columnsService) {
        this.selection = selection;
        this.detailService = detailService;
        this.columnsService = columnsService;
        /* reference to the enum so that template can access */
        this.SELECTION_TYPE = SelectionType;
    }
    get hasHideableColumns() {
        return this.columnsService.hasHideableColumns;
    }
};
ClrDatagridFooter.ɵfac = function ClrDatagridFooter_Factory(t) { return new (t || ClrDatagridFooter)(ɵngcc0.ɵɵdirectiveInject(Selection), ɵngcc0.ɵɵdirectiveInject(DetailService), ɵngcc0.ɵɵdirectiveInject(ColumnsService)); };
ClrDatagridFooter.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrDatagridFooter, selectors: [["clr-dg-footer"]], contentQueries: function ClrDatagridFooter_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ClrDatagridColumnToggle, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toggle = _t.first);
    } }, hostVars: 2, hostBindings: function ClrDatagridFooter_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("datagrid-footer", true);
    } }, ngContentSelectors: _c1, decls: 3, vars: 2, consts: [[4, "ngIf"], [1, "clr-form-control-disabled"], [1, "datagrid-footer-select"], ["clrCheckbox", "", "type", "checkbox", "checked", "checked", "disabled", ""], [1, "datagrid-footer-description"]], template: function ClrDatagridFooter_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵtemplate(0, ClrDatagridFooter_ng_container_0_Template, 6, 1, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, ClrDatagridFooter_ng_container_1_Template, 5, 1, "ng-container", 0);
        ɵngcc0.ɵɵprojection(2);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.selection.selectionType === ctx.SELECTION_TYPE.Multi && ctx.selection.current.length > 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.detailService.isOpen);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.ClrCheckboxWrapper, ɵngcc3.ClrCheckbox, ɵngcc4.ClrLabel, ɵngcc5.ClrDatagridColumnToggle], encapsulation: 2 });
ClrDatagridFooter.ctorParameters = () => [
    { type: Selection },
    { type: DetailService },
    { type: ColumnsService }
];
__decorate([
    ContentChild(ClrDatagridColumnToggle)
], ClrDatagridFooter.prototype, "toggle", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrDatagridFooter, [{
        type: Component,
        args: [{
                selector: 'clr-dg-footer',
                template: `
        <ng-container
            *ngIf="(selection.selectionType === SELECTION_TYPE.Multi) && (selection.current.length > 0)">
          <div class="clr-form-control-disabled">
              <clr-checkbox-wrapper class="datagrid-footer-select">
                <input clrCheckbox type="checkbox" checked="checked" disabled>
                <label>{{selection.current.length}}</label>
            </clr-checkbox-wrapper>
          </div>
        </ng-container>
        <ng-container *ngIf="!detailService.isOpen">
          <ng-content select="clr-dg-column-toggle"></ng-content>
          <clr-dg-column-toggle *ngIf="hasHideableColumns && !toggle"></clr-dg-column-toggle>
          <div class="datagrid-footer-description">
              <ng-content></ng-content>
          </div>
        </ng-container>
        <ng-content select="clr-dg-pagination"></ng-content>
    `,
                host: {
                    '[class.datagrid-footer]': 'true'
                }
            }]
    }], function () { return [{ type: Selection }, { type: DetailService }, { type: ColumnsService }]; }, { toggle: [{
            type: ContentChild,
            args: [ClrDatagridColumnToggle]
        }] }); })();
export { ClrDatagridFooter };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtZm9vdGVyLmpzIiwic291cmNlcyI6WyJuZzovQGNsci9hbmd1bGFyL2RhdGEvZGF0YWdyaWQvZGF0YWdyaWQtZm9vdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV4RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCM0QsSUFBYSxpQkFBaUIsR0FBOUIsTUFBYSxpQkFBaUI7QUFBRyxJQUMvQixZQUNTLFNBQXVCLEVBQ3ZCLGFBQTRCLEVBQzNCLGNBQThCO0FBQ3ZDLFFBSFEsY0FBUyxHQUFULFNBQVMsQ0FBYztBQUFDLFFBQ3hCLGtCQUFhLEdBQWIsYUFBYSxDQUFlO0FBQUMsUUFDNUIsbUJBQWMsR0FBZCxjQUFjLENBQWdCO0FBQzFDLFFBRUUsdURBQXVEO0FBQ3pELFFBQVMsbUJBQWMsR0FBRyxhQUFhLENBQUM7QUFDeEMsSUFKSyxDQUFDO0FBQ04sSUFNRSxJQUFJLGtCQUFrQjtBQUFLLFFBQ3pCLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQztBQUNsRCxJQUFFLENBQUM7QUFDSCxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7d0pBQUE7QUFDRDtBQUEyQyxZQWRyQixTQUFTO0FBQUksWUFDVCxhQUFhO0FBQ3JDLFlBQTBCLGNBQWM7QUFDeEM7QUFLdUM7QUFBYSxJQUFuRCxZQUFZLENBQUMsdUJBQXVCLENBQUM7QUFBQyxpREFBZ0M7QUFWNUQsaUJBQWlCLG9CQXpCN0IsU0FBUyxDQUFDLFVBQ1QsUUFBUSxFQUFFO01BQWUsVUFDekIsUUFBUTtDQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FrQlAsVUFDSCxJQUFJLEVBQUU7V0FDSix5QkFBeUIsRUFBRSxNQUFNLFdBQ2xDO0FBQ0YsQ0FBQyxJQUNXO2VBQWlCLENBZTdCOzs7Ozs7O29CQUNEO0FBQUMsU0FoQlksaUJBQWlCO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5pbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDbHJEYXRhZ3JpZENvbHVtblRvZ2dsZSB9IGZyb20gJy4vZGF0YWdyaWQtY29sdW1uLXRvZ2dsZSc7XG5pbXBvcnQgeyBTZWxlY3Rpb24gfSBmcm9tICcuL3Byb3ZpZGVycy9zZWxlY3Rpb24nO1xuaW1wb3J0IHsgU2VsZWN0aW9uVHlwZSB9IGZyb20gJy4vZW51bXMvc2VsZWN0aW9uLXR5cGUnO1xuaW1wb3J0IHsgQ29sdW1uc1NlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy9jb2x1bW5zLnNlcnZpY2UnO1xuaW1wb3J0IHsgRGV0YWlsU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL2RldGFpbC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY2xyLWRnLWZvb3RlcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgICAgIDxuZy1jb250YWluZXJcbiAgICAgICAgICAgICpuZ0lmPVwiKHNlbGVjdGlvbi5zZWxlY3Rpb25UeXBlID09PSBTRUxFQ1RJT05fVFlQRS5NdWx0aSkgJiYgKHNlbGVjdGlvbi5jdXJyZW50Lmxlbmd0aCA+IDApXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImNsci1mb3JtLWNvbnRyb2wtZGlzYWJsZWRcIj5cbiAgICAgICAgICAgICAgPGNsci1jaGVja2JveC13cmFwcGVyIGNsYXNzPVwiZGF0YWdyaWQtZm9vdGVyLXNlbGVjdFwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCBjbHJDaGVja2JveCB0eXBlPVwiY2hlY2tib3hcIiBjaGVja2VkPVwiY2hlY2tlZFwiIGRpc2FibGVkPlxuICAgICAgICAgICAgICAgIDxsYWJlbD57e3NlbGVjdGlvbi5jdXJyZW50Lmxlbmd0aH19PC9sYWJlbD5cbiAgICAgICAgICAgIDwvY2xyLWNoZWNrYm94LXdyYXBwZXI+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiIWRldGFpbFNlcnZpY2UuaXNPcGVuXCI+XG4gICAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiY2xyLWRnLWNvbHVtbi10b2dnbGVcIj48L25nLWNvbnRlbnQ+XG4gICAgICAgICAgPGNsci1kZy1jb2x1bW4tdG9nZ2xlICpuZ0lmPVwiaGFzSGlkZWFibGVDb2x1bW5zICYmICF0b2dnbGVcIj48L2Nsci1kZy1jb2x1bW4tdG9nZ2xlPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYXRhZ3JpZC1mb290ZXItZGVzY3JpcHRpb25cIj5cbiAgICAgICAgICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiY2xyLWRnLXBhZ2luYXRpb25cIj48L25nLWNvbnRlbnQ+XG4gICAgYCxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MuZGF0YWdyaWQtZm9vdGVyXSc6ICd0cnVlJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyRGF0YWdyaWRGb290ZXI8VCA9IGFueT4ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgc2VsZWN0aW9uOiBTZWxlY3Rpb248VD4sXG4gICAgcHVibGljIGRldGFpbFNlcnZpY2U6IERldGFpbFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBjb2x1bW5zU2VydmljZTogQ29sdW1uc1NlcnZpY2VcbiAgKSB7fVxuXG4gIC8qIHJlZmVyZW5jZSB0byB0aGUgZW51bSBzbyB0aGF0IHRlbXBsYXRlIGNhbiBhY2Nlc3MgKi9cbiAgcHVibGljIFNFTEVDVElPTl9UWVBFID0gU2VsZWN0aW9uVHlwZTtcblxuICBAQ29udGVudENoaWxkKENsckRhdGFncmlkQ29sdW1uVG9nZ2xlKSB0b2dnbGU6IENsckRhdGFncmlkQ29sdW1uVG9nZ2xlO1xuXG4gIGdldCBoYXNIaWRlYWJsZUNvbHVtbnMoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuY29sdW1uc1NlcnZpY2UuaGFzSGlkZWFibGVDb2x1bW5zO1xuICB9XG59XG4iXX0=