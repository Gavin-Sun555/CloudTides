import { __decorate, __param } from "tslib";
/*
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input, Optional } from '@angular/core';
import { Items } from './providers/items';
import * as ɵngcc0 from '@angular/core';
let ClrDatagridItemsTrackBy = class ClrDatagridItemsTrackBy {
    constructor(_items) {
        this._items = _items;
    }
    set trackBy(value) {
        if (this._items) {
            this._items.trackBy = value;
        }
    }
};
ClrDatagridItemsTrackBy.ɵfac = function ClrDatagridItemsTrackBy_Factory(t) { return new (t || ClrDatagridItemsTrackBy)(ɵngcc0.ɵɵdirectiveInject(Items, 8)); };
ClrDatagridItemsTrackBy.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClrDatagridItemsTrackBy, selectors: [["", "ngForTrackBy", ""]], inputs: { trackBy: ["ngForTrackBy", "trackBy"] } });
ClrDatagridItemsTrackBy.ctorParameters = () => [
    { type: Items, decorators: [{ type: Optional }] }
];
__decorate([
    Input('ngForTrackBy')
], ClrDatagridItemsTrackBy.prototype, "trackBy", null);
ClrDatagridItemsTrackBy = __decorate([ __param(0, Optional())
], ClrDatagridItemsTrackBy);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrDatagridItemsTrackBy, [{
        type: Directive,
        args: [{
                selector: '[ngForTrackBy]'
            }]
    }], function () { return [{ type: Items, decorators: [{
                type: Optional
            }] }]; }, { trackBy: [{
            type: Input,
            args: ['ngForTrackBy']
        }] }); })();
export { ClrDatagridItemsTrackBy };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtaXRlbXMtdHJhY2tieS5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci9kYXRhL2RhdGFncmlkL2RhdGFncmlkLWl0ZW1zLXRyYWNrYnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBbUIsTUFBTSxlQUFlLENBQUM7QUFFNUUsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDOztBQUsxQyxJQUFhLHVCQUF1QixHQUFwQyxNQUFhLHVCQUF1QjtBQUFHLElBQ3JDLFlBQWdDLE1BQWdCO0FBQUksUUFBcEIsV0FBTSxHQUFOLE1BQU0sQ0FBVTtBQUFDLElBQUUsQ0FBQztBQUN0RCxJQUVFLElBQUksT0FBTyxDQUFDLEtBQXlCO0FBQ3ZDLFFBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO0FBQ3JCLFlBQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0FBQ2xDLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDSCxDQUFDOztvTEFBQTtBQUNEO0FBQWlELFlBVFAsS0FBSyx1QkFBaEMsUUFBUTtBQUFNO0FBRzNCO0FBQWEsSUFEWixLQUFLLENBQUMsY0FBYyxDQUFDO0FBQ3hCLHNEQUlHO0FBUlUsdUJBQXVCLG9CQUhuQyxTQUFTLENBQUMsZkFHUCxDQUNXLFdBQUEsUUFBUSxFQUFFLENBQUE7Q0FIdkIsUUFBUSxFQUFFLGdCQUFnQiwzQkFHRixHQURiLHVCQUF1QixDQVNuQztLQVZBLENBQUM7Ozs7Ozs7Ozs7b0JBV0Y7QUFBQyxTQVZZLHVCQUF1QjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDE4IFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgT3B0aW9uYWwsIFRyYWNrQnlGdW5jdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBJdGVtcyB9IGZyb20gJy4vcHJvdmlkZXJzL2l0ZW1zJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW25nRm9yVHJhY2tCeV0nLFxufSlcbmV4cG9ydCBjbGFzcyBDbHJEYXRhZ3JpZEl0ZW1zVHJhY2tCeTxUID0gYW55PiB7XG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIHByaXZhdGUgX2l0ZW1zOiBJdGVtczxUPikge31cblxuICBASW5wdXQoJ25nRm9yVHJhY2tCeScpXG4gIHNldCB0cmFja0J5KHZhbHVlOiBUcmFja0J5RnVuY3Rpb248VD4pIHtcbiAgICBpZiAodGhpcy5faXRlbXMpIHtcbiAgICAgIHRoaXMuX2l0ZW1zLnRyYWNrQnkgPSB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==