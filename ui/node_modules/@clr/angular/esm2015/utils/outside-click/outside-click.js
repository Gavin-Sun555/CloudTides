import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
let OutsideClick = class OutsideClick {
    constructor(el) {
        this.el = el;
        this.strict = false;
        this.outsideClick = new EventEmitter(false);
    }
    documentClick(event) {
        const target = event.target; // Get the element in the DOM on which the mouse was clicked
        const host = this.el.nativeElement; // Get the current actionMenu native HTML element
        if (target === host) {
            return;
        }
        if (!this.strict && host.contains(target)) {
            return;
        }
        this.outsideClick.emit(event);
    }
};
OutsideClick.ɵfac = function OutsideClick_Factory(t) { return new (t || OutsideClick)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
OutsideClick.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: OutsideClick, selectors: [["", "clrOutsideClick", ""]], hostBindings: function OutsideClick_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function OutsideClick_click_HostBindingHandler($event) { return ctx.documentClick($event); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { strict: ["clrStrict", "strict"] }, outputs: { outsideClick: "clrOutsideClick" } });
OutsideClick.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input('clrStrict')
], OutsideClick.prototype, "strict", void 0);
__decorate([
    Output('clrOutsideClick')
], OutsideClick.prototype, "outsideClick", void 0);
__decorate([
    HostListener('document:click', ['$event'])
], OutsideClick.prototype, "documentClick", null);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OutsideClick, [{
        type: Directive,
        args: [{ selector: '[clrOutsideClick]' }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { strict: [{
            type: Input,
            args: ['clrStrict']
        }], outsideClick: [{
            type: Output,
            args: ['clrOutsideClick']
        }], documentClick: [{
            type: HostListener,
            args: ['document:click', ['$event']]
        }] }); })();
export { OutsideClick };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0c2lkZS1jbGljay5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci91dGlscy9vdXRzaWRlLWNsaWNrL291dHNpZGUtY2xpY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFHakcsSUFBYSxZQUFZLEdBQXpCLE1BQWEsWUFBWTtBQUN6QixJQUFFLFlBQW9CLEVBQWM7QUFBSSxRQUFsQixPQUFFLEdBQUYsRUFBRSxDQUFZO0FBQUMsUUFFZixXQUFNLEdBQUcsS0FBSyxDQUFDO0FBQ3JDLFFBQzZCLGlCQUFZLEdBQUcsSUFBSSxZQUFZLENBQU0sS0FBSyxDQUFDLENBQUM7QUFDekUsSUFMdUMsQ0FBQztBQUN4QyxJQU1FLGFBQWEsQ0FBQyxLQUFpQjtBQUNqQyxRQUFJLE1BQU0sTUFBTSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyw0REFBNEQ7QUFDN0YsUUFBSSxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLGlEQUFpRDtBQUN6RixRQUNJLElBQUksTUFBTSxLQUFLLElBQUksRUFBRTtBQUN6QixZQUFNLE9BQU87QUFDYixTQUFLO0FBQ0wsUUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxFQUFFO0FBQy9DLFlBQU0sT0FBTztBQUNiLFNBQUs7QUFDTCxRQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2xDLElBQUUsQ0FBQztBQUNILENBQUM7Ozs7c0dBQUE7QUFDRDtBQUFzQyxZQXBCWixVQUFVO0FBQUc7QUFFakI7QUFBYSxJQUFoQyxLQUFLLENBQUMsV0FBVyxDQUFDO0FBQUMsNENBQWU7QUFFUjtBQUFhLElBQXZDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQztBQUFDLGtEQUE0QztBQUd2RTtBQUFhLElBRFosWUFBWSxDQUFDLGdCQUFnQixFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDN0MsaURBV0c7QUFuQlUsWUFBWSxvQkFEeEIsU0FBUyxDQUFDLEVBQUUsUUFBUSxFQUFFO0VBQW1CLEVBQUUsQ0FBQyxJQUNoQyxZQUFZLENBb0J4Qjs7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxTQXJCWSxZQUFZO0FBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDE4IFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIEhvc3RMaXN0ZW5lciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbY2xyT3V0c2lkZUNsaWNrXScgfSlcbmV4cG9ydCBjbGFzcyBPdXRzaWRlQ2xpY2sge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmKSB7fVxuXG4gIEBJbnB1dCgnY2xyU3RyaWN0Jykgc3RyaWN0ID0gZmFsc2U7XG5cbiAgQE91dHB1dCgnY2xyT3V0c2lkZUNsaWNrJykgb3V0c2lkZUNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KGZhbHNlKTtcblxuICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDpjbGljaycsIFsnJGV2ZW50J10pXG4gIGRvY3VtZW50Q2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7IC8vIEdldCB0aGUgZWxlbWVudCBpbiB0aGUgRE9NIG9uIHdoaWNoIHRoZSBtb3VzZSB3YXMgY2xpY2tlZFxuICAgIGNvbnN0IGhvc3QgPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQ7IC8vIEdldCB0aGUgY3VycmVudCBhY3Rpb25NZW51IG5hdGl2ZSBIVE1MIGVsZW1lbnRcblxuICAgIGlmICh0YXJnZXQgPT09IGhvc3QpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCF0aGlzLnN0cmljdCAmJiBob3N0LmNvbnRhaW5zKHRhcmdldCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5vdXRzaWRlQ2xpY2suZW1pdChldmVudCk7XG4gIH1cbn1cbiJdfQ==