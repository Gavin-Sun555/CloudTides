/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate, __param } from "tslib";
import { Directive, ElementRef, Inject, PLATFORM_ID, HostBinding } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
import * as ɵngcc0 from '@angular/core';
let ClrKeyFocusItem = class ClrKeyFocusItem {
    constructor(elementRef, platformId) {
        this.elementRef = elementRef;
        this.platformId = platformId;
    }
    get nativeElement() {
        return this.elementRef.nativeElement;
    }
    focus() {
        if (isPlatformBrowser(this.platformId)) {
            this.elementRef.nativeElement.focus();
        }
    }
};
ClrKeyFocusItem.ɵfac = function ClrKeyFocusItem_Factory(t) { return new (t || ClrKeyFocusItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };
ClrKeyFocusItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClrKeyFocusItem, selectors: [["", "clrKeyFocusItem", ""]], hostVars: 1, hostBindings: function ClrKeyFocusItem_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("tabindex", ctx.tabIndex);
    } } });
ClrKeyFocusItem.ctorParameters = () => [
    { type: ElementRef },
    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
];
__decorate([
    HostBinding('attr.tabindex')
], ClrKeyFocusItem.prototype, "tabIndex", void 0);
ClrKeyFocusItem = __decorate([ __param(1, Inject(PLATFORM_ID))
], ClrKeyFocusItem);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrKeyFocusItem, [{
        type: Directive,
        args: [{
                selector: '[clrKeyFocusItem]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: Object, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }]; }, { tabIndex: [{
            type: HostBinding,
            args: ['attr.tabindex']
        }] }); })();
export { ClrKeyFocusItem };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5LWZvY3VzLWl0ZW0uanMiLCJzb3VyY2VzIjpbIm5nOi9AY2xyL2FuZ3VsYXIvdXRpbHMvZm9jdXMva2V5LWZvY3VzL2tleS1mb2N1cy1pdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUJBQWlCLENBQUM7O0FBS3BELElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWU7QUFDNUIsSUFNRSxZQUFvQixVQUFzQixFQUErQixVQUFrQjtBQUFJLFFBQTNFLGVBQVUsR0FBVixVQUFVLENBQVk7QUFBQyxRQUE4QixlQUFVLEdBQVYsVUFBVSxDQUFRO0FBQUMsSUFBRSxDQUFDO0FBQ2pHLElBTEUsSUFBSSxhQUFhO0FBQ25CLFFBQUksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQztBQUN6QyxJQUFFLENBQUM7QUFDSCxJQUdFLEtBQUs7QUFDUCxRQUFJLElBQUksaUJBQWlCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFO0FBQzVDLFlBQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDNUMsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNILENBQUM7Ozs7V0FBQTtBQUNEO0FBQXlDLFlBUlAsVUFBVTtBQUFJLFlBQXVDLE1BQU0sdUJBQTlDLE1BQU0sU0FBQyxXQUFXO0FBQVE7QUFOekM7QUFBYSxJQUExQyxXQUFXLENBQUMsZUFBZSxDQUFDO0FBQUMsaURBQWlCO0FBRHBDLGVBQWUsb0JBSDNCLFNBQVMsQ0FBQyxVQUNULHpCQUVFLENBTzJDLFdBQUEsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFBO0FBVHhELEVBQUUsRkFTdUQsR0FQdEQsZUFBZSxDQWMzQjtBQWhCOEIsT0FDOUIsQ0FBQzs7Ozs7Ozs7Ozs7b0JBZ0JGO0FBQUMsU0FmWSxlQUFlO0FBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEluamVjdCwgUExBVEZPUk1fSUQsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpc1BsYXRmb3JtQnJvd3NlciB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tjbHJLZXlGb2N1c0l0ZW1dJyxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyS2V5Rm9jdXNJdGVtIHtcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLnRhYmluZGV4JykgdGFiSW5kZXg6IG51bWJlcjtcblxuICBnZXQgbmF0aXZlRWxlbWVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIEBJbmplY3QoUExBVEZPUk1fSUQpIHByaXZhdGUgcGxhdGZvcm1JZDogT2JqZWN0KSB7fVxuXG4gIGZvY3VzKCkge1xuICAgIGlmIChpc1BsYXRmb3JtQnJvd3Nlcih0aGlzLnBsYXRmb3JtSWQpKSB7XG4gICAgICB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICAgIH1cbiAgfVxufVxuIl19