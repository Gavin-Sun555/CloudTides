import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Injectable, Renderer2 } from '@angular/core';
// This service class adds and removes the "in-drag" class to the document body element
// through its public enter() and exit() methods.
import * as ɵngcc0 from '@angular/core';
let GlobalDragModeService = class GlobalDragModeService {
    constructor(renderer) {
        this.renderer = renderer;
    }
    enter() {
        this.renderer.addClass(document.body, 'in-drag');
    }
    exit() {
        this.renderer.removeClass(document.body, 'in-drag');
    }
};
GlobalDragModeService.ɵfac = function GlobalDragModeService_Factory(t) { return new (t || GlobalDragModeService)(ɵngcc0.ɵɵinject(ɵngcc0.Renderer2)); };
GlobalDragModeService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GlobalDragModeService, factory: GlobalDragModeService.ɵfac });
GlobalDragModeService.ctorParameters = () => [
    { type: Renderer2 }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GlobalDragModeService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc0.Renderer2 }]; }, null); })();
export { GlobalDragModeService };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLWRyYWctbW9kZS5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJuZzovQGNsci9hbmd1bGFyL3V0aWxzL2RyYWctYW5kLWRyb3AvcHJvdmlkZXJzL2dsb2JhbC1kcmFnLW1vZGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsT0FBTyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEQsdUZBQXVGO0FBQ3ZGLGlEQUFpRDs7QUFFakQsSUFBYSxxQkFBcUIsR0FBbEMsTUFBYSxxQkFBcUI7QUFDbEMsSUFBRSxZQUFvQixRQUFtQjtBQUFJLFFBQXZCLGFBQVEsR0FBUixRQUFRLENBQVc7QUFBQyxJQUFFLENBQUM7QUFDN0MsSUFDRSxLQUFLO0FBQUssUUFDUixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0FBQ3JELElBQUUsQ0FBQztBQUNILElBQ0UsSUFBSTtBQUFLLFFBQ1AsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztBQUN4RCxJQUFFLENBQUM7QUFDSCxDQUFDOzsrSEFBQTtBQUNEO0FBQStDLFlBVmYsU0FBUztBQUFHO0FBRC9CLHFCQUFxQixvQkFEakMsVUFBVSxFQUFFLElBQ0EscUJBQXFCLENBVWpDOzswRUFDRDtBQUFDLFNBWFkscUJBQXFCO0FBQ2pDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDE4IFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuaW1wb3J0IHsgSW5qZWN0YWJsZSwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8vIFRoaXMgc2VydmljZSBjbGFzcyBhZGRzIGFuZCByZW1vdmVzIHRoZSBcImluLWRyYWdcIiBjbGFzcyB0byB0aGUgZG9jdW1lbnQgYm9keSBlbGVtZW50XG4vLyB0aHJvdWdoIGl0cyBwdWJsaWMgZW50ZXIoKSBhbmQgZXhpdCgpIG1ldGhvZHMuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgR2xvYmFsRHJhZ01vZGVTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7fVxuXG4gIGVudGVyKCk6IHZvaWQge1xuICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3MoZG9jdW1lbnQuYm9keSwgJ2luLWRyYWcnKTtcbiAgfVxuXG4gIGV4aXQoKTogdm9pZCB7XG4gICAgdGhpcy5yZW5kZXJlci5yZW1vdmVDbGFzcyhkb2N1bWVudC5ib2R5LCAnaW4tZHJhZycpO1xuICB9XG59XG4iXX0=