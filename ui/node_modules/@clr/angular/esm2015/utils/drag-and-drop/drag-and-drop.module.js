import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ClrDraggable } from './draggable/draggable';
import { ClrDroppable } from './droppable/droppable';
import { ClrIfDragged } from './if-dragged';
import { ClrDragHandle } from './drag-handle';
import { ClrDraggableGhost } from './draggable-ghost';
import * as ɵngcc0 from '@angular/core';
export const CLR_DRAG_AND_DROP_DIRECTIVES = [
    ClrDraggable,
    ClrDroppable,
    ClrIfDragged,
    ClrDragHandle,
    ClrDraggableGhost,
];
let ClrDragAndDropModule = class ClrDragAndDropModule {
};
ClrDragAndDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClrDragAndDropModule });
ClrDragAndDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ClrDragAndDropModule_Factory(t) { return new (t || ClrDragAndDropModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClrDragAndDropModule, { declarations: function () { return [ClrDraggable,
        ClrDroppable,
        ClrIfDragged,
        ClrDragHandle,
        ClrDraggableGhost]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ClrDraggable,
        ClrDroppable,
        ClrIfDragged,
        ClrDragHandle,
        ClrDraggableGhost]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrDragAndDropModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [CLR_DRAG_AND_DROP_DIRECTIVES],
                entryComponents: [ClrDraggableGhost],
                exports: [CLR_DRAG_AND_DROP_DIRECTIVES]
            }]
    }], null, null); })();
export { ClrDragAndDropModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1hbmQtZHJvcC5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nOi9AY2xyL2FuZ3VsYXIvdXRpbHMvZHJhZy1hbmQtZHJvcC9kcmFnLWFuZC1kcm9wLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQVEsTUFBTSxlQUFlLENBQUM7QUFFL0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3JELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQzVDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7O0FBRXRELE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUFnQjtBQUN6RCxJQUFFLFlBQVk7QUFDZCxJQUFFLFlBQVk7QUFDZCxJQUFFLFlBQVk7QUFDZCxJQUFFLGFBQWE7QUFDZixJQUFFLGlCQUFpQjtBQUNuQixDQUFDLENBQUM7QUFRRixJQUFhLG9CQUFvQixHQUFqQyxNQUFhLG9CQUFvQjtBQUFHLENBQUEsQ0FBQTtBQUF2QixvQkFBb0Isb0JBTmhDLFFBQVEsQ0FBQyxVQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztPQUN2QixZQUFZLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQyxVQUM1QyxlQUFlLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxVQUNwQyxPQUFPLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQyxPQUN4QyxDQUFDLElBQ1csb0JBQW9CLENBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDcEM7QUFBQyxTQURZLG9CQUFvQjtBQUNqQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOCBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDbHJEcmFnZ2FibGUgfSBmcm9tICcuL2RyYWdnYWJsZS9kcmFnZ2FibGUnO1xuaW1wb3J0IHsgQ2xyRHJvcHBhYmxlIH0gZnJvbSAnLi9kcm9wcGFibGUvZHJvcHBhYmxlJztcbmltcG9ydCB7IENscklmRHJhZ2dlZCB9IGZyb20gJy4vaWYtZHJhZ2dlZCc7XG5pbXBvcnQgeyBDbHJEcmFnSGFuZGxlIH0gZnJvbSAnLi9kcmFnLWhhbmRsZSc7XG5pbXBvcnQgeyBDbHJEcmFnZ2FibGVHaG9zdCB9IGZyb20gJy4vZHJhZ2dhYmxlLWdob3N0JztcblxuZXhwb3J0IGNvbnN0IENMUl9EUkFHX0FORF9EUk9QX0RJUkVDVElWRVM6IFR5cGU8YW55PltdID0gW1xuICBDbHJEcmFnZ2FibGUsXG4gIENsckRyb3BwYWJsZSxcbiAgQ2xySWZEcmFnZ2VkLFxuICBDbHJEcmFnSGFuZGxlLFxuICBDbHJEcmFnZ2FibGVHaG9zdCxcbl07XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtDTFJfRFJBR19BTkRfRFJPUF9ESVJFQ1RJVkVTXSxcbiAgZW50cnlDb21wb25lbnRzOiBbQ2xyRHJhZ2dhYmxlR2hvc3RdLFxuICBleHBvcnRzOiBbQ0xSX0RSQUdfQU5EX0RST1BfRElSRUNUSVZFU10sXG59KVxuZXhwb3J0IGNsYXNzIENsckRyYWdBbmREcm9wTW9kdWxlIHt9XG4iXX0=