import { __decorate, __param } from "tslib";
/*
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { ChangeDetectorRef, Directive, Inject, Optional } from '@angular/core';
import { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';
import { IF_ACTIVE_ID, IfActiveService } from '../../../utils/conditional/if-active.service';
import { TabsWillyWonka } from './tabs-willy-wonka';
import * as ɵngcc0 from '@angular/core';
let ActiveOompaLoompa = class ActiveOompaLoompa extends OompaLoompa {
    constructor(cdr, willyWonka, id, ifActive) {
        if (!willyWonka) {
            throw new Error('clrTabLink and clr-tab-content should only be used inside of a clr-tabs');
        }
        super(cdr, willyWonka);
        this.ifActive = ifActive;
        this.id = id;
    }
    get flavor() {
        return this.ifActive.current === this.id;
    }
};
ActiveOompaLoompa.ɵfac = function ActiveOompaLoompa_Factory(t) { return new (t || ActiveOompaLoompa)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(TabsWillyWonka, 8), ɵngcc0.ɵɵdirectiveInject(IF_ACTIVE_ID), ɵngcc0.ɵɵdirectiveInject(IfActiveService)); };
ActiveOompaLoompa.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ActiveOompaLoompa, selectors: [["", "clrTabLink", ""], ["clr-tab-content"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
ActiveOompaLoompa.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: TabsWillyWonka, decorators: [{ type: Optional }] },
    { type: Number, decorators: [{ type: Inject, args: [IF_ACTIVE_ID,] }] },
    { type: IfActiveService }
];
ActiveOompaLoompa = __decorate([ __param(1, Optional()),
    __param(2, Inject(IF_ACTIVE_ID))
], ActiveOompaLoompa);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ActiveOompaLoompa, [{
        type: Directive,
        args: [{ selector: '[clrTabLink], clr-tab-content' }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: TabsWillyWonka, decorators: [{
                type: Optional
            }] }, { type: Number, decorators: [{
                type: Inject,
                args: [IF_ACTIVE_ID]
            }] }, { type: IfActiveService }]; }, null); })();
export { ActiveOompaLoompa };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZlLW9vbXBhLWxvb21wYS5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci9sYXlvdXQvdGFicy9jaG9jb2xhdGUvYWN0aXZlLW9vbXBhLWxvb21wYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRS9FLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUNwRSxPQUFPLEVBQUUsWUFBWSxFQUFFLGVBQWUsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBRTdGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7QUFHcEQsSUFBYSxpQkFBaUIsR0FBOUIsTUFBYSxpQkFBa0IsU0FBUSxXQUFXO0FBQ2xELElBR0UsWUFDRSxHQUFzQixFQUNWLFVBQTBCLEVBQ2hCLEVBQVUsRUFDaEMsUUFBeUI7QUFDMUIsUUFDQyxJQUFJLENBQUMsVUFBVSxFQUFFO0FBQ3JCLFlBQU0sTUFBTSxJQUFJLEtBQUssQ0FBQyx5RUFBeUUsQ0FBQyxDQUFDO0FBQ2pHLFNBQUs7QUFDTCxRQUFJLEtBQUssQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDM0IsUUFBSSxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztBQUM3QixRQUFJLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBQ2pCLElBQUUsQ0FBQztBQUNILElBQ0UsSUFBSSxNQUFNO0FBQ1osUUFBSSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxLQUFLLElBQUksQ0FBQyxFQUFFLENBQUM7QUFDN0MsSUFBRSxDQUFDO0FBQ0gsQ0FBQzs7d0xBQUE7QUFDRDtBQUEyQyxZQWpCbEMsaUJBQWlCO0FBQ3hCLFlBQTBCLGNBQWMsdUJBQXJDLFFBQVE7QUFBTyx5Q0FDZixNQUFNLFNBQUMsWUFBWTtBQUFTLFlBQ25CLGVBQWU7QUFDM0I7QUFUVyxpQkFBaUIsb0JBRDdCLFNBQVMsQ0FBQyxFQUFFLGpCQUNULENBTUMsV0FBQSxRQUFRLEVBQUUsQ0FBQTtBQVBNLEVBQUUsK0JBQStCLEVBQUUsQ0FBQyxwQ0FPeEMsSUFDWixXQUFBLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQTtBQUFDLEdBUGIsaUJBQWlCLENBcUI3Qjs7Ozs7Ozs7OzZEQUNEO0FBQUMsU0F0QlksaUJBQWlCO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMTggVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRGlyZWN0aXZlLCBJbmplY3QsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE9vbXBhTG9vbXBhIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvY2hvY29sYXRlL29vbXBhLWxvb21wYSc7XG5pbXBvcnQgeyBJRl9BQ1RJVkVfSUQsIElmQWN0aXZlU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL2NvbmRpdGlvbmFsL2lmLWFjdGl2ZS5zZXJ2aWNlJztcblxuaW1wb3J0IHsgVGFic1dpbGx5V29ua2EgfSBmcm9tICcuL3RhYnMtd2lsbHktd29ua2EnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbY2xyVGFiTGlua10sIGNsci10YWItY29udGVudCcgfSlcbmV4cG9ydCBjbGFzcyBBY3RpdmVPb21wYUxvb21wYSBleHRlbmRzIE9vbXBhTG9vbXBhIHtcbiAgcHJpdmF0ZSBpZkFjdGl2ZTogSWZBY3RpdmVTZXJ2aWNlO1xuICBwcml2YXRlIGlkOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBAT3B0aW9uYWwoKSB3aWxseVdvbmthOiBUYWJzV2lsbHlXb25rYSxcbiAgICBASW5qZWN0KElGX0FDVElWRV9JRCkgaWQ6IG51bWJlcixcbiAgICBpZkFjdGl2ZTogSWZBY3RpdmVTZXJ2aWNlXG4gICkge1xuICAgIGlmICghd2lsbHlXb25rYSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdjbHJUYWJMaW5rIGFuZCBjbHItdGFiLWNvbnRlbnQgc2hvdWxkIG9ubHkgYmUgdXNlZCBpbnNpZGUgb2YgYSBjbHItdGFicycpO1xuICAgIH1cbiAgICBzdXBlcihjZHIsIHdpbGx5V29ua2EpO1xuICAgIHRoaXMuaWZBY3RpdmUgPSBpZkFjdGl2ZTtcbiAgICB0aGlzLmlkID0gaWQ7XG4gIH1cblxuICBnZXQgZmxhdm9yKCkge1xuICAgIHJldHVybiB0aGlzLmlmQWN0aXZlLmN1cnJlbnQgPT09IHRoaXMuaWQ7XG4gIH1cbn1cbiJdfQ==