import { __decorate, __param } from "tslib";
/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, ContentChild, Inject } from '@angular/core';
import { IF_ACTIVE_ID, IF_ACTIVE_ID_PROVIDER, IfActiveService } from '../../utils/conditional/if-active.service';
import { AriaService } from './providers/aria.service';
import { TabsService } from './providers/tabs.service';
import { ClrTabContent } from './tab-content';
import { ClrTabLink } from './tab-link.directive';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
let ClrTab = class ClrTab {
    constructor(ifActiveService, id, tabsService) {
        this.ifActiveService = ifActiveService;
        this.id = id;
        this.tabsService = tabsService;
        tabsService.register(this);
    }
    ngOnDestroy() {
        this.tabsService.unregister(this);
    }
    get active() {
        return this.ifActiveService.current === this.id;
    }
};
ClrTab.ɵfac = function ClrTab_Factory(t) { return new (t || ClrTab)(ɵngcc0.ɵɵdirectiveInject(IfActiveService), ɵngcc0.ɵɵdirectiveInject(IF_ACTIVE_ID), ɵngcc0.ɵɵdirectiveInject(TabsService)); };
ClrTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrTab, selectors: [["clr-tab"]], contentQueries: function ClrTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, ClrTabLink, true);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, ClrTabContent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabLink = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabContent = _t.first);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([IF_ACTIVE_ID_PROVIDER, AriaService])], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ClrTab_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
ClrTab.ctorParameters = () => [
    { type: IfActiveService },
    { type: Number, decorators: [{ type: Inject, args: [IF_ACTIVE_ID,] }] },
    { type: TabsService }
];
__decorate([
    ContentChild(ClrTabLink, { static: true })
], ClrTab.prototype, "tabLink", void 0);
__decorate([
    ContentChild(ClrTabContent, { static: true })
], ClrTab.prototype, "tabContent", void 0);
ClrTab = __decorate([ __param(1, Inject(IF_ACTIVE_ID))
], ClrTab);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrTab, [{
        type: Component,
        args: [{
                selector: 'clr-tab',
                template: `
        <ng-content></ng-content>
    `,
                providers: [IF_ACTIVE_ID_PROVIDER, AriaService]
            }]
    }], function () { return [{ type: IfActiveService }, { type: Number, decorators: [{
                type: Inject,
                args: [IF_ACTIVE_ID]
            }] }, { type: TabsService }]; }, { tabLink: [{
            type: ContentChild,
            args: [ClrTabLink, { static: true }]
        }], tabContent: [{
            type: ContentChild,
            args: [ClrTabContent, { static: true }]
        }] }); })();
export { ClrTab };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLmpzIiwic291cmNlcyI6WyJuZzovQGNsci9hbmd1bGFyL2xheW91dC90YWJzL3RhYi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWhFLE9BQU8sRUFBRSxZQUFZLEVBQUUscUJBQXFCLEVBQUUsZUFBZSxFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFFakgsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7OztBQVNsRCxJQUFhLE1BQU0sR0FBbkIsTUFBYSxNQUFNO0FBQ25CLElBS0UsWUFDUyxlQUFnQyxFQUNWLEVBQVUsRUFDL0IsV0FBd0I7QUFDakMsUUFIUSxvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7QUFBQyxRQUNYLE9BQUUsR0FBRixFQUFFLENBQVE7QUFBQyxRQUNoQyxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtBQUNwQyxRQUNJLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDL0IsSUFBRSxDQUFDO0FBQ0gsSUFDRSxXQUFXO0FBQ2IsUUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN0QyxJQUFFLENBQUM7QUFDSCxJQUNFLElBQUksTUFBTTtBQUNaLFFBQUksT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sS0FBSyxJQUFJLENBQUMsRUFBRSxDQUFDO0FBQ3BELElBQUUsQ0FBQztBQUNILENBQUM7Ozs7Ozs7Ozs7Ozs2QkFBQTtBQUNEO0FBQWdDLFlBZkosZUFBZTtBQUN6Qyx5Q0FBRyxNQUFNLFNBQUMsWUFBWTtBQUFTLFlBQ1IsV0FBVztBQUNsQztBQVJBO0FBQWEsSUFEWixZQUFZLENBQUMsVUFBVSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDO0FBQzdDLHVDQUFzQjtBQUVwQjtBQUFhLElBRFosWUFBWSxDQUFDLGFBQWEsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQztBQUNoRCwwQ0FBNEI7QUFKZixNQUFNLG9CQVBsQixTQUFTLENBQUMsVUFDVCxRQUFRLGpDQU1OLENBUUMsV0FBQSxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUE7Q0FkYixTQUFTLFZBY0ssR0FSYixNQUFNLENBcUJsQjtRQTFCQyxRQUFRLEVBQUUseUNBRVA7SUFDSCxTQUFTLEVBQUUsQ0FBQztZQUFxQixFQUFFO1FBQVcsQ0FBQyxNQUNoRCxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7b0JBdUJGO0FBQUMsU0F0QlksTUFBTTtBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cbmltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkLCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgSUZfQUNUSVZFX0lELCBJRl9BQ1RJVkVfSURfUFJPVklERVIsIElmQWN0aXZlU2VydmljZSB9IGZyb20gJy4uLy4uL3V0aWxzL2NvbmRpdGlvbmFsL2lmLWFjdGl2ZS5zZXJ2aWNlJztcblxuaW1wb3J0IHsgQXJpYVNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy9hcmlhLnNlcnZpY2UnO1xuaW1wb3J0IHsgVGFic1NlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy90YWJzLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2xyVGFiQ29udGVudCB9IGZyb20gJy4vdGFiLWNvbnRlbnQnO1xuaW1wb3J0IHsgQ2xyVGFiTGluayB9IGZyb20gJy4vdGFiLWxpbmsuZGlyZWN0aXZlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY2xyLXRhYicsXG4gIHRlbXBsYXRlOiBgXG4gICAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICBgLFxuICBwcm92aWRlcnM6IFtJRl9BQ1RJVkVfSURfUFJPVklERVIsIEFyaWFTZXJ2aWNlXSxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyVGFiIHtcbiAgQENvbnRlbnRDaGlsZChDbHJUYWJMaW5rLCB7IHN0YXRpYzogdHJ1ZSB9KVxuICB0YWJMaW5rOiBDbHJUYWJMaW5rO1xuICBAQ29udGVudENoaWxkKENsclRhYkNvbnRlbnQsIHsgc3RhdGljOiB0cnVlIH0pXG4gIHRhYkNvbnRlbnQ6IENsclRhYkNvbnRlbnQ7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGlmQWN0aXZlU2VydmljZTogSWZBY3RpdmVTZXJ2aWNlLFxuICAgIEBJbmplY3QoSUZfQUNUSVZFX0lEKSBwdWJsaWMgaWQ6IG51bWJlcixcbiAgICBwcml2YXRlIHRhYnNTZXJ2aWNlOiBUYWJzU2VydmljZVxuICApIHtcbiAgICB0YWJzU2VydmljZS5yZWdpc3Rlcih0aGlzKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMudGFic1NlcnZpY2UudW5yZWdpc3Rlcih0aGlzKTtcbiAgfVxuXG4gIGdldCBhY3RpdmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaWZBY3RpdmVTZXJ2aWNlLmN1cnJlbnQgPT09IHRoaXMuaWQ7XG4gIH1cbn1cbiJdfQ==