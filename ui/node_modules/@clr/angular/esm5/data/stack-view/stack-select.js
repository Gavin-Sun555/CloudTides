/*
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
/**
 * Undocumented experimental feature: inline editing.
 *
 * TODO: Offer a a way to customize the value displayed, plain value may be unreadable.
 */
import { __decorate, __extends } from "tslib";
import { Component } from '@angular/core';
import { StackControl } from './stack-control';
import { ClrStackView } from './stack-view';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/forms';

function ClrStackSelect_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.model);
} }
function ClrStackSelect_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "select", 3);
    ɵngcc0.ɵɵlistener("ngModelChange", function ClrStackSelect_div_1_Template_select_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.model = $event; });
    ɵngcc0.ɵɵprojection(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.model);
} }
var _c0 = ["*"];
var ClrStackSelect = /** @class */ (function (_super) {
    __extends(ClrStackSelect, _super);
    function ClrStackSelect(stackView) {
        var _this = _super.call(this, stackView) || this;
        _this.stackView = stackView;
        return _this;
    }
    ClrStackSelect.ctorParameters = function () { return [
        { type: ClrStackView }
    ]; };
ClrStackSelect.ɵfac = function ClrStackSelect_Factory(t) { return new (t || ClrStackSelect)(ɵngcc0.ɵɵdirectiveInject(ClrStackView)); };
ClrStackSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrStackSelect, selectors: [["clr-stack-select"]], inputs: { model: ["clrModel", "model"] }, outputs: { modelChange: "clrModelChange" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 2, consts: [[4, "ngIf"], ["class", "select", 4, "ngIf"], [1, "select"], [3, "ngModel", "ngModelChange"]], template: function ClrStackSelect_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ClrStackSelect_span_0_Template, 2, 1, "span", 0);
        ɵngcc0.ɵɵtemplate(1, ClrStackSelect_div_1_Template, 3, 1, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.stackView.editing);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.stackView.editing);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.SelectControlValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrStackSelect, [{
        type: Component,
        args: [{
                selector: 'clr-stack-select',
                inputs: ['model: clrModel'],
                outputs: ['modelChange: clrModelChange'],
                template: "\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <div class=\"select\" *ngIf=\"stackView.editing\" >\n            <select [(ngModel)]=\"model\">\n                <ng-content></ng-content>\n            </select>\n        </div>\n    "
            }]
    }], function () { return [{ type: ClrStackView }]; }, null); })();
    return ClrStackSelect;
}(StackControl));
export { ClrStackSelect };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2stc2VsZWN0LmpzIiwic291cmNlcyI6WyJuZzovQGNsci9hbmd1bGFyL2RhdGEvc3RhY2stdmlldy9zdGFjay1zZWxlY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sY0FBYyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZTVDO0FBQ0ssSUFEK0Isa0NBQVk7QUFBQyxJQUMvQyx3QkFBbUIsU0FBdUI7QUFDNUMsUUFERSxZQUNFLGtCQUFNLFNBQVMsQ0FBQyxTQUNqQjtBQUNILFFBSHFCLGVBQVMsR0FBVCxTQUFTLENBQWM7QUFBQztBQUMxQixJQUNqQixDQUFDO0FBQ0g7QUFDeUQsZ0JBSnpCLFlBQVk7QUFBRztJQURsQyxjQUFjLHdCQWIxQixTQUFTLENBQUMsY0FDVCxRQUFRLEVBQUUsa0JBQWtCLGNBQzVCLE1BQU0sRUFBRSxDQUFDLGlCQUFpQixDQUFDO2FBQzNCLE9BQU8sRUFBRSxDQUFDLDZCQUE2QixDQUFDLGNBQ3hDLFFBQVEsRUFBRSxnUUFPUCxVQUNKLENBQUMsUUFDVyxjQUFjLENBSTFCOzs7Ozs7Ozs7Ozs7Ozs7OztzRUFDRDtBQUFDLElBREQscUJBQUM7QUFDQSxDQURBLEFBSkQsQ0FBb0MsWUFBWSxHQUkvQztBQUNELFNBTGEsY0FBYztBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDE4IFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuLyoqXG4gKiBVbmRvY3VtZW50ZWQgZXhwZXJpbWVudGFsIGZlYXR1cmU6IGlubGluZSBlZGl0aW5nLlxuICpcbiAqIFRPRE86IE9mZmVyIGEgYSB3YXkgdG8gY3VzdG9taXplIHRoZSB2YWx1ZSBkaXNwbGF5ZWQsIHBsYWluIHZhbHVlIG1heSBiZSB1bnJlYWRhYmxlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3RhY2tDb250cm9sIH0gZnJvbSAnLi9zdGFjay1jb250cm9sJztcbmltcG9ydCB7IENsclN0YWNrVmlldyB9IGZyb20gJy4vc3RhY2stdmlldyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Nsci1zdGFjay1zZWxlY3QnLFxuICBpbnB1dHM6IFsnbW9kZWw6IGNsck1vZGVsJ10sXG4gIG91dHB1dHM6IFsnbW9kZWxDaGFuZ2U6IGNsck1vZGVsQ2hhbmdlJ10sXG4gIHRlbXBsYXRlOiBgXG4gICAgICAgIDxzcGFuICpuZ0lmPVwiIXN0YWNrVmlldy5lZGl0aW5nXCI+e3ttb2RlbH19PC9zcGFuPlxuICAgICAgICA8ZGl2IGNsYXNzPVwic2VsZWN0XCIgKm5nSWY9XCJzdGFja1ZpZXcuZWRpdGluZ1wiID5cbiAgICAgICAgICAgIDxzZWxlY3QgWyhuZ01vZGVsKV09XCJtb2RlbFwiPlxuICAgICAgICAgICAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICA8L2Rpdj5cbiAgICBgLFxufSlcbmV4cG9ydCBjbGFzcyBDbHJTdGFja1NlbGVjdCBleHRlbmRzIFN0YWNrQ29udHJvbCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBzdGFja1ZpZXc6IENsclN0YWNrVmlldykge1xuICAgIHN1cGVyKHN0YWNrVmlldyk7XG4gIH1cbn1cbiJdfQ==