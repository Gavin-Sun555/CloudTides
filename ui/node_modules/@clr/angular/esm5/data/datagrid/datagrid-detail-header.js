import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component } from '@angular/core';
import { DetailService } from './providers/detail.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../utils/focus/focus-on-view-init/focus-on-view-init';
import * as ɵngcc2 from '../../icon/icon';

var _c0 = ["*"];
var ClrDatagridDetailHeader = /** @class */ (function () {
    function ClrDatagridDetailHeader(detailService, commonStrings) {
        this.detailService = detailService;
        this.commonStrings = commonStrings;
    }
    Object.defineProperty(ClrDatagridDetailHeader.prototype, "titleId", {
        get: function () {
            return this.detailService.id + "-title";
        },
        enumerable: true,
        configurable: true
    });
    ClrDatagridDetailHeader.ctorParameters = function () { return [
        { type: DetailService },
        { type: ClrCommonStringsService }
    ]; };
ClrDatagridDetailHeader.ɵfac = function ClrDatagridDetailHeader_Factory(t) { return new (t || ClrDatagridDetailHeader)(ɵngcc0.ɵɵdirectiveInject(DetailService), ɵngcc0.ɵɵdirectiveInject(ClrCommonStringsService)); };
ClrDatagridDetailHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrDatagridDetailHeader, selectors: [["clr-dg-detail-header"]], hostVars: 2, hostBindings: function ClrDatagridDetailHeader_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("datagrid-detail-header", true);
    } }, ngContentSelectors: _c0, decls: 5, vars: 2, consts: [["clrFocusOnViewInit", "", 1, "datagrid-detail-header-title", 3, "id"], [1, "datagrid-detail-pane-close"], ["type", "button", 1, "btn", "btn-link", 3, "click"], ["size", "24", "shape", "times"]], template: function ClrDatagridDetailHeader_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelementStart(3, "button", 2);
        ɵngcc0.ɵɵlistener("click", function ClrDatagridDetailHeader_Template_button_click_3_listener() { return ctx.detailService.close(); });
        ɵngcc0.ɵɵelement(4, "clr-icon", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("id", ctx.titleId);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵattribute("aria-label", ctx.commonStrings.keys.close);
    } }, directives: [ɵngcc1.ClrFocusOnViewInit, ɵngcc2.ClrIconCustomTag], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrDatagridDetailHeader, [{
        type: Component,
        args: [{
                selector: 'clr-dg-detail-header',
                host: {
                    '[class.datagrid-detail-header]': 'true'
                },
                template: "\n    <div class=\"datagrid-detail-header-title\" clrFocusOnViewInit [id]=\"titleId\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"datagrid-detail-pane-close\">\n      <button type=\"button\" \n              class=\"btn btn-link\" \n              (click)=\"detailService.close()\" \n              [attr.aria-label]=\"commonStrings.keys.close\">\n        <clr-icon size=\"24\" shape=\"times\"></clr-icon>\n      </button>\n    </div>\n  "
            }]
    }], function () { return [{ type: DetailService }, { type: ClrCommonStringsService }]; }, null); })();
    return ClrDatagridDetailHeader;
}());
export { ClrDatagridDetailHeader };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtZGV0YWlsLWhlYWRlci5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci9kYXRhL2RhdGFncmlkL2RhdGFncmlkLWRldGFpbC1oZWFkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzNELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDOzs7Ozs7QUFxQmxGO0FBRUUsSUFHQSxpQ0FBbUIsYUFBNEIsRUFBUyxhQUFzQztBQUFJLFFBQS9FLGtCQUFhLEdBQWIsYUFBYSxDQUFlO0FBQUMsUUFBUSxrQkFBYSxHQUFiLGFBQWEsQ0FBeUI7QUFBQyxJQUFFLENBQUM7QUFDcEcsSUFMRSxzQkFBSSw0Q0FBTztBQUFJLGFBQWY7QUFBYyxZQUNaLE9BQVUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLFdBQVEsQ0FBQztBQUM1QyxRQUFFLENBQUM7QUFFSDtBQUEwQjtBQUEyQixPQUZsRDtBQUNIO0FBQ21FLGdCQUEvQixhQUFhO0FBQUksZ0JBQW9CLHVCQUF1QjtBQUFHO0lBTHRGLHVCQUF1Qix3QkFuQm5DLFNBQVMsQ0FBQyxjQUNULFFBQVEsRUFBRSxzQkFBc0IsY0FDaEMsSUFBSSxFQUFFLGtCQUNKLGdDQUFnQyxFQUFFLE1BQU0sZUFDekMsY0FDRDtPQUFRLEVBQUU7O29MQVlULFVBQ0YsQ0FBQyxRQUNXLHVCQUF1QixDQU1uQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswR0FDRDtBQUFDLElBREQsOEJBQUM7QUFDQSxDQURBLEFBTkQsSUFNQztBQUNELFNBUGEsdUJBQXVCO0FBQ25DIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEZXRhaWxTZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvZGV0YWlsLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UgfSBmcm9tICcuLi8uLi91dGlscy9pMThuL2NvbW1vbi1zdHJpbmdzLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjbHItZGctZGV0YWlsLWhlYWRlcicsXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzLmRhdGFncmlkLWRldGFpbC1oZWFkZXJdJzogJ3RydWUnLFxuICB9LFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJkYXRhZ3JpZC1kZXRhaWwtaGVhZGVyLXRpdGxlXCIgY2xyRm9jdXNPblZpZXdJbml0IFtpZF09XCJ0aXRsZUlkXCI+XG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImRhdGFncmlkLWRldGFpbC1wYW5lLWNsb3NlXCI+XG4gICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBcbiAgICAgICAgICAgICAgY2xhc3M9XCJidG4gYnRuLWxpbmtcIiBcbiAgICAgICAgICAgICAgKGNsaWNrKT1cImRldGFpbFNlcnZpY2UuY2xvc2UoKVwiIFxuICAgICAgICAgICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cImNvbW1vblN0cmluZ3Mua2V5cy5jbG9zZVwiPlxuICAgICAgICA8Y2xyLWljb24gc2l6ZT1cIjI0XCIgc2hhcGU9XCJ0aW1lc1wiPjwvY2xyLWljb24+XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyRGF0YWdyaWREZXRhaWxIZWFkZXIge1xuICBnZXQgdGl0bGVJZCgpIHtcbiAgICByZXR1cm4gYCR7dGhpcy5kZXRhaWxTZXJ2aWNlLmlkfS10aXRsZWA7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZGV0YWlsU2VydmljZTogRGV0YWlsU2VydmljZSwgcHVibGljIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlKSB7fVxufVxuIl19