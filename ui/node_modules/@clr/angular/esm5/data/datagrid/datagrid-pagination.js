import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, ContentChild, EventEmitter, Input, Output, ViewChild, } from '@angular/core';
import { Page } from './providers/page';
import { ClrDatagridPageSize } from './datagrid-page-size';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { DetailService } from './providers/detail.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../../icon/icon';

var _c0 = ["currentPageInput"];
function ClrDatagridPagination_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵprojection(1, 1);
    ɵngcc0.ɵɵelementEnd();
} }
function ClrDatagridPagination_ng_container_0_div_4_input_5_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 16, 17);
    ɵngcc0.ɵɵlistener("keydown.enter", function ClrDatagridPagination_ng_container_0_div_4_input_5_Template_input_keydown_enter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r8 = ɵngcc0.ɵɵnextContext(3); return ctx_r8.updateCurrentPage($event); })("blur", function ClrDatagridPagination_ng_container_0_div_4_input_5_Template_input_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r10 = ɵngcc0.ɵɵnextContext(3); return ctx_r10.updateCurrentPage($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("size", ctx_r4.page.last.toString().length)("value", ctx_r4.page.current);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r4.commonStrings.keys.currentPage);
} }
function ClrDatagridPagination_ng_container_0_div_4_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r6.page.current);
} }
function ClrDatagridPagination_ng_container_0_div_4_Template(rf, ctx) { if (rf & 1) {
    var _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelementStart(1, "button", 6);
    ɵngcc0.ɵɵlistener("click", function ClrDatagridPagination_ng_container_0_div_4_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.page.current = 1; });
    ɵngcc0.ɵɵelement(2, "clr-icon", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 8);
    ɵngcc0.ɵɵlistener("click", function ClrDatagridPagination_ng_container_0_div_4_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.page.current = ctx_r13.page.current - 1; });
    ɵngcc0.ɵɵelement(4, "clr-icon", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, ClrDatagridPagination_ng_container_0_div_4_input_5_Template, 2, 3, "input", 10);
    ɵngcc0.ɵɵtemplate(6, ClrDatagridPagination_ng_container_0_div_4_ng_template_6_Template, 2, 1, "ng-template", null, 11, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtext(8, " \u00A0/\u00A0");
    ɵngcc0.ɵɵelementStart(9, "span");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "button", 12);
    ɵngcc0.ɵɵlistener("click", function ClrDatagridPagination_ng_container_0_div_4_Template_button_click_11_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.page.current = ctx_r14.page.current + 1; });
    ɵngcc0.ɵɵelement(12, "clr-icon", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "button", 14);
    ɵngcc0.ɵɵlistener("click", function ClrDatagridPagination_ng_container_0_div_4_Template_button_click_13_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r15 = ɵngcc0.ɵɵnextContext(2); return ctx_r15.page.current = ctx_r15.page.last; });
    ɵngcc0.ɵɵelement(14, "clr-icon", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r5 = ɵngcc0.ɵɵreference(7);
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", ctx_r3.page.current <= 1);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r3.commonStrings.keys.firstPage);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r3.page.current <= 1);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r3.commonStrings.keys.previousPage);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r3.disableCurrentPageInput)("ngIfElse", _r5);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r3.commonStrings.keys.totalPages);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.page.last);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", ctx_r3.page.current >= ctx_r3.page.last);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r3.commonStrings.keys.nextPage);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r3.page.current >= ctx_r3.page.last);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r3.commonStrings.keys.lastPage);
} }
function ClrDatagridPagination_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ClrDatagridPagination_ng_container_0_div_1_Template, 2, 0, "div", 1);
    ɵngcc0.ɵɵelementStart(2, "div", 2);
    ɵngcc0.ɵɵprojection(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, ClrDatagridPagination_ng_container_0_div_4_Template, 15, 12, "div", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0._pageSizeComponent);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.page.last > 1);
} }
function ClrDatagridPagination_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    var _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 18);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 5);
    ɵngcc0.ɵɵelementStart(4, "button", 8);
    ɵngcc0.ɵɵlistener("click", function ClrDatagridPagination_ng_container_1_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r17); var ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.page.current = ctx_r16.page.current - 1; });
    ɵngcc0.ɵɵelement(5, "clr-icon", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "span");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "button", 12);
    ɵngcc0.ɵɵlistener("click", function ClrDatagridPagination_ng_container_1_Template_button_click_8_listener() { ɵngcc0.ɵɵrestoreView(_r17); var ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.page.current = ctx_r18.page.current + 1; });
    ɵngcc0.ɵɵelement(9, "clr-icon", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate3(" ", ctx_r1.page.firstItem + 1, "-", ctx_r1.page.lastItem + 1, " / ", ctx_r1.page.totalItems, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r1.page.current <= 1);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r1.commonStrings.keys.previousPage);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.page.current);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", ctx_r1.page.current >= ctx_r1.page.last);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r1.commonStrings.keys.nextPage);
} }
var _c1 = ["*", [["clr-dg-page-size"]]];
var _c2 = ["*", "clr-dg-page-size"];
var ClrDatagridPagination = /** @class */ (function () {
    function ClrDatagridPagination(page, commonStrings, detailService) {
        this.page = page;
        this.commonStrings = commonStrings;
        this.detailService = detailService;
        this.currentChanged = new EventEmitter(false);
        this.page.activated = true;
    }
    /**********
     * Subscription to the Page service for page changes.
     * Note: this only emits after the datagrid is initialized/stabalized and the page changes.
     */
    ClrDatagridPagination.prototype.ngOnInit = function () {
        var _this = this;
        /*
         * Default page size is 10.
         * The reason we set it here and not in the provider itself is because
         * we don't want pagination if this component isn't present in the datagrid.
         */
        if (!this.page.size) {
            this.page.size = 10;
        }
        this._pageSubscription = this.page.change.subscribe(function (current) { return _this.currentChanged.emit(current); });
    };
    ClrDatagridPagination.prototype.ngOnDestroy = function () {
        this.page.resetPageSize(true);
        if (this._pageSubscription) {
            this._pageSubscription.unsubscribe();
        }
    };
    Object.defineProperty(ClrDatagridPagination.prototype, "pageSize", {
        /**
         * Page size
         */
        get: function () {
            return this.page.size;
        },
        set: function (size) {
            if (typeof size === 'number') {
                this.page.size = size;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrDatagridPagination.prototype, "totalItems", {
        /**
         * Total items (needed to guess the last page)
         */
        get: function () {
            return this.page.totalItems;
        },
        set: function (total) {
            if (typeof total === 'number') {
                this.page.totalItems = total;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrDatagridPagination.prototype, "lastPage", {
        /**
         * Last page
         */
        get: function () {
            return this.page.last;
        },
        set: function (last) {
            if (typeof last === 'number') {
                this.page.last = last;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrDatagridPagination.prototype, "currentPage", {
        /**
         * Current page
         */
        get: function () {
            return this.page.current;
        },
        set: function (page) {
            if (typeof page === 'number') {
                this.page.current = page;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Moves to the previous page if it exists
     */
    ClrDatagridPagination.prototype.previous = function () {
        this.page.previous();
    };
    /**
     * Moves to the next page if it exists
     */
    ClrDatagridPagination.prototype.next = function () {
        this.page.next();
    };
    Object.defineProperty(ClrDatagridPagination.prototype, "firstItem", {
        /**
         * Index of the first item displayed on the current page, starting at 0, -1 if none displayed
         */
        get: function () {
            return this.page.firstItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrDatagridPagination.prototype, "lastItem", {
        /**
         * Index of the last item displayed on the current page, starting at 0, -1 if none displayed
         */
        get: function () {
            return this.page.lastItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrDatagridPagination.prototype, "middlePages", {
        /**
         * Conditionally adds page numbers before and after the current page
         */
        get: function () {
            var middlePages = [];
            if (this.page.current > 1) {
                middlePages.push(this.page.current - 1);
            }
            middlePages.push(this.page.current);
            if (this.page.current < this.page.last) {
                middlePages.push(this.page.current + 1);
            }
            return middlePages;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * We only update the pagination's current page on blur of the input field, or
     * when they press enter.
     */
    ClrDatagridPagination.prototype.updateCurrentPage = function (event) {
        var parsed = parseInt(event.target.value, 10);
        // if the input value, is not a number, we don't update the page
        if (!isNaN(parsed)) {
            if (parsed < 1) {
                this.page.current = 1;
            }
            else if (parsed > this.page.last) {
                this.page.current = this.page.last;
            }
            else {
                this.page.current = parsed;
            }
        }
        /**
         * Set the input's value to the new current page. This is needed because the code
         * above may have changed the value from what the user entered in.
         */
        this.currentPageInputRef.nativeElement.value = this.page.current;
    };
    ClrDatagridPagination.ctorParameters = function () { return [
        { type: Page },
        { type: ClrCommonStringsService },
        { type: DetailService }
    ]; };
    __decorate([
        ContentChild(ClrDatagridPageSize)
    ], ClrDatagridPagination.prototype, "_pageSizeComponent", void 0);
    __decorate([
        ViewChild('currentPageInput')
    ], ClrDatagridPagination.prototype, "currentPageInputRef", void 0);
    __decorate([
        Input('clrDgPageInputDisabled')
    ], ClrDatagridPagination.prototype, "disableCurrentPageInput", void 0);
    __decorate([
        Input('clrDgPageSize')
    ], ClrDatagridPagination.prototype, "pageSize", null);
    __decorate([
        Input('clrDgTotalItems')
    ], ClrDatagridPagination.prototype, "totalItems", null);
    __decorate([
        Input('clrDgLastPage')
    ], ClrDatagridPagination.prototype, "lastPage", null);
    __decorate([
        Input('clrDgPage')
    ], ClrDatagridPagination.prototype, "currentPage", null);
    __decorate([
        Output('clrDgPageChange')
    ], ClrDatagridPagination.prototype, "currentChanged", void 0);
ClrDatagridPagination.ɵfac = function ClrDatagridPagination_Factory(t) { return new (t || ClrDatagridPagination)(ɵngcc0.ɵɵdirectiveInject(Page), ɵngcc0.ɵɵdirectiveInject(ClrCommonStringsService), ɵngcc0.ɵɵdirectiveInject(DetailService)); };
ClrDatagridPagination.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrDatagridPagination, selectors: [["clr-dg-pagination"]], contentQueries: function ClrDatagridPagination_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ClrDatagridPageSize, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._pageSizeComponent = _t.first);
    } }, viewQuery: function ClrDatagridPagination_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.currentPageInputRef = _t.first);
    } }, hostVars: 2, hostBindings: function ClrDatagridPagination_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("pagination", true);
    } }, inputs: { pageSize: ["clrDgPageSize", "pageSize"], totalItems: ["clrDgTotalItems", "totalItems"], lastPage: ["clrDgLastPage", "lastPage"], currentPage: ["clrDgPage", "currentPage"], disableCurrentPageInput: ["clrDgPageInputDisabled", "disableCurrentPageInput"] }, outputs: { currentChanged: "clrDgPageChange" }, ngContentSelectors: _c2, decls: 2, vars: 2, consts: [[4, "ngIf"], ["class", "pagination-size", 4, "ngIf"], [1, "pagination-description"], ["class", "pagination-list", 4, "ngIf"], [1, "pagination-size"], [1, "pagination-list"], ["type", "button", 1, "pagination-first", 3, "disabled", "click"], ["shape", "step-forward-2 down"], ["type", "button", 1, "pagination-previous", 3, "disabled", "click"], ["shape", "angle left"], ["type", "text", "class", "pagination-current clr-input", 3, "size", "value", "keydown.enter", "blur", 4, "ngIf", "ngIfElse"], ["readOnly", ""], ["type", "button", 1, "pagination-next", 3, "disabled", "click"], ["shape", "angle right"], ["type", "button", 1, "pagination-last", 3, "disabled", "click"], ["shape", "step-forward-2 up"], ["type", "text", 1, "pagination-current", "clr-input", 3, "size", "value", "keydown.enter", "blur"], ["currentPageInput", ""], [1, "pagination-description-compact"]], template: function ClrDatagridPagination_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c1);
        ɵngcc0.ɵɵtemplate(0, ClrDatagridPagination_ng_container_0_Template, 5, 2, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, ClrDatagridPagination_ng_container_1_Template, 10, 8, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.detailService.isOpen);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.detailService.isOpen);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.ClrIconCustomTag], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrDatagridPagination, [{
        type: Component,
        args: [{
                selector: 'clr-dg-pagination',
                template: "\n  <ng-container *ngIf=\"!detailService.isOpen\">\n    <div class=\"pagination-size\" *ngIf=\"_pageSizeComponent\">\n      <ng-content select=\"clr-dg-page-size\"></ng-content>\n    </div>\n    <div class=\"pagination-description\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"pagination-list\" *ngIf=\"page.last > 1\">\n      <button\n        type=\"button\" \n        class=\"pagination-first\" \n        [disabled]=\"page.current <= 1\" \n        (click)=\"page.current = 1\"\n        [attr.aria-label]=\"commonStrings.keys.firstPage\"\n        >\n        <clr-icon shape=\"step-forward-2 down\"></clr-icon>\n      </button>\n      <button \n        type=\"button\"\n        class=\"pagination-previous\" \n        [disabled]=\"page.current <= 1\" \n        (click)=\"page.current = page.current - 1\"\n        [attr.aria-label]=\"commonStrings.keys.previousPage\"\n        >\n        <clr-icon shape=\"angle left\"></clr-icon>\n      </button>\n        <input\n          *ngIf=\"!disableCurrentPageInput; else readOnly\"\n          #currentPageInput \n          type=\"text\" \n          class=\"pagination-current clr-input\" \n          [size]=\"page.last.toString().length\" \n          [value]=\"page.current\"\n          (keydown.enter)=\"updateCurrentPage($event)\" \n          (blur)=\"updateCurrentPage($event)\"\n          [attr.aria-label]=\"commonStrings.keys.currentPage\"\n          />\n          <ng-template #readOnly>\n            <span>{{ page.current }}</span>\n          </ng-template>\n\n          &nbsp;/&nbsp;<span [attr.aria-label]=\"commonStrings.keys.totalPages\">{{page.last}}</span>\n      <button \n        type=\"button\"\n        class=\"pagination-next\" \n        [disabled]=\"page.current >= page.last\" \n        (click)=\"page.current = page.current + 1\"\n        [attr.aria-label]=\"commonStrings.keys.nextPage\"\n        >\n        <clr-icon shape=\"angle right\"></clr-icon>\n      </button>\n      <button \n        type=\"button\" \n        class=\"pagination-last\" \n        [disabled]=\"page.current >= page.last\" \n        (click)=\"page.current = page.last\"\n        [attr.aria-label]=\"commonStrings.keys.lastPage\"\n        >\n        <clr-icon shape=\"step-forward-2 up\"></clr-icon>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"detailService.isOpen\">\n      <div class=\"pagination-description-compact\">\n          {{page.firstItem + 1}}-{{page.lastItem + 1}} / {{page.totalItems}}\n      </div>\n      <div class=\"pagination-list\">\n          <button\n                  type=\"button\"\n                  class=\"pagination-previous\"\n                  [disabled]=\"page.current <= 1\"\n                  (click)=\"page.current = page.current - 1\"\n                  [attr.aria-label]=\"commonStrings.keys.previousPage\"\n          >\n              <clr-icon shape=\"angle left\"></clr-icon>\n          </button>\n          <span>{{page.current}}</span>\n          <button\n                  type=\"button\"\n                  class=\"pagination-next\"\n                  [disabled]=\"page.current >= page.last\"\n                  (click)=\"page.current = page.current + 1\"\n                  [attr.aria-label]=\"commonStrings.keys.nextPage\"\n          >\n              <clr-icon shape=\"angle right\"></clr-icon>\n          </button>\n      </div>\n  </ng-container>\n\n  ",
                host: { '[class.pagination]': 'true' }
            }]
    }], function () { return [{ type: Page }, { type: ClrCommonStringsService }, { type: DetailService }]; }, { currentChanged: [{
            type: Output,
            args: ['clrDgPageChange']
        }], pageSize: [{
            type: Input,
            args: ['clrDgPageSize']
        }], totalItems: [{
            type: Input,
            args: ['clrDgTotalItems']
        }], lastPage: [{
            type: Input,
            args: ['clrDgLastPage']
        }], currentPage: [{
            type: Input,
            args: ['clrDgPage']
        }], _pageSizeComponent: [{
            type: ContentChild,
            args: [ClrDatagridPageSize]
        }], currentPageInputRef: [{
            type: ViewChild,
            args: ['currentPageInput']
        }], disableCurrentPageInput: [{
            type: Input,
            args: ['clrDgPageInputDisabled']
        }] }); })();
    return ClrDatagridPagination;
}());
export { ClrDatagridPagination };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,