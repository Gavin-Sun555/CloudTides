import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component } from '@angular/core';
import { Items } from './providers/items';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function ClrDatagridPlaceholder_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 3);
} }
function ClrDatagridPlaceholder_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 0, ["*ngIf", "emptyDatagrid"]);
} }
var _c0 = ["*"];
var ClrDatagridPlaceholder = /** @class */ (function () {
    function ClrDatagridPlaceholder(items) {
        this.items = items;
    }
    Object.defineProperty(ClrDatagridPlaceholder.prototype, "emptyDatagrid", {
        /**
         * Tests if the datagrid is empty, meaning it doesn't contain any items
         */
        get: function () {
            return !this.items.loading && (!this.items.displayed || this.items.displayed.length === 0);
        },
        enumerable: true,
        configurable: true
    });
    ClrDatagridPlaceholder.ctorParameters = function () { return [
        { type: Items }
    ]; };
ClrDatagridPlaceholder.ɵfac = function ClrDatagridPlaceholder_Factory(t) { return new (t || ClrDatagridPlaceholder)(ɵngcc0.ɵɵdirectiveInject(Items)); };
ClrDatagridPlaceholder.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrDatagridPlaceholder, selectors: [["clr-dg-placeholder"]], hostVars: 2, hostBindings: function ClrDatagridPlaceholder_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("datagrid-placeholder-container", true);
    } }, ngContentSelectors: _c0, decls: 3, vars: 4, consts: [[1, "datagrid-placeholder"], ["class", "datagrid-placeholder-image", 4, "ngIf"], [4, "ngIf"], [1, "datagrid-placeholder-image"]], template: function ClrDatagridPlaceholder_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ClrDatagridPlaceholder_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵtemplate(2, ClrDatagridPlaceholder_2_Template, 1, 0, undefined, 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("datagrid-empty", ctx.emptyDatagrid);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.emptyDatagrid);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.emptyDatagrid);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrDatagridPlaceholder, [{
        type: Component,
        args: [{
                selector: 'clr-dg-placeholder',
                template: "\n        <div\n            class=\"datagrid-placeholder\"\n            [class.datagrid-empty]=\"emptyDatagrid\">\n                <div class=\"datagrid-placeholder-image\" *ngIf=\"emptyDatagrid\"></div>\n                <ng-content *ngIf=\"emptyDatagrid\"></ng-content>\n        </div>\n    ",
                host: { '[class.datagrid-placeholder-container]': 'true' }
            }]
    }], function () { return [{ type: Items }]; }, null); })();
    return ClrDatagridPlaceholder;
}());
export { ClrDatagridPlaceholder };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtcGxhY2Vob2xkZXIuanMiLCJzb3VyY2VzIjpbIm5nOi9AY2xyL2FuZ3VsYXIvZGF0YS9kYXRhZ3JpZC9kYXRhZ3JpZC1wbGFjZWhvbGRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7Ozs7Ozs7Ozs7O0FBYzFDO0FBQ1csSUFBVCxnQ0FBb0IsS0FBZTtBQUFJLFFBQW5CLFVBQUssR0FBTCxLQUFLLENBQVU7QUFBQyxJQUFFLENBQUM7QUFDekMsSUFJRSxzQkFBVyxpREFBYTtBQUFJLFFBSDVCO0FBQ0Y7QUFFQSxXQURLO0FBQ0wsYUFBRTtBQUFjLFlBQ1osT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUM7QUFDL0YsUUFBRSxDQUFDO0FBQ0Y7QUFDd0I7QUFBMkIsT0FGakQ7QUFDSDtBQUNpRSxnQkFUcEMsS0FBSztBQUFHO0lBRHhCLHNCQUFzQix3QkFabEMsU0FBUyxDQUFDLGNBQ1QsUUFBUSxFQUFFLG9CQUFvQixjQUM5QixRQUFRLEVBQUU7O2dEQU9QLGNBQ0gsSUFBSTtBQUFFLEVBQUUsd0NBQXdDLEVBQUUsTUFBTSxFQUFFLFVBQzNELENBQUMsUUFDVyxzQkFBc0IsQ0FTbEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytEQUNEO0FBQUMsSUFERCw2QkFBQztBQUNBLENBREEsQUFURCxJQVNDO0FBQ0QsU0FWYSxzQkFBc0I7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOCBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSXRlbXMgfSBmcm9tICcuL3Byb3ZpZGVycy9pdGVtcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Nsci1kZy1wbGFjZWhvbGRlcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzPVwiZGF0YWdyaWQtcGxhY2Vob2xkZXJcIlxuICAgICAgICAgICAgW2NsYXNzLmRhdGFncmlkLWVtcHR5XT1cImVtcHR5RGF0YWdyaWRcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGF0YWdyaWQtcGxhY2Vob2xkZXItaW1hZ2VcIiAqbmdJZj1cImVtcHR5RGF0YWdyaWRcIj48L2Rpdj5cbiAgICAgICAgICAgICAgICA8bmctY29udGVudCAqbmdJZj1cImVtcHR5RGF0YWdyaWRcIj48L25nLWNvbnRlbnQ+XG4gICAgICAgIDwvZGl2PlxuICAgIGAsXG4gIGhvc3Q6IHsgJ1tjbGFzcy5kYXRhZ3JpZC1wbGFjZWhvbGRlci1jb250YWluZXJdJzogJ3RydWUnIH0sXG59KVxuZXhwb3J0IGNsYXNzIENsckRhdGFncmlkUGxhY2Vob2xkZXI8VCA9IGFueT4ge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGl0ZW1zOiBJdGVtczxUPikge31cblxuICAvKipcbiAgICogVGVzdHMgaWYgdGhlIGRhdGFncmlkIGlzIGVtcHR5LCBtZWFuaW5nIGl0IGRvZXNuJ3QgY29udGFpbiBhbnkgaXRlbXNcbiAgICovXG4gIHB1YmxpYyBnZXQgZW1wdHlEYXRhZ3JpZCgpIHtcbiAgICByZXR1cm4gIXRoaXMuaXRlbXMubG9hZGluZyAmJiAoIXRoaXMuaXRlbXMuZGlzcGxheWVkIHx8IHRoaXMuaXRlbXMuZGlzcGxheWVkLmxlbmd0aCA9PT0gMCk7XG4gIH1cbn1cbiJdfQ==