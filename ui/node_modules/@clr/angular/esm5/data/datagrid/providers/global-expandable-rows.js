import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Injectable } from '@angular/core';
import { DetailService } from './detail.service';
import * as ɵngcc0 from '@angular/core';
var ExpandableRowsCount = /** @class */ (function () {
    function ExpandableRowsCount(detailService) {
        this.detailService = detailService;
        this.expandableCount = 0;
    }
    ExpandableRowsCount.prototype.register = function () {
        this.expandableCount++;
    };
    ExpandableRowsCount.prototype.unregister = function () {
        this.expandableCount--;
    };
    Object.defineProperty(ExpandableRowsCount.prototype, "hasExpandableRow", {
        /**
         * false means no rows with action
         * check if details are on, and disable rows entirely
         */
        get: function () {
            return !this.detailService.enabled && this.expandableCount > 0;
        },
        enumerable: true,
        configurable: true
    });
    ExpandableRowsCount.ctorParameters = function () { return [
        { type: DetailService }
    ]; };
ExpandableRowsCount.ɵfac = function ExpandableRowsCount_Factory(t) { return new (t || ExpandableRowsCount)(ɵngcc0.ɵɵinject(DetailService)); };
ExpandableRowsCount.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ExpandableRowsCount, factory: function (t) { return ExpandableRowsCount.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ExpandableRowsCount, [{
        type: Injectable
    }], function () { return [{ type: DetailService }]; }, null); })();
    return ExpandableRowsCount;
}());
export { ExpandableRowsCount };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLWV4cGFuZGFibGUtcm93cy5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci9kYXRhL2RhdGFncmlkL3Byb3ZpZGVycy9nbG9iYWwtZXhwYW5kYWJsZS1yb3dzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUFHakQ7QUFDb0IsSUFBbEIsNkJBQW9CLGFBQTRCO0FBQUksUUFBaEMsa0JBQWEsR0FBYixhQUFhLENBQWU7QUFBQyxRQUV6QyxvQkFBZSxHQUFHLENBQUMsQ0FBQztBQUM5QixJQUhxRCxDQUFDO0FBQ3RELElBR1Msc0NBQVEsR0FBZjtBQUFjLFFBQ1osSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0FBQzNCLElBQUUsQ0FBQztBQUVILElBQVMsd0NBQVUsR0FBakI7QUFBYyxRQUNaLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztBQUMzQixJQUFFLENBQUM7QUFFSCxJQUlFLHNCQUFXLGlEQUFnQjtBQUFJLFFBSi9CO0FBQ0Y7QUFDTTtBQUVBLFdBREQ7QUFDTCxhQUFFO0FBQWMsWUFDWixPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLENBQUM7QUFDbkUsUUFBRSxDQUFDO0FBQ0Y7QUFDd0I7QUFBMkIsT0FGakQ7QUFDSDtBQUM4RCxnQkFwQnpCLGFBQWE7QUFBRztJQUR4QyxtQkFBbUIsd0JBRC9CLFVBQVUsRUFBRSxRQUNBLG1CQUFtQixDQW9CL0I7Ozs7dUVBQ0Q7QUFBQyxJQURELDBCQUFDO0FBQ0EsQ0FEQSxBQXBCRCxJQW9CQztBQUNELFNBckJhLG1CQUFtQjtBQUMvQiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERldGFpbFNlcnZpY2UgfSBmcm9tICcuL2RldGFpbC5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEV4cGFuZGFibGVSb3dzQ291bnQge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRldGFpbFNlcnZpY2U6IERldGFpbFNlcnZpY2UpIHt9XG5cbiAgcHJpdmF0ZSBleHBhbmRhYmxlQ291bnQgPSAwO1xuXG4gIHB1YmxpYyByZWdpc3RlcigpIHtcbiAgICB0aGlzLmV4cGFuZGFibGVDb3VudCsrO1xuICB9XG5cbiAgcHVibGljIHVucmVnaXN0ZXIoKSB7XG4gICAgdGhpcy5leHBhbmRhYmxlQ291bnQtLTtcbiAgfVxuXG4gIC8qKlxuICAgKiBmYWxzZSBtZWFucyBubyByb3dzIHdpdGggYWN0aW9uXG4gICAqIGNoZWNrIGlmIGRldGFpbHMgYXJlIG9uLCBhbmQgZGlzYWJsZSByb3dzIGVudGlyZWx5XG4gICAqL1xuICBwdWJsaWMgZ2V0IGhhc0V4cGFuZGFibGVSb3coKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICF0aGlzLmRldGFpbFNlcnZpY2UuZW5hYmxlZCAmJiB0aGlzLmV4cGFuZGFibGVDb3VudCA+IDA7XG4gIH1cbn1cbiJdfQ==