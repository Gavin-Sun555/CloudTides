import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ClrProgressBar } from './progress-bar';
import * as ɵngcc0 from '@angular/core';
export var CLR_PROGRESS_BAR_DIRECTIVES = [ClrProgressBar];
var ClrProgressBarModule = /** @class */ (function () {
    function ClrProgressBarModule() {
    }
ClrProgressBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClrProgressBarModule });
ClrProgressBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ClrProgressBarModule_Factory(t) { return new (t || ClrProgressBarModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClrProgressBarModule, { declarations: function () { return [ClrProgressBar]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ClrProgressBar]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrProgressBarModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [CLR_PROGRESS_BAR_DIRECTIVES],
                exports: [CLR_PROGRESS_BAR_DIRECTIVES]
            }]
    }], function () { return []; }, null); })();
    return ClrProgressBarModule;
}());
export { ClrProgressBarModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MtYmFyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci9wcm9ncmVzcy9wcm9ncmVzcy1iYXJzL3Byb2dyZXNzLWJhci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFRLE1BQU0sZUFBZSxDQUFDO0FBQy9DLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFFaEQsTUFBTSxDQUFDLElBQU0sMkJBQTJCLEdBQWdCLENBQUMsY0FBYyxDQUFDLENBQUM7QUFPekU7QUFDbUIsSUFEbkI7QUFBa0MsSUFBQyxDQUFDO0lBQXZCLG9CQUFvQix3QkFMaEMsUUFBUSxDQUFDLGNBQ1IsT0FBTyxFQUFFLENBQUM7UUFBWSxDQUFDLGNBQ3ZCLFlBQVksRUFBRSxDQUFDLDJCQUEyQixDQUFDLGNBQzNDLE9BQU8sRUFBRSxDQUFDLDJCQUEyQixDQUFDLFdBQ3ZDLENBQUMsUUFDVyxvQkFBb0IsQ0FBRzs7Ozs7Ozs7O2dEQUNwQztBQUFDLElBRGtDLDJCQUFDO0FBQ25DLENBRG1DLEFBQXBDLElBQW9DO0FBQ3BDLFNBRGEsb0JBQW9CO0FBQ2pDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlLCBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDbHJQcm9ncmVzc0JhciB9IGZyb20gJy4vcHJvZ3Jlc3MtYmFyJztcblxuZXhwb3J0IGNvbnN0IENMUl9QUk9HUkVTU19CQVJfRElSRUNUSVZFUzogVHlwZTxhbnk+W10gPSBbQ2xyUHJvZ3Jlc3NCYXJdO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbQ0xSX1BST0dSRVNTX0JBUl9ESVJFQ1RJVkVTXSxcbiAgZXhwb3J0czogW0NMUl9QUk9HUkVTU19CQVJfRElSRUNUSVZFU10sXG59KVxuZXhwb3J0IGNsYXNzIENsclByb2dyZXNzQmFyTW9kdWxlIHt9XG4iXX0=