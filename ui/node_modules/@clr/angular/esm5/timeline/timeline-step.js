/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate, __param } from "tslib";
import { Component, ContentChild, ElementRef, Inject, Input, PLATFORM_ID } from '@angular/core';
import { ClrTimelineStepState } from './enums/timeline-step-state.enum';
import { TimelineIconAttributeService } from './providers/timeline-icon-attribute.service';
import { ClrTimelineStepTitle } from './timeline-step-title';
import { isPlatformBrowser } from '@angular/common';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../icon/icon';
import * as ɵngcc3 from '../progress/spinner/spinner';

function ClrTimelineStep_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "clr-icon");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("shape", ctx_r0.iconShape)("aria-label", ctx_r0.iconAriaLabel)("aria-current", ctx_r0.iconAriaCurrent);
} }
function ClrTimelineStep_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-spinner", 4);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("aria-label", ctx_r2.iconAriaLabel);
} }
var _c0 = [[["clr-timeline-step-header"]], [["clr-timeline-step-title"]], [["clr-timeline-step-description"]]];
var _c1 = ["clr-timeline-step-header", "clr-timeline-step-title", "clr-timeline-step-description"];
var ClrTimelineStep = /** @class */ (function () {
    function ClrTimelineStep(iconAttributeService, platformId) {
        this.iconAttributeService = iconAttributeService;
        this.platformId = platformId;
        this.state = ClrTimelineStepState.NOT_STARTED;
    }
    ClrTimelineStep.prototype.ngAfterContentInit = function () {
        if (this.stepTitle && isPlatformBrowser(this.platformId)) {
            this.stepTitleText = this.stepTitle.nativeElement.innerText;
        }
    };
    Object.defineProperty(ClrTimelineStep.prototype, "iconAriaCurrent", {
        get: function () {
            return this.state === ClrTimelineStepState.CURRENT;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrTimelineStep.prototype, "iconAriaLabel", {
        get: function () {
            return this.iconAttributeService.getAriaLabel(this.state);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrTimelineStep.prototype, "iconShape", {
        get: function () {
            return this.iconAttributeService.getIconShape(this.state);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrTimelineStep.prototype, "isProcessing", {
        get: function () {
            return this.state === ClrTimelineStepState.PROCESSING;
        },
        enumerable: true,
        configurable: true
    });
    ClrTimelineStep.ctorParameters = function () { return [
        { type: TimelineIconAttributeService },
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    __decorate([
        Input('clrState')
    ], ClrTimelineStep.prototype, "state", void 0);
    __decorate([
        ContentChild(ClrTimelineStepTitle, { read: ElementRef })
    ], ClrTimelineStep.prototype, "stepTitle", void 0);
    ClrTimelineStep = __decorate([ __param(1, Inject(PLATFORM_ID))
    ], ClrTimelineStep);
ClrTimelineStep.ɵfac = function ClrTimelineStep_Factory(t) { return new (t || ClrTimelineStep)(ɵngcc0.ɵɵdirectiveInject(TimelineIconAttributeService), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };
ClrTimelineStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrTimelineStep, selectors: [["clr-timeline-step"]], contentQueries: function ClrTimelineStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ClrTimelineStepTitle, true, ElementRef);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepTitle = _t.first);
    } }, hostVars: 2, hostBindings: function ClrTimelineStep_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("clr-timeline-step", true);
    } }, inputs: { state: ["clrState", "state"] }, ngContentSelectors: _c1, decls: 9, vars: 3, consts: [[1, "clr-sr-only"], [4, "ngIf", "ngIfElse"], [1, "clr-timeline-step-body"], ["processing", ""], ["clrMedium", ""]], template: function ClrTimelineStep_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵelementStart(1, "span", 0);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, ClrTimelineStep_ng_container_3_Template, 2, 3, "ng-container", 1);
        ɵngcc0.ɵɵelementStart(4, "div", 2);
        ɵngcc0.ɵɵprojection(5, 1);
        ɵngcc0.ɵɵprojection(6, 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, ClrTimelineStep_ng_template_7_Template, 1, 1, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        var _r1 = ɵngcc0.ɵɵreference(8);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.stepTitleText);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isProcessing)("ngIfElse", _r1);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.ClrIconCustomTag, ɵngcc3.ClrSpinner], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrTimelineStep, [{
        type: Component,
        args: [{
                selector: 'clr-timeline-step',
                template: "\n        <ng-content select=\"clr-timeline-step-header\"></ng-content>\n        <span class=\"clr-sr-only\">{{stepTitleText}}</span>\n        <ng-container *ngIf=\"!isProcessing; else processing\">\n            <clr-icon\n                    [attr.shape]=\"iconShape\"\n                    [attr.aria-label]=\"iconAriaLabel\"\n                    [attr.aria-current]=\"iconAriaCurrent\">\n            </clr-icon>\n        </ng-container>\n        <div class=\"clr-timeline-step-body\">\n            <ng-content select=\"clr-timeline-step-title\"></ng-content>\n            <ng-content select=\"clr-timeline-step-description\"></ng-content>\n        </div>\n\n        <ng-template #processing>\n            <clr-spinner clrMedium [attr.aria-label]=\"iconAriaLabel\"></clr-spinner>\n        </ng-template>\n    ",
                host: { '[class.clr-timeline-step]': 'true' }
            }]
    }], function () { return [{ type: TimelineIconAttributeService }, { type: Object, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }]; }, { state: [{
            type: Input,
            args: ['clrState']
        }], stepTitle: [{
            type: ContentChild,
            args: [ClrTimelineStepTitle, { read: ElementRef }]
        }] }); })();
    return ClrTimelineStep;
}());
export { ClrTimelineStep };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZWxpbmUtc3RlcC5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci90aW1lbGluZS90aW1lbGluZS1zdGVwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWhHLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQzNGLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzdELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlCcEQ7QUFDb0IsSUFNbEIseUJBQ1Usb0JBQWtELEVBQzdCLFVBQWtCO0FBQ2hELFFBRlMseUJBQW9CLEdBQXBCLG9CQUFvQixDQUE4QjtBQUFDLFFBQzlCLGVBQVUsR0FBVixVQUFVLENBQVE7QUFDbkQsUUFUcUIsVUFBSyxHQUF5QixvQkFBb0IsQ0FBQyxXQUFXLENBQUM7QUFDcEYsSUFRSyxDQUFDO0FBQ04sSUFDRSw0Q0FBa0IsR0FBbEI7QUFBYyxRQUNaLElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUU7QUFDOUQsWUFBTSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQztBQUNsRSxTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBRUgsSUFBRSxzQkFBSSw0Q0FBZTtBQUFJLGFBQXZCO0FBQWMsWUFDWixPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssb0JBQW9CLENBQUMsT0FBTyxDQUFDO0FBQ3ZELFFBQUUsQ0FBQztBQUVIO0FBQTBCO0FBQ0wsT0FIbEI7QUFDSCxJQUNFLHNCQUFJLDBDQUFhO0FBQUksYUFBckI7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDOUQsUUFBRSxDQUFDO0FBRUg7QUFBMEI7QUFDRCxPQUh0QjtBQUNILElBQ0Usc0JBQUksc0NBQVM7QUFBSSxhQUFqQjtBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUM5RCxRQUFFLENBQUM7QUFFSDtBQUEwQjtBQUNMLE9BSGxCO0FBQ0gsSUFDRSxzQkFBSSx5Q0FBWTtBQUFJLGFBQXBCO0FBQWMsWUFDWixPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssb0JBQW9CLENBQUMsVUFBVSxDQUFDO0FBQzFELFFBQUUsQ0FBQztBQUNGO0FBQ3dCO0FBQTJCLE9BRmpEO0FBQ0g7QUFDMEQsZ0JBMUJ4Qiw0QkFBNEI7QUFDNUQsZ0JBQTJDLE1BQU0sdUJBQTlDLE1BQU0sU0FBQyxXQUFXO0FBQVE7QUFBVSxJQVJwQjtBQUFhLFFBQS9CLEtBQUssQ0FBQyxVQUFVLENBQUM7QUFBQyxrREFBK0Q7QUFFcEYsSUFFRTtBQUFhLFFBRFosWUFBWSxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxDQUFDO0FBQzNELHNEQUF3QjtBQUV4QixJQVBhLGVBQWUsd0JBdkIzQixTQUFTLENBQUMsbkJBdUJILENBU0gsV0FBQSxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUE7QUEvQnRCLFFBQVEsRUFBRSxWQStCYSxPQVRaLGVBQWUsQ0FpQzNCO0lBdkQ4QixjQUM3QixRQUFRLEVBQUU7Ozs7Ozs7O3VGQWtCUCxjQUNILElBQUksRUFBRSxFQUFFLDJCQUEyQixFQUFFLE1BQU0sRUFBRSxVQUM5QyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFtQ0Y7QUFBQyxJQURELHNCQUFDO0FBQ0EsQ0FEQSxBQWpDRCxJQWlDQztBQUNELFNBbENhLGVBQWU7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkLCBFbGVtZW50UmVmLCBJbmplY3QsIElucHV0LCBQTEFURk9STV9JRCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDbHJUaW1lbGluZVN0ZXBTdGF0ZSB9IGZyb20gJy4vZW51bXMvdGltZWxpbmUtc3RlcC1zdGF0ZS5lbnVtJztcbmltcG9ydCB7IFRpbWVsaW5lSWNvbkF0dHJpYnV0ZVNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy90aW1lbGluZS1pY29uLWF0dHJpYnV0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IENsclRpbWVsaW5lU3RlcFRpdGxlIH0gZnJvbSAnLi90aW1lbGluZS1zdGVwLXRpdGxlJztcbmltcG9ydCB7IGlzUGxhdGZvcm1Ccm93c2VyIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY2xyLXRpbWVsaW5lLXN0ZXAnLFxuICB0ZW1wbGF0ZTogYFxuICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJjbHItdGltZWxpbmUtc3RlcC1oZWFkZXJcIj48L25nLWNvbnRlbnQ+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwiY2xyLXNyLW9ubHlcIj57e3N0ZXBUaXRsZVRleHR9fTwvc3Bhbj5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFpc1Byb2Nlc3Npbmc7IGVsc2UgcHJvY2Vzc2luZ1wiPlxuICAgICAgICAgICAgPGNsci1pY29uXG4gICAgICAgICAgICAgICAgICAgIFthdHRyLnNoYXBlXT1cImljb25TaGFwZVwiXG4gICAgICAgICAgICAgICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiaWNvbkFyaWFMYWJlbFwiXG4gICAgICAgICAgICAgICAgICAgIFthdHRyLmFyaWEtY3VycmVudF09XCJpY29uQXJpYUN1cnJlbnRcIj5cbiAgICAgICAgICAgIDwvY2xyLWljb24+XG4gICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2xyLXRpbWVsaW5lLXN0ZXAtYm9keVwiPlxuICAgICAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiY2xyLXRpbWVsaW5lLXN0ZXAtdGl0bGVcIj48L25nLWNvbnRlbnQ+XG4gICAgICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJjbHItdGltZWxpbmUtc3RlcC1kZXNjcmlwdGlvblwiPjwvbmctY29udGVudD5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPG5nLXRlbXBsYXRlICNwcm9jZXNzaW5nPlxuICAgICAgICAgICAgPGNsci1zcGlubmVyIGNsck1lZGl1bSBbYXR0ci5hcmlhLWxhYmVsXT1cImljb25BcmlhTGFiZWxcIj48L2Nsci1zcGlubmVyPlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgIGAsXG4gIGhvc3Q6IHsgJ1tjbGFzcy5jbHItdGltZWxpbmUtc3RlcF0nOiAndHJ1ZScgfSxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyVGltZWxpbmVTdGVwIHtcbiAgQElucHV0KCdjbHJTdGF0ZScpIHN0YXRlOiBDbHJUaW1lbGluZVN0ZXBTdGF0ZSA9IENsclRpbWVsaW5lU3RlcFN0YXRlLk5PVF9TVEFSVEVEO1xuXG4gIHB1YmxpYyBzdGVwVGl0bGVUZXh0OiBzdHJpbmc7XG4gIEBDb250ZW50Q2hpbGQoQ2xyVGltZWxpbmVTdGVwVGl0bGUsIHsgcmVhZDogRWxlbWVudFJlZiB9KVxuICBzdGVwVGl0bGU6IEVsZW1lbnRSZWY7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBpY29uQXR0cmlidXRlU2VydmljZTogVGltZWxpbmVJY29uQXR0cmlidXRlU2VydmljZSxcbiAgICBASW5qZWN0KFBMQVRGT1JNX0lEKSBwcml2YXRlIHBsYXRmb3JtSWQ6IE9iamVjdFxuICApIHt9XG5cbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgIGlmICh0aGlzLnN0ZXBUaXRsZSAmJiBpc1BsYXRmb3JtQnJvd3Nlcih0aGlzLnBsYXRmb3JtSWQpKSB7XG4gICAgICB0aGlzLnN0ZXBUaXRsZVRleHQgPSB0aGlzLnN0ZXBUaXRsZS5uYXRpdmVFbGVtZW50LmlubmVyVGV4dDtcbiAgICB9XG4gIH1cblxuICBnZXQgaWNvbkFyaWFDdXJyZW50KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnN0YXRlID09PSBDbHJUaW1lbGluZVN0ZXBTdGF0ZS5DVVJSRU5UO1xuICB9XG5cbiAgZ2V0IGljb25BcmlhTGFiZWwoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5pY29uQXR0cmlidXRlU2VydmljZS5nZXRBcmlhTGFiZWwodGhpcy5zdGF0ZSk7XG4gIH1cblxuICBnZXQgaWNvblNoYXBlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuaWNvbkF0dHJpYnV0ZVNlcnZpY2UuZ2V0SWNvblNoYXBlKHRoaXMuc3RhdGUpO1xuICB9XG5cbiAgZ2V0IGlzUHJvY2Vzc2luZygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZSA9PT0gQ2xyVGltZWxpbmVTdGVwU3RhdGUuUFJPQ0VTU0lORztcbiAgfVxufVxuIl19