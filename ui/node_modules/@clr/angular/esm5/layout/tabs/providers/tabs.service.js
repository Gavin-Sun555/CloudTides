import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Injectable } from '@angular/core';
import { TabsLayout } from '../enums/tabs-layout.enum';
import * as ɵngcc0 from '@angular/core';
var TabsService = /** @class */ (function () {
    function TabsService() {
        this._children = [];
        this.layout = TabsLayout.HORIZONTAL;
    }
    TabsService.prototype.register = function (tab) {
        this._children.push(tab);
    };
    Object.defineProperty(TabsService.prototype, "children", {
        get: function () {
            return this._children;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabsService.prototype, "activeTab", {
        get: function () {
            return this.children.find(function (tab) {
                return tab.active;
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabsService.prototype, "overflowTabs", {
        get: function () {
            if (this.layout === TabsLayout.VERTICAL) {
                return [];
            }
            else {
                return this.children.filter(function (tab) { return tab.tabLink.inOverflow === true; });
            }
        },
        enumerable: true,
        configurable: true
    });
    TabsService.prototype.unregister = function (tab) {
        var index = this.children.indexOf(tab);
        if (index > -1) {
            this.children.splice(index, 1);
        }
    };
TabsService.ɵfac = function TabsService_Factory(t) { return new (t || TabsService)(); };
TabsService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TabsService, factory: function (t) { return TabsService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabsService, [{
        type: Injectable
    }], function () { return []; }, null); })();
    return TabsService;
}());
export { TabsService };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJuZzovQGNsci9hbmd1bGFyL2xheW91dC90YWJzL3Byb3ZpZGVycy90YWJzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILE9BQU8sRUFBRSxVQUFVLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBRTdELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7QUFHdkQ7QUFDb0IsSUFEcEI7QUFBeUIsUUFDZixjQUFTLEdBQWEsRUFBRSxDQUFDO0FBQ25DLFFBQ0UsV0FBTSxHQUFlLFVBQVUsQ0FBQyxVQUFVLENBQUM7QUFDN0MsSUErQkEsQ0FBQztBQUNELElBL0JFLDhCQUFRLEdBQVIsVUFBUyxHQUFXO0FBQ3RCLFFBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDN0IsSUFBRSxDQUFDO0FBRUgsSUFBRSxzQkFBSSxpQ0FBUTtBQUFJLGFBQWhCO0FBQWMsWUFDWixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7QUFDMUIsUUFBRSxDQUFDO0FBRUg7QUFDTTtBQUEyQixPQUg5QjtBQUNILElBQ0Usc0JBQUksa0NBQVM7QUFBSSxhQUFqQjtBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFDLEdBQVc7QUFBSSxnQkFDeEMsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDO0FBQ3hCLFlBQUksQ0FBQyxDQUFDLENBQUM7QUFDUCxRQUFFLENBQUM7QUFFSDtBQUNHO0FBQTJCLE9BSDNCO0FBQ0gsSUFDRSxzQkFBSSxxQ0FBWTtBQUFJLGFBQXBCO0FBQWMsWUFDWixJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssVUFBVSxDQUFDLFFBQVEsRUFBRTtBQUM3QyxnQkFBTSxPQUFPLEVBQUUsQ0FBQztBQUNoQixhQUFLO0FBQUMsaUJBQUs7QUFDWCxnQkFBTSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFVBQUMsR0FBVyxJQUFLLE9BQUEsR0FBRyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEtBQUssSUFBSSxFQUEvQixDQUErQixDQUFDLENBQUM7QUFDcEYsYUFBSztBQUNMLFFBQUUsQ0FBQztBQUVIO0FBQTBCO0FBQ0QsT0FIdEI7QUFDSCxJQUNFLGdDQUFVLEdBQVYsVUFBVyxHQUFXO0FBQ3hCLFFBQUksSUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDN0MsUUFBSSxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsRUFBRTtBQUNwQixZQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNyQyxTQUFLO0FBQ0wsSUFBRSxDQUFDO0lBaENVLFdBQVcsd0JBRHZCLFVBQVUsRUFBRSxRQUNBLFdBQVcsQ0FtQ3ZCOzs7O2dEQUNEO0FBQUMsSUFERCxrQkFBQztBQUNBLENBREEsQUFuQ0QsSUFtQ0M7QUFDRCxTQXBDYSxXQUFXO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDE5IFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuaW1wb3J0IHsgSW5qZWN0YWJsZSwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2xyVGFiIH0gZnJvbSAnLi4vdGFiJztcbmltcG9ydCB7IFRhYnNMYXlvdXQgfSBmcm9tICcuLi9lbnVtcy90YWJzLWxheW91dC5lbnVtJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRhYnNTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBfY2hpbGRyZW46IENsclRhYltdID0gW107XG5cbiAgbGF5b3V0OiBUYWJzTGF5b3V0ID0gVGFic0xheW91dC5IT1JJWk9OVEFMO1xuXG4gIHJlZ2lzdGVyKHRhYjogQ2xyVGFiKSB7XG4gICAgdGhpcy5fY2hpbGRyZW4ucHVzaCh0YWIpO1xuICB9XG5cbiAgZ2V0IGNoaWxkcmVuKCkge1xuICAgIHJldHVybiB0aGlzLl9jaGlsZHJlbjtcbiAgfVxuXG4gIGdldCBhY3RpdmVUYWIoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2hpbGRyZW4uZmluZCgodGFiOiBDbHJUYWIpID0+IHtcbiAgICAgIHJldHVybiB0YWIuYWN0aXZlO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0IG92ZXJmbG93VGFicygpIHtcbiAgICBpZiAodGhpcy5sYXlvdXQgPT09IFRhYnNMYXlvdXQuVkVSVElDQUwpIHtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMuY2hpbGRyZW4uZmlsdGVyKCh0YWI6IENsclRhYikgPT4gdGFiLnRhYkxpbmsuaW5PdmVyZmxvdyA9PT0gdHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgdW5yZWdpc3Rlcih0YWI6IENsclRhYikge1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5jaGlsZHJlbi5pbmRleE9mKHRhYik7XG4gICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgIHRoaXMuY2hpbGRyZW4uc3BsaWNlKGluZGV4LCAxKTtcbiAgICB9XG4gIH1cblxuICB0YWJDb250ZW50Vmlld0NvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZjtcbn1cbiJdfQ==