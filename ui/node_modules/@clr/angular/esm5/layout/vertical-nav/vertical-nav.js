/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';
import { VerticalNavIconService } from './providers/vertical-nav-icon.service';
import { VerticalNavService } from './providers/vertical-nav.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../../icon/icon';

function ClrVerticalNav_button_0_Template(rf, ctx) { if (rf & 1) {
    var _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 3);
    ɵngcc0.ɵɵlistener("click", function ClrVerticalNav_button_0_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.toggleByButton(); });
    ɵngcc0.ɵɵelement(1, "clr-icon", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("on-collapse", ctx_r0.collapsed);
    ɵngcc0.ɵɵattribute("aria-expanded", ctx_r0.ariaExpanded)("aria-label", ctx_r0.commonStrings.keys.verticalNavToggle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("dir", ctx_r0.collapsed ? "right" : "left")("title", ctx_r0.collapsed ? ctx_r0.commonStrings.keys.expand : ctx_r0.commonStrings.keys.collapse);
} }
function ClrVerticalNav_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 5);
    ɵngcc0.ɵɵlistener("click", function ClrVerticalNav_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.collapsed = false; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("aria-label", ctx_r1.commonStrings.keys.verticalNavToggle);
} }
var _c0 = ["*"];
var ClrVerticalNav = /** @class */ (function () {
    function ClrVerticalNav(_navService, _navIconService, _navGroupRegistrationService, commonStrings) {
        var _this = this;
        this._navService = _navService;
        this._navIconService = _navIconService;
        this._navGroupRegistrationService = _navGroupRegistrationService;
        this.commonStrings = commonStrings;
        this._collapsedChanged = new EventEmitter(true);
        this._sub = this._navService.collapsedChanged.subscribe(function (value) {
            _this._collapsedChanged.emit(value);
        });
    }
    Object.defineProperty(ClrVerticalNav.prototype, "collapsible", {
        get: function () {
            return this._navService.collapsible;
        },
        set: function (value) {
            this._navService.collapsible = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrVerticalNav.prototype, "collapsed", {
        get: function () {
            return this._navService.collapsed;
        },
        set: function (value) {
            this._navService.collapsed = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrVerticalNav.prototype, "hasNavGroups", {
        get: function () {
            return this._navGroupRegistrationService.navGroupCount > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrVerticalNav.prototype, "hasIcons", {
        get: function () {
            return this._navIconService.hasIcons;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrVerticalNav.prototype, "ariaExpanded", {
        get: function () {
            if (!this.collapsible) {
                return null;
            }
            return !this.collapsed ? 'true' : 'false';
        },
        enumerable: true,
        configurable: true
    });
    ClrVerticalNav.prototype.toggleByButton = function () {
        this.collapsed = !this.collapsed;
    };
    ClrVerticalNav.prototype.ngOnDestroy = function () {
        this._sub.unsubscribe();
    };
    ClrVerticalNav.ctorParameters = function () { return [
        { type: VerticalNavService },
        { type: VerticalNavIconService },
        { type: VerticalNavGroupRegistrationService },
        { type: ClrCommonStringsService }
    ]; };
    __decorate([
        Input('clrVerticalNavCollapsible')
    ], ClrVerticalNav.prototype, "collapsible", null);
    __decorate([
        Input('clrVerticalNavCollapsed')
    ], ClrVerticalNav.prototype, "collapsed", null);
    __decorate([
        Output('clrVerticalNavCollapsedChange')
    ], ClrVerticalNav.prototype, "_collapsedChanged", void 0);
ClrVerticalNav.ɵfac = function ClrVerticalNav_Factory(t) { return new (t || ClrVerticalNav)(ɵngcc0.ɵɵdirectiveInject(VerticalNavService), ɵngcc0.ɵɵdirectiveInject(VerticalNavIconService), ɵngcc0.ɵɵdirectiveInject(VerticalNavGroupRegistrationService), ɵngcc0.ɵɵdirectiveInject(ClrCommonStringsService)); };
ClrVerticalNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrVerticalNav, selectors: [["clr-vertical-nav"]], hostAttrs: [1, "clr-vertical-nav"], hostVars: 6, hostBindings: function ClrVerticalNav_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("is-collapsed", ctx.collapsed)("has-nav-groups", ctx.hasNavGroups)("has-icons", ctx.hasIcons);
    } }, inputs: { collapsible: ["clrVerticalNavCollapsible", "collapsible"], collapsed: ["clrVerticalNavCollapsed", "collapsed"] }, outputs: { _collapsedChanged: "clrVerticalNavCollapsedChange" }, features: [ɵngcc0.ɵɵProvidersFeature([VerticalNavService, VerticalNavIconService, VerticalNavGroupRegistrationService])], ngContentSelectors: _c0, decls: 4, vars: 2, consts: [["type", "button", "class", "nav-trigger", 3, "on-collapse", "click", 4, "ngIf"], [1, "nav-content"], ["class", "nav-btn", "aria-hidden", "true", "tabindex", "-1", 3, "click", 4, "ngIf"], ["type", "button", 1, "nav-trigger", 3, "click"], ["shape", "angle-double", 1, "nav-trigger-icon"], ["aria-hidden", "true", "tabindex", "-1", 1, "nav-btn", 3, "click"]], template: function ClrVerticalNav_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ClrVerticalNav_button_0_Template, 2, 6, "button", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵtemplate(3, ClrVerticalNav_button_3_Template, 1, 1, "button", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.collapsible);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.collapsible && ctx.collapsed);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.ClrIconCustomTag], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrVerticalNav, [{
        type: Component,
        args: [{
                selector: 'clr-vertical-nav',
                template: "<!--\n  ~ Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button type=\"button\" class=\"nav-trigger\"\n        [class.on-collapse]=\"collapsed\"\n        [attr.aria-expanded]=\"ariaExpanded\"\n        [attr.aria-label]=\"commonStrings.keys.verticalNavToggle\"\n        (click)=\"toggleByButton()\"\n        *ngIf=\"collapsible\">\n    <clr-icon shape=\"angle-double\"\n              class=\"nav-trigger-icon\"\n              [attr.dir]=\"(this.collapsed) ? 'right' : 'left'\"\n              [attr.title]=\"(this.collapsed) ? commonStrings.keys.expand : commonStrings.keys.collapse\"></clr-icon>\n</button>\n<!-- Click handler on .nav-content is bad but required :-( -->\n<div class=\"nav-content\">\n    <ng-content></ng-content>\n    <button (click)=\"collapsed = false\" class=\"nav-btn\" aria-hidden=\"true\" tabindex=\"-1\"\n      [attr.aria-label]=\"commonStrings.keys.verticalNavToggle\"\n      *ngIf=\"collapsible && collapsed\"></button>\n</div>\n",
                providers: [VerticalNavService, VerticalNavIconService, VerticalNavGroupRegistrationService],
                host: {
                    class: 'clr-vertical-nav',
                    '[class.is-collapsed]': 'collapsed',
                    '[class.has-nav-groups]': 'hasNavGroups',
                    '[class.has-icons]': 'hasIcons'
                }
            }]
    }], function () { return [{ type: VerticalNavService }, { type: VerticalNavIconService }, { type: VerticalNavGroupRegistrationService }, { type: ClrCommonStringsService }]; }, { _collapsedChanged: [{
            type: Output,
            args: ['clrVerticalNavCollapsedChange']
        }], collapsible: [{
            type: Input,
            args: ['clrVerticalNavCollapsible']
        }], collapsed: [{
            type: Input,
            args: ['clrVerticalNavCollapsed']
        }] }); })();
    return ClrVerticalNav;
}());
export { ClrVerticalNav };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVydGljYWwtbmF2LmpzIiwic291cmNlcyI6WyJuZzovQGNsci9hbmd1bGFyL2xheW91dC92ZXJ0aWNhbC1uYXYvdmVydGljYWwtbmF2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFhLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdsRixPQUFPLEVBQUUsbUNBQW1DLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUMxRyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN0RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWFsRjtBQUFrRCxJQXVDaEQsd0JBQ1UsV0FBK0IsRUFDL0IsZUFBdUMsRUFDdkMsNEJBQWlFLEVBQ2xFLGFBQXNDO0FBQzlDLFFBTEQsaUJBU0M7QUFDSCxRQVRZLGdCQUFXLEdBQVgsV0FBVyxDQUFvQjtBQUFDLFFBQ2hDLG9CQUFlLEdBQWYsZUFBZSxDQUF3QjtBQUFDLFFBQ3hDLGlDQUE0QixHQUE1Qiw0QkFBNEIsQ0FBcUM7QUFBQyxRQUNuRSxrQkFBYSxHQUFiLGFBQWEsQ0FBeUI7QUFDakQsUUF4QlUsc0JBQWlCLEdBQTBCLElBQUksWUFBWSxDQUFVLElBQUksQ0FBQyxDQUFDO0FBQ3JGLFFBd0JJLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsVUFBQSxLQUFLO0FBQUksWUFDL0QsS0FBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN6QyxRQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ1AsSUFBRSxDQUFDO0FBQ0gsSUFoREUsc0JBQUksdUNBQVc7QUFBSSxhQUFuQjtBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQztBQUN4QyxRQUFFLENBQUM7QUFFSCxhQUNFLFVBQWdCLEtBQWM7QUFDaEMsWUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7QUFDekMsUUFBRSxDQUFDO0FBRUg7QUFBMEI7QUFDRixPQVJyQjtBQUNILElBTUUsc0JBQUkscUNBQVM7QUFBSSxhQUFqQjtBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQztBQUN0QyxRQUFFLENBQUM7QUFFSCxhQUNFLFVBQWMsS0FBYztBQUM5QixZQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztBQUN2QyxRQUFFLENBQUM7QUFFSDtBQUEwQjtBQUNoQixPQVJQO0FBQ0gsSUFTRSxzQkFBSSx3Q0FBWTtBQUFJLGFBQXBCO0FBQWMsWUFDWixPQUFPLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDO0FBQy9ELFFBQUUsQ0FBQztBQUVIO0FBQTBCO0FBQ0QsT0FIdEI7QUFDSCxJQUNFLHNCQUFJLG9DQUFRO0FBQUksYUFBaEI7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUM7QUFDekMsUUFBRSxDQUFDO0FBRUg7QUFBMEI7QUFDSixPQUhuQjtBQUNILElBQ0Usc0JBQUksd0NBQVk7QUFBSSxhQUFwQjtBQUFjLFlBQ1osSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUU7QUFDM0IsZ0JBQU0sT0FBTyxJQUFJLENBQUM7QUFDbEIsYUFBSztBQUNMLFlBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO0FBQzlDLFFBQUUsQ0FBQztBQUVIO0FBQTBCO0FBR25CLE9BTEo7QUFDSCxJQWNFLHVDQUFjLEdBQWQ7QUFBYyxRQUNaLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO0FBQ3JDLElBQUUsQ0FBQztBQUVILElBQUUsb0NBQVcsR0FBWDtBQUFjLFFBQ1osSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUM1QixJQUFFLENBQUM7QUFDRjtBQUN5RCxnQkFsQmpDLGtCQUFrQjtBQUN6QyxnQkFBMkIsc0JBQXNCO0FBQ2pELGdCQUF3QyxtQ0FBbUM7QUFDM0UsZ0JBQXdCLHVCQUF1QjtBQUMvQztBQUNJLElBdkNKO0FBQWEsUUFEWixLQUFLLENBQUMsMkJBQTJCLENBQUM7QUFDckMscURBRUc7QUFFSCxJQUtFO0FBQWEsUUFEWixLQUFLLENBQUMseUJBQXlCLENBQUM7QUFDbkMsbURBRUc7QUFFSCxJQUNFO0FBQWEsUUFEWixNQUFNLENBQUMsK0JBQStCLENBQUM7QUFDMUMsNkRBQXFGO0lBcEJ4RSxjQUFjLHdCQVgxQixTQUFTLENBQUMsY0FDVCxRQUFRLEVBQUUsa0JBQWtCLGNBQzVCOzs7eWtCQUFrQyxjQUNsQyxTQUFTLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxzQkFBc0IsRUFBRSxtQ0FBbUMsQ0FBQyxjQUM1RixJQUFJLEVBQUUsa0JBQ0osS0FBSyxFQUFFLGtCQUFrQixrQkFDekIsc0JBQXNCLEVBQUU7UUFBVyxrQkFDbkM7Z0JBQXdCLEVBQUUsY0FBYyxrQkFDeEMsbUJBQW1CLEVBQUUsVUFBVTthQUNoQyxVQUNGLENBQUMsUUFDVztFQUFjLENBeUQxQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUNEO0FBQUMsSUFERCxxQkFBQztBQUNBLENBREEsQUF6REQsSUF5REM7QUFDRCxTQTFEYSxjQUFjO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25EZXN0cm95LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBWZXJ0aWNhbE5hdkdyb3VwUmVnaXN0cmF0aW9uU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL3ZlcnRpY2FsLW5hdi1ncm91cC1yZWdpc3RyYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBWZXJ0aWNhbE5hdkljb25TZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvdmVydGljYWwtbmF2LWljb24uc2VydmljZSc7XG5pbXBvcnQgeyBWZXJ0aWNhbE5hdlNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy92ZXJ0aWNhbC1uYXYuc2VydmljZSc7XG5pbXBvcnQgeyBDbHJDb21tb25TdHJpbmdzU2VydmljZSB9IGZyb20gJy4uLy4uL3V0aWxzL2kxOG4vY29tbW9uLXN0cmluZ3Muc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Nsci12ZXJ0aWNhbC1uYXYnLFxuICB0ZW1wbGF0ZVVybDogJy4vdmVydGljYWwtbmF2Lmh0bWwnLFxuICBwcm92aWRlcnM6IFtWZXJ0aWNhbE5hdlNlcnZpY2UsIFZlcnRpY2FsTmF2SWNvblNlcnZpY2UsIFZlcnRpY2FsTmF2R3JvdXBSZWdpc3RyYXRpb25TZXJ2aWNlXSxcbiAgaG9zdDoge1xuICAgIGNsYXNzOiAnY2xyLXZlcnRpY2FsLW5hdicsXG4gICAgJ1tjbGFzcy5pcy1jb2xsYXBzZWRdJzogJ2NvbGxhcHNlZCcsXG4gICAgJ1tjbGFzcy5oYXMtbmF2LWdyb3Vwc10nOiAnaGFzTmF2R3JvdXBzJyxcbiAgICAnW2NsYXNzLmhhcy1pY29uc10nOiAnaGFzSWNvbnMnLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBDbHJWZXJ0aWNhbE5hdiBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gIGdldCBjb2xsYXBzaWJsZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fbmF2U2VydmljZS5jb2xsYXBzaWJsZTtcbiAgfVxuXG4gIEBJbnB1dCgnY2xyVmVydGljYWxOYXZDb2xsYXBzaWJsZScpXG4gIHNldCBjb2xsYXBzaWJsZSh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX25hdlNlcnZpY2UuY29sbGFwc2libGUgPSB2YWx1ZTtcbiAgfVxuXG4gIGdldCBjb2xsYXBzZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX25hdlNlcnZpY2UuY29sbGFwc2VkO1xuICB9XG5cbiAgQElucHV0KCdjbHJWZXJ0aWNhbE5hdkNvbGxhcHNlZCcpXG4gIHNldCBjb2xsYXBzZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9uYXZTZXJ2aWNlLmNvbGxhcHNlZCA9IHZhbHVlO1xuICB9XG5cbiAgQE91dHB1dCgnY2xyVmVydGljYWxOYXZDb2xsYXBzZWRDaGFuZ2UnKVxuICBwcml2YXRlIF9jb2xsYXBzZWRDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4gPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KHRydWUpO1xuXG4gIGdldCBoYXNOYXZHcm91cHMoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX25hdkdyb3VwUmVnaXN0cmF0aW9uU2VydmljZS5uYXZHcm91cENvdW50ID4gMDtcbiAgfVxuXG4gIGdldCBoYXNJY29ucygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fbmF2SWNvblNlcnZpY2UuaGFzSWNvbnM7XG4gIH1cblxuICBnZXQgYXJpYUV4cGFuZGVkKCk6IHN0cmluZyB7XG4gICAgaWYgKCF0aGlzLmNvbGxhcHNpYmxlKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuICF0aGlzLmNvbGxhcHNlZCA/ICd0cnVlJyA6ICdmYWxzZSc7XG4gIH1cblxuICBwcml2YXRlIF9zdWI6IFN1YnNjcmlwdGlvbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIF9uYXZTZXJ2aWNlOiBWZXJ0aWNhbE5hdlNlcnZpY2UsXG4gICAgcHJpdmF0ZSBfbmF2SWNvblNlcnZpY2U6IFZlcnRpY2FsTmF2SWNvblNlcnZpY2UsXG4gICAgcHJpdmF0ZSBfbmF2R3JvdXBSZWdpc3RyYXRpb25TZXJ2aWNlOiBWZXJ0aWNhbE5hdkdyb3VwUmVnaXN0cmF0aW9uU2VydmljZSxcbiAgICBwdWJsaWMgY29tbW9uU3RyaW5nczogQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5fc3ViID0gdGhpcy5fbmF2U2VydmljZS5jb2xsYXBzZWRDaGFuZ2VkLnN1YnNjcmliZSh2YWx1ZSA9PiB7XG4gICAgICB0aGlzLl9jb2xsYXBzZWRDaGFuZ2VkLmVtaXQodmFsdWUpO1xuICAgIH0pO1xuICB9XG5cbiAgdG9nZ2xlQnlCdXR0b24oKSB7XG4gICAgdGhpcy5jb2xsYXBzZWQgPSAhdGhpcy5jb2xsYXBzZWQ7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLl9zdWIudW5zdWJzY3JpYmUoKTtcbiAgfVxufVxuIl19