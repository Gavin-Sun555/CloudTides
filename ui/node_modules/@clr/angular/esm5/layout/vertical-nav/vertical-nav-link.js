import { __decorate, __param } from "tslib";
/*
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, HostListener, Optional } from '@angular/core';
import { VerticalNavGroupService } from './providers/vertical-nav-group.service';
import * as ɵngcc0 from '@angular/core';

var _c0 = ["clrVerticalNavLink", ""];
var _c1 = [[["", "clrVerticalNavIcon", ""]], "*"];
var _c2 = ["[clrVerticalNavIcon]", "*"];
var ClrVerticalNavLink = /** @class */ (function () {
    function ClrVerticalNavLink(_navGroupService) {
        this._navGroupService = _navGroupService;
    }
    ClrVerticalNavLink.prototype.expandParentNavGroup = function () {
        if (this._navGroupService) {
            this._navGroupService.expand();
        }
    };
    ClrVerticalNavLink.ctorParameters = function () { return [
        { type: VerticalNavGroupService, decorators: [{ type: Optional }] }
    ]; };
    __decorate([
        HostListener('click')
    ], ClrVerticalNavLink.prototype, "expandParentNavGroup", null);
    ClrVerticalNavLink = __decorate([ __param(0, Optional())
    ], ClrVerticalNavLink);
ClrVerticalNavLink.ɵfac = function ClrVerticalNavLink_Factory(t) { return new (t || ClrVerticalNavLink)(ɵngcc0.ɵɵdirectiveInject(VerticalNavGroupService, 8)); };
ClrVerticalNavLink.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrVerticalNavLink, selectors: [["", "clrVerticalNavLink", ""]], hostAttrs: [1, "nav-link"], hostBindings: function ClrVerticalNavLink_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ClrVerticalNavLink_click_HostBindingHandler() { return ctx.expandParentNavGroup(); });
    } }, attrs: _c0, ngContentSelectors: _c2, decls: 3, vars: 0, consts: [[1, "nav-text"]], template: function ClrVerticalNavLink_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c1);
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵelementStart(1, "span", 0);
        ɵngcc0.ɵɵprojection(2, 1);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrVerticalNavLink, [{
        type: Component,
        args: [{
                selector: '[clrVerticalNavLink]',
                template: "\n        <ng-content select=\"[clrVerticalNavIcon]\"></ng-content>\n        <span class=\"nav-text\">\n            <ng-content></ng-content>    \n        </span>\n    ",
                host: { class: 'nav-link' }
            }]
    }], function () { return [{ type: VerticalNavGroupService, decorators: [{
                type: Optional
            }] }]; }, { expandParentNavGroup: [{
            type: HostListener,
            args: ['click']
        }] }); })();
    return ClrVerticalNavLink;
}());
export { ClrVerticalNavLink };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVydGljYWwtbmF2LWxpbmsuanMiLCJzb3VyY2VzIjpbIm5nOi9AY2xyL2FuZ3VsYXIvbGF5b3V0L3ZlcnRpY2FsLW5hdi92ZXJ0aWNhbC1uYXYtbGluay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDOzs7Ozs7QUFZakY7QUFDb0IsSUFBbEIsNEJBQWdDLGdCQUF5QztBQUFJLFFBQTdDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBeUI7QUFBQyxJQUFFLENBQUM7QUFDL0UsSUFFUyxpREFBb0IsR0FBM0I7QUFBYyxRQUNaLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO0FBQy9CLFlBQU0sSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ3JDLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDRjtBQUM2RCxnQkFUVix1QkFBdUIsdUJBQTVELFFBQVE7QUFBTTtBQUFVLElBR3JDO0FBQWEsUUFEWixZQUFZLENBQUMsT0FBTyxDQUFDO0FBQ3hCLGtFQUlHO0FBQ0YsSUFUWSxrQkFBa0Isd0JBVjlCLFNBQVMsQ0FBQyxuQkFVSCxDQUNPLFdBQUEsUUFBUSxFQUFFLENBQUE7U0FWdkIsUUFBUSxFQUFFLG5CQVVjLE9BRGIsa0JBQWtCLENBUzlCO2FBbEJpQyxjQUNoQyxRQUFRLEVBQUU7NkNBS1AsY0FDSCxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFVBQzVCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFXRjtBQUFDLElBREQseUJBQUM7QUFDQSxDQURBLEFBVEQsSUFTQztBQUNELFNBVmEsa0JBQWtCO0FBQzlCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDE4IFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0TGlzdGVuZXIsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBWZXJ0aWNhbE5hdkdyb3VwU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL3ZlcnRpY2FsLW5hdi1ncm91cC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnW2NsclZlcnRpY2FsTmF2TGlua10nLFxuICB0ZW1wbGF0ZTogYFxuICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbY2xyVmVydGljYWxOYXZJY29uXVwiPjwvbmctY29udGVudD5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJuYXYtdGV4dFwiPlxuICAgICAgICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PiAgICBcbiAgICAgICAgPC9zcGFuPlxuICAgIGAsXG4gIGhvc3Q6IHsgY2xhc3M6ICduYXYtbGluaycgfSxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyVmVydGljYWxOYXZMaW5rIHtcbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgcHJpdmF0ZSBfbmF2R3JvdXBTZXJ2aWNlOiBWZXJ0aWNhbE5hdkdyb3VwU2VydmljZSkge31cblxuICBASG9zdExpc3RlbmVyKCdjbGljaycpXG4gIHB1YmxpYyBleHBhbmRQYXJlbnROYXZHcm91cCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5fbmF2R3JvdXBTZXJ2aWNlKSB7XG4gICAgICB0aGlzLl9uYXZHcm91cFNlcnZpY2UuZXhwYW5kKCk7XG4gICAgfVxuICB9XG59XG4iXX0=