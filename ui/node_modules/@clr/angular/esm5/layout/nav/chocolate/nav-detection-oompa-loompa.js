import { __decorate, __extends, __param } from "tslib";
/*
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { ChangeDetectorRef, Directive, Optional } from '@angular/core';
import { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';
import { ResponsiveNavigationService } from '../providers/responsive-navigation.service';
import { MainContainerWillyWonka } from './main-container-willy-wonka';
import * as ɵngcc0 from '@angular/core';
var NavDetectionOompaLoompa = /** @class */ (function (_super) {
    __extends(NavDetectionOompaLoompa, _super);
    function NavDetectionOompaLoompa(cdr, willyWonka, responsiveNavService) {
        var _this = this;
        if (!willyWonka) {
            throw new Error('clr-header should only be used inside of a clr-main-container');
        }
        _this = _super.call(this, cdr, willyWonka) || this;
        _this.responsiveNavService = responsiveNavService;
        return _this;
    }
    Object.defineProperty(NavDetectionOompaLoompa.prototype, "flavor", {
        // NavDetectionOompaLoompa is the addition of the nav levels
        // Since we support 2 levels, the possibilities are 0, 1 or 3 (1 + 2)
        get: function () {
            return this.responsiveNavService.responsiveNavList.reduce(function (sum, navLevel) { return sum + navLevel; }, 0);
        },
        enumerable: true,
        configurable: true
    });
    NavDetectionOompaLoompa.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: MainContainerWillyWonka, decorators: [{ type: Optional }] },
        { type: ResponsiveNavigationService }
    ]; };
    NavDetectionOompaLoompa = __decorate([ __param(1, Optional())
    ], NavDetectionOompaLoompa);
NavDetectionOompaLoompa.ɵfac = function NavDetectionOompaLoompa_Factory(t) { return new (t || NavDetectionOompaLoompa)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MainContainerWillyWonka, 8), ɵngcc0.ɵɵdirectiveInject(ResponsiveNavigationService)); };
NavDetectionOompaLoompa.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NavDetectionOompaLoompa, selectors: [["clr-header"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NavDetectionOompaLoompa, [{
        type: Directive,
        args: [{ selector: 'clr-header' }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MainContainerWillyWonka, decorators: [{
                type: Optional
            }] }, { type: ResponsiveNavigationService }]; }, null); })();
    return NavDetectionOompaLoompa;
}(OompaLoompa));
export { NavDetectionOompaLoompa };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LWRldGVjdGlvbi1vb21wYS1sb29tcGEuanMiLCJzb3VyY2VzIjpbIm5nOi9AY2xyL2FuZ3VsYXIvbGF5b3V0L25hdi9jaG9jb2xhdGUvbmF2LWRldGVjdGlvbi1vb21wYS1sb29tcGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUNwRSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUN6RixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7QUFHdkU7QUFDTSxJQUR1QywyQ0FBVztBQUFDLElBR3ZELGlDQUNFLEdBQXNCLEVBQ1YsVUFBbUMsRUFDL0Msb0JBQWlEO0FBQ2xELFFBSkQsaUJBVUM7QUFDSCxRQU5JLElBQUksQ0FBQyxVQUFVLEVBQUU7QUFDckIsWUFBTSxNQUFNLElBQUksS0FBSyxDQUFDLCtEQUErRCxDQUFDLENBQUM7QUFDdkYsU0FBSztBQUNMLFFBQUksUUFBQSxrQkFBTSxHQUFHLEVBQUUsVUFBVSxDQUFDLFNBQUM7QUFDM0IsUUFBSSxLQUFJLENBQUMsb0JBQW9CLEdBQUcsb0JBQW9CLENBQUM7QUFDckQ7QUFFaUIsSUFGZixDQUFDO0FBQ0gsSUFHRSxzQkFBSSwyQ0FBTTtBQUFJLFFBRmQsNERBQTREO0FBQzlELFFBQUUscUVBQXFFO0FBQ3ZFLGFBQUU7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxVQUFDLEdBQUcsRUFBRSxRQUFRLElBQUssT0FBQSxHQUFHLEdBQUcsUUFBUSxFQUFkLENBQWMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNwRyxRQUFFLENBQUM7QUFDRjtBQUN3QjtBQUEyQixPQUZqRDtBQUNIO0FBQ2tFLGdCQWpCekQsaUJBQWlCO0FBQ3hCLGdCQUEwQix1QkFBdUIsdUJBQTlDLFFBQVE7QUFBTyxnQkFDTSwyQkFBMkI7QUFDbkQ7QUFDSSxJQVJPLHVCQUF1Qix3QkFEbkMsU0FBUyxDQUFDLEVBQUUsckJBQ0wsQ0FLSCxXQUFBLFFBQVEsRUFBRSxDQUFBO0tBTk0sRUFBRSxZQUFZLEVBQUUsQ0FBQyx0QkFNdEIsT0FMSCx1QkFBdUIsQ0FvQm5DOzs7Ozs7Ozt5RUFDRDtBQUFDLElBREQsOEJBQUM7QUFDQSxDQURBLEFBcEJELENBQTZDLFdBQVcsR0FvQnZEO0FBQ0QsU0FyQmEsdUJBQXVCO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMTggVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRGlyZWN0aXZlLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT29tcGFMb29tcGEgfSBmcm9tICcuLi8uLi8uLi91dGlscy9jaG9jb2xhdGUvb29tcGEtbG9vbXBhJztcbmltcG9ydCB7IFJlc3BvbnNpdmVOYXZpZ2F0aW9uU2VydmljZSB9IGZyb20gJy4uL3Byb3ZpZGVycy9yZXNwb25zaXZlLW5hdmlnYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBNYWluQ29udGFpbmVyV2lsbHlXb25rYSB9IGZyb20gJy4vbWFpbi1jb250YWluZXItd2lsbHktd29ua2EnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdjbHItaGVhZGVyJyB9KVxuZXhwb3J0IGNsYXNzIE5hdkRldGVjdGlvbk9vbXBhTG9vbXBhIGV4dGVuZHMgT29tcGFMb29tcGEge1xuICBwcml2YXRlIHJlc3BvbnNpdmVOYXZTZXJ2aWNlOiBSZXNwb25zaXZlTmF2aWdhdGlvblNlcnZpY2U7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBAT3B0aW9uYWwoKSB3aWxseVdvbmthOiBNYWluQ29udGFpbmVyV2lsbHlXb25rYSxcbiAgICByZXNwb25zaXZlTmF2U2VydmljZTogUmVzcG9uc2l2ZU5hdmlnYXRpb25TZXJ2aWNlXG4gICkge1xuICAgIGlmICghd2lsbHlXb25rYSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdjbHItaGVhZGVyIHNob3VsZCBvbmx5IGJlIHVzZWQgaW5zaWRlIG9mIGEgY2xyLW1haW4tY29udGFpbmVyJyk7XG4gICAgfVxuICAgIHN1cGVyKGNkciwgd2lsbHlXb25rYSk7XG4gICAgdGhpcy5yZXNwb25zaXZlTmF2U2VydmljZSA9IHJlc3BvbnNpdmVOYXZTZXJ2aWNlO1xuICB9XG5cbiAgLy8gTmF2RGV0ZWN0aW9uT29tcGFMb29tcGEgaXMgdGhlIGFkZGl0aW9uIG9mIHRoZSBuYXYgbGV2ZWxzXG4gIC8vIFNpbmNlIHdlIHN1cHBvcnQgMiBsZXZlbHMsIHRoZSBwb3NzaWJpbGl0aWVzIGFyZSAwLCAxIG9yIDMgKDEgKyAyKVxuICBnZXQgZmxhdm9yKCkge1xuICAgIHJldHVybiB0aGlzLnJlc3BvbnNpdmVOYXZTZXJ2aWNlLnJlc3BvbnNpdmVOYXZMaXN0LnJlZHVjZSgoc3VtLCBuYXZMZXZlbCkgPT4gc3VtICsgbmF2TGV2ZWwsIDApO1xuICB9XG59XG4iXX0=