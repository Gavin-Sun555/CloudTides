import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ClrIfActive } from './if-active.directive';
import { ClrIfOpen } from './if-open.directive';
import { ClrIfExpanded } from './if-expanded.directive';
import * as ɵngcc0 from '@angular/core';
export var CONDITIONAL_DIRECTIVES = [ClrIfActive, ClrIfOpen, ClrIfExpanded];
var ClrConditionalModule = /** @class */ (function () {
    function ClrConditionalModule() {
    }
ClrConditionalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClrConditionalModule });
ClrConditionalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ClrConditionalModule_Factory(t) { return new (t || ClrConditionalModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClrConditionalModule, { declarations: function () { return [ClrIfActive, ClrIfOpen, ClrIfExpanded]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ClrIfActive, ClrIfOpen, ClrIfExpanded]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrConditionalModule, [{
        type: NgModule,
        args: [{ imports: [CommonModule], declarations: [CONDITIONAL_DIRECTIVES], exports: [CONDITIONAL_DIRECTIVES] }]
    }], function () { return []; }, null); })();
    return ClrConditionalModule;
}());
export { ClrConditionalModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZGl0aW9uYWwubW9kdWxlLmpzIiwic291cmNlcyI6WyJuZzovQGNsci9hbmd1bGFyL3V0aWxzL2NvbmRpdGlvbmFsL2NvbmRpdGlvbmFsLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQVEsTUFBTSxlQUFlLENBQUM7QUFFL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0seUJBQXlCLENBQUM7O0FBRXhELE1BQU0sQ0FBQyxJQUFNLHNCQUFzQixHQUFnQixDQUFDLFdBQVcsRUFBRSxTQUFTLEVBQUUsYUFBYSxDQUFDLENBQUM7QUFHM0Y7QUFDbUIsSUFEbkI7QUFBa0MsSUFBQyxDQUFDO0lBQXZCLG9CQUFvQix3QkFEaEMsUUFBUSxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLEVBQUU7V0FBWSxFQUFFLENBQUMsc0JBQXNCLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxFQUFFLENBQUMsUUFDcEcsb0JBQW9CLENBQUc7Ozs7O2dEQUNwQztBQUFDLElBRGtDLDJCQUFDO0FBQ25DLENBRG1DLEFBQXBDLElBQW9DO0FBQ3BDLFNBRGEsb0JBQW9CO0FBQ2pDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlLCBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IENscklmQWN0aXZlIH0gZnJvbSAnLi9pZi1hY3RpdmUuZGlyZWN0aXZlJztcbmltcG9ydCB7IENscklmT3BlbiB9IGZyb20gJy4vaWYtb3Blbi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ2xySWZFeHBhbmRlZCB9IGZyb20gJy4vaWYtZXhwYW5kZWQuZGlyZWN0aXZlJztcblxuZXhwb3J0IGNvbnN0IENPTkRJVElPTkFMX0RJUkVDVElWRVM6IFR5cGU8YW55PltdID0gW0NscklmQWN0aXZlLCBDbHJJZk9wZW4sIENscklmRXhwYW5kZWRdO1xuXG5ATmdNb2R1bGUoeyBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSwgZGVjbGFyYXRpb25zOiBbQ09ORElUSU9OQUxfRElSRUNUSVZFU10sIGV4cG9ydHM6IFtDT05ESVRJT05BTF9ESVJFQ1RJVkVTXSB9KVxuZXhwb3J0IGNsYXNzIENsckNvbmRpdGlvbmFsTW9kdWxlIHt9XG4iXX0=