import { __decorate, __param } from "tslib";
/*
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input, Optional } from '@angular/core';
import { LoadingListener } from './loading-listener';
import * as ɵngcc0 from '@angular/core';
export var ClrLoadingState;
(function (ClrLoadingState) {
    ClrLoadingState[ClrLoadingState["DEFAULT"] = 0] = "DEFAULT";
    ClrLoadingState[ClrLoadingState["LOADING"] = 1] = "LOADING";
    ClrLoadingState[ClrLoadingState["SUCCESS"] = 2] = "SUCCESS";
    ClrLoadingState[ClrLoadingState["ERROR"] = 3] = "ERROR";
})(ClrLoadingState || (ClrLoadingState = {}));
var ClrLoading = /** @class */ (function () {
    // We find the first parent that handles something loading
    function ClrLoading(listener) {
        this.listener = listener;
        this._loadingState = ClrLoadingState.DEFAULT;
    }
    Object.defineProperty(ClrLoading.prototype, "loadingState", {
        get: function () {
            return this._loadingState;
        },
        set: function (value) {
            if (value === true) {
                value = ClrLoadingState.LOADING;
            }
            else if (!value) {
                value = ClrLoadingState.DEFAULT;
            }
            if (value === this._loadingState) {
                return;
            }
            this._loadingState = value;
            if (this.listener) {
                this.listener.loadingStateChange(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    ClrLoading.prototype.ngOnDestroy = function () {
        this.loadingState = ClrLoadingState.DEFAULT;
    };
    ClrLoading.ctorParameters = function () { return [
        { type: LoadingListener, decorators: [{ type: Optional }] }
    ]; };
    __decorate([
        Input('clrLoading')
    ], ClrLoading.prototype, "loadingState", null);
    ClrLoading = __decorate([ __param(0, Optional())
    ], ClrLoading);
ClrLoading.ɵfac = function ClrLoading_Factory(t) { return new (t || ClrLoading)(ɵngcc0.ɵɵdirectiveInject(LoadingListener, 8)); };
ClrLoading.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClrLoading, selectors: [["", "clrLoading", ""]], inputs: { loadingState: ["clrLoading", "loadingState"] } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrLoading, [{
        type: Directive,
        args: [{ selector: '[clrLoading]' }]
    }], function () { return [{ type: LoadingListener, decorators: [{
                type: Optional
            }] }]; }, { loadingState: [{
            type: Input,
            args: ['clrLoading']
        }] }); })();
    return ClrLoading;
}());
export { ClrLoading };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci91dGlscy9sb2FkaW5nL2xvYWRpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFhLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV0RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7O0FBRXJELE1BQU0sQ0FBTixJQUFZLGVBS1g7QUFMRCxXQUFZLGVBQWU7QUFDMUIsSUFBQywyREFBTyxDQUFBO0FBQUMsSUFDUiwyREFBTyxDQUFBO0FBQUMsSUFDUiwyREFBTyxDQUFBO0FBQUMsSUFDUix1REFBSyxDQUFBO0FBQ1AsQ0FBQyxFQUxXLGVBQWUsS0FBZixlQUFlLFFBSzFCO0FBR0Q7QUFBOEMsSUFDNUMsMERBQTBEO0FBQzVELElBQUUsb0JBQWdDLFFBQXlCO0FBQUksUUFBN0IsYUFBUSxHQUFSLFFBQVEsQ0FBaUI7QUFBQyxRQUVsRCxrQkFBYSxHQUFvQixlQUFlLENBQUMsT0FBTyxDQUFDO0FBQ25FLElBSDhELENBQUM7QUFDL0QsSUFHRSxzQkFBVyxvQ0FBWTtBQUFJLGFBQTNCO0FBQWMsWUFDWixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUM7QUFDOUIsUUFBRSxDQUFDO0FBRUgsYUFDRSxVQUF3QixLQUFnQztBQUMxRCxZQUFJLElBQUksS0FBSyxLQUFLLElBQUksRUFBRTtBQUN4QixnQkFBTSxLQUFLLEdBQUcsZUFBZSxDQUFDLE9BQU8sQ0FBQztBQUN0QyxhQUFLO0FBQUMsaUJBQUssSUFBSSxDQUFDLEtBQUssRUFBRTtBQUN2QixnQkFBTSxLQUFLLEdBQUcsZUFBZSxDQUFDLE9BQU8sQ0FBQztBQUN0QyxhQUFLO0FBQ0wsWUFDSSxJQUFJLEtBQUssS0FBSyxJQUFJLENBQUMsYUFBYSxFQUFFO0FBQ3RDLGdCQUFNLE9BQU87QUFDYixhQUFLO0FBQ0wsWUFDSSxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztBQUMvQixZQUFJLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtBQUN2QixnQkFBTSxJQUFJLENBQUMsUUFBUSxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzlDLGFBQUs7QUFDTCxRQUFFLENBQUM7QUFFSDtBQUNRO0FBQTJCLE9BckJoQztBQUNILElBbUJFLGdDQUFXLEdBQVg7QUFBYyxRQUNaLElBQUksQ0FBQyxZQUFZLEdBQUcsZUFBZSxDQUFDLE9BQU8sQ0FBQztBQUNoRCxJQUFFLENBQUM7QUFDRjtBQUNxRCxnQkE5QlYsZUFBZSx1QkFBNUMsUUFBUTtBQUFNO0FBQVUsSUFTckM7QUFBYSxRQURaLEtBQUssQ0FBQyxZQUFZLENBQUM7QUFDdEIsa0RBZUc7QUFFSCxJQTVCYSxVQUFVLHdCQUR0QixTQUFTLENBQUMsRUFBRSxyQkFDTCxDQUVPLFdBQUEsUUFBUSxFQUFFLENBQUE7S0FISixFQUFFLFBBR0csT0FGYixVQUFVLENBK0J0QjtDQWhDb0MsRUFBRSxDQUFDOzs7Ozs7Ozs7O29CQWlDeEM7QUFBQyxJQURELGlCQUFDO0FBQ0EsQ0FEQSxBQS9CRCxJQStCQztBQUNELFNBaENhLFVBQVU7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOCBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cbmltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIE9uRGVzdHJveSwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTG9hZGluZ0xpc3RlbmVyIH0gZnJvbSAnLi9sb2FkaW5nLWxpc3RlbmVyJztcblxuZXhwb3J0IGVudW0gQ2xyTG9hZGluZ1N0YXRlIHtcbiAgREVGQVVMVCxcbiAgTE9BRElORyxcbiAgU1VDQ0VTUyxcbiAgRVJST1IsXG59XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1tjbHJMb2FkaW5nXScgfSlcbmV4cG9ydCBjbGFzcyBDbHJMb2FkaW5nIGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgLy8gV2UgZmluZCB0aGUgZmlyc3QgcGFyZW50IHRoYXQgaGFuZGxlcyBzb21ldGhpbmcgbG9hZGluZ1xuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBwcml2YXRlIGxpc3RlbmVyOiBMb2FkaW5nTGlzdGVuZXIpIHt9XG5cbiAgcHJpdmF0ZSBfbG9hZGluZ1N0YXRlOiBDbHJMb2FkaW5nU3RhdGUgPSBDbHJMb2FkaW5nU3RhdGUuREVGQVVMVDtcblxuICBwdWJsaWMgZ2V0IGxvYWRpbmdTdGF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fbG9hZGluZ1N0YXRlO1xuICB9XG5cbiAgQElucHV0KCdjbHJMb2FkaW5nJylcbiAgcHVibGljIHNldCBsb2FkaW5nU3RhdGUodmFsdWU6IGJvb2xlYW4gfCBDbHJMb2FkaW5nU3RhdGUpIHtcbiAgICBpZiAodmFsdWUgPT09IHRydWUpIHtcbiAgICAgIHZhbHVlID0gQ2xyTG9hZGluZ1N0YXRlLkxPQURJTkc7XG4gICAgfSBlbHNlIGlmICghdmFsdWUpIHtcbiAgICAgIHZhbHVlID0gQ2xyTG9hZGluZ1N0YXRlLkRFRkFVTFQ7XG4gICAgfVxuXG4gICAgaWYgKHZhbHVlID09PSB0aGlzLl9sb2FkaW5nU3RhdGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9sb2FkaW5nU3RhdGUgPSB2YWx1ZTtcbiAgICBpZiAodGhpcy5saXN0ZW5lcikge1xuICAgICAgdGhpcy5saXN0ZW5lci5sb2FkaW5nU3RhdGVDaGFuZ2UodmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMubG9hZGluZ1N0YXRlID0gQ2xyTG9hZGluZ1N0YXRlLkRFRkFVTFQ7XG4gIH1cbn1cbiJdfQ==