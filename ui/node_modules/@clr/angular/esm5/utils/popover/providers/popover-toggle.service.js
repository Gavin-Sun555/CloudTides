import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 *
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
var ClrPopoverToggleService = /** @class */ (function () {
    function ClrPopoverToggleService() {
        /**
         *  Popovers might need to ignore click events on an element
         *  (eg: popover opens on focus on an input field. Clicks should be ignored in this case)
         */
        this._open = false;
        this._openChange = new Subject();
        this._openEventChange = new Subject();
    }
    Object.defineProperty(ClrPopoverToggleService.prototype, "openChange", {
        get: function () {
            return this._openChange.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrPopoverToggleService.prototype, "openEvent", {
        get: function () {
            return this._openEvent;
        },
        set: function (event) {
            this._openEvent = event;
            this._openEventChange.next(event);
        },
        enumerable: true,
        configurable: true
    });
    ClrPopoverToggleService.prototype.getEventChange = function () {
        return this._openEventChange.asObservable();
    };
    Object.defineProperty(ClrPopoverToggleService.prototype, "open", {
        get: function () {
            return this._open;
        },
        set: function (value) {
            value = !!value;
            if (this._open !== value) {
                this._open = value;
                this._openChange.next(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrPopoverToggleService.prototype, "originalEvent", {
        get: function () {
            return this._openEvent;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sometimes, we need to remember the event that triggered the toggling to avoid loops.
     * This is for instance the case of components that open on a click, but close on a click outside.
     */
    ClrPopoverToggleService.prototype.toggleWithEvent = function (event) {
        this.openEvent = event;
        this.open = !this.open;
    };
ClrPopoverToggleService.ɵfac = function ClrPopoverToggleService_Factory(t) { return new (t || ClrPopoverToggleService)(); };
ClrPopoverToggleService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ClrPopoverToggleService, factory: function (t) { return ClrPopoverToggleService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrPopoverToggleService, [{
        type: Injectable
    }], function () { return []; }, null); })();
    return ClrPopoverToggleService;
}());
export { ClrPopoverToggleService };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci10b2dnbGUuc2VydmljZS5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci91dGlscy9wb3BvdmVyL3Byb3ZpZGVycy9wb3BvdmVyLXRvZ2dsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQzs7QUFHM0M7QUFFYyxJQUZkO0FBQXFDLFFBQ25DO0FBQ0Y7QUFDTTtBQUVBLFdBREQ7QUFDTCxRQUFVLFVBQUssR0FBWSxLQUFLLENBQUM7QUFDakMsUUFBVSxnQkFBVyxHQUFxQixJQUFJLE9BQU8sRUFBVyxDQUFDO0FBQ2pFLFFBQ1UscUJBQWdCLEdBQW1CLElBQUksT0FBTyxFQUFTLENBQUM7QUFDbEUsSUEwQ0EsQ0FBQztBQUNELElBMUNFLHNCQUFXLCtDQUFVO0FBQUksYUFBekI7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztBQUMzQyxRQUFFLENBQUM7QUFFSDtBQUEwQjtBQUNaLE9BSFg7QUFDSCxJQUNFLHNCQUFXLDhDQUFTO0FBQUksYUFLeEI7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztBQUMzQixRQUFFLENBQUM7QUFFSCxhQVRFLFVBQXFCLEtBQVk7QUFDbkMsWUFBSSxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztBQUM1QixZQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDdEMsUUFBRSxDQUFDO0FBRUg7QUFBMEI7QUFDUCxPQUhoQjtBQUNILElBS1MsZ0RBQWMsR0FBckI7QUFBYyxRQUNaLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLFlBQVksRUFBRSxDQUFDO0FBQ2hELElBQUUsQ0FBQztBQUVILElBQUUsc0JBQVcseUNBQUk7QUFBSSxhQVFuQjtBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0FBQ3RCLFFBQUUsQ0FBQztBQUVILGFBWkUsVUFBZ0IsS0FBYztBQUNoQyxZQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDO0FBQ3BCLFlBQUksSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLEtBQUssRUFBRTtBQUM5QixnQkFBTSxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUN6QixnQkFBTSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNuQyxhQUFLO0FBQ0wsUUFBRSxDQUFDO0FBRUg7QUFBMEI7QUFDSixPQUhuQjtBQUNILElBS0Usc0JBQUksa0RBQWE7QUFBSSxhQUFyQjtBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0FBQzNCLFFBQUUsQ0FBQztBQUVIO0FBQ29CO0FBQTJCLE9BSDVDO0FBQ0gsSUFDRTtBQUNGO0FBQ0U7QUFDRSxPQUFDO0FBQ0wsSUFBUyxpREFBZSxHQUF0QixVQUF1QixLQUFVO0FBQ25DLFFBQUksSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7QUFDM0IsUUFBSSxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztBQUMzQixJQUFFLENBQUM7SUFsRFUsdUJBQXVCLHdCQURuQyxVQUFVLEVBQUUsUUFDQSx1QkFBdUIsQ0FtRG5DOzs7O2dEQUNEO0FBQUMsSUFERCw4QkFBQztBQUNBLENBREEsQUFuREQsSUFtREM7QUFDRCxTQXBEYSx1QkFBdUI7QUFDbkMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICpcbiAqL1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQ2xyUG9wb3ZlclRvZ2dsZVNlcnZpY2Uge1xuICAvKipcbiAgICogIFBvcG92ZXJzIG1pZ2h0IG5lZWQgdG8gaWdub3JlIGNsaWNrIGV2ZW50cyBvbiBhbiBlbGVtZW50XG4gICAqICAoZWc6IHBvcG92ZXIgb3BlbnMgb24gZm9jdXMgb24gYW4gaW5wdXQgZmllbGQuIENsaWNrcyBzaG91bGQgYmUgaWdub3JlZCBpbiB0aGlzIGNhc2UpXG4gICAqL1xuICBwcml2YXRlIF9vcGVuOiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgX29wZW5DaGFuZ2U6IFN1YmplY3Q8Ym9vbGVhbj4gPSBuZXcgU3ViamVjdDxib29sZWFuPigpO1xuICBwcml2YXRlIF9vcGVuRXZlbnQ6IEV2ZW50O1xuICBwcml2YXRlIF9vcGVuRXZlbnRDaGFuZ2U6IFN1YmplY3Q8RXZlbnQ+ID0gbmV3IFN1YmplY3Q8RXZlbnQ+KCk7XG5cbiAgcHVibGljIGdldCBvcGVuQ2hhbmdlKCk6IE9ic2VydmFibGU8Ym9vbGVhbj4ge1xuICAgIHJldHVybiB0aGlzLl9vcGVuQ2hhbmdlLmFzT2JzZXJ2YWJsZSgpO1xuICB9XG5cbiAgcHVibGljIHNldCBvcGVuRXZlbnQoZXZlbnQ6IEV2ZW50KSB7XG4gICAgdGhpcy5fb3BlbkV2ZW50ID0gZXZlbnQ7XG4gICAgdGhpcy5fb3BlbkV2ZW50Q2hhbmdlLm5leHQoZXZlbnQpO1xuICB9XG5cbiAgcHVibGljIGdldCBvcGVuRXZlbnQoKTogRXZlbnQge1xuICAgIHJldHVybiB0aGlzLl9vcGVuRXZlbnQ7XG4gIH1cblxuICBwdWJsaWMgZ2V0RXZlbnRDaGFuZ2UoKTogT2JzZXJ2YWJsZTxFdmVudD4ge1xuICAgIHJldHVybiB0aGlzLl9vcGVuRXZlbnRDaGFuZ2UuYXNPYnNlcnZhYmxlKCk7XG4gIH1cblxuICBwdWJsaWMgc2V0IG9wZW4odmFsdWU6IGJvb2xlYW4pIHtcbiAgICB2YWx1ZSA9ICEhdmFsdWU7XG4gICAgaWYgKHRoaXMuX29wZW4gIT09IHZhbHVlKSB7XG4gICAgICB0aGlzLl9vcGVuID0gdmFsdWU7XG4gICAgICB0aGlzLl9vcGVuQ2hhbmdlLm5leHQodmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBnZXQgb3BlbigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fb3BlbjtcbiAgfVxuXG4gIGdldCBvcmlnaW5hbEV2ZW50KCk6IEV2ZW50IHtcbiAgICByZXR1cm4gdGhpcy5fb3BlbkV2ZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIFNvbWV0aW1lcywgd2UgbmVlZCB0byByZW1lbWJlciB0aGUgZXZlbnQgdGhhdCB0cmlnZ2VyZWQgdGhlIHRvZ2dsaW5nIHRvIGF2b2lkIGxvb3BzLlxuICAgKiBUaGlzIGlzIGZvciBpbnN0YW5jZSB0aGUgY2FzZSBvZiBjb21wb25lbnRzIHRoYXQgb3BlbiBvbiBhIGNsaWNrLCBidXQgY2xvc2Ugb24gYSBjbGljayBvdXRzaWRlLlxuICAgKi9cbiAgcHVibGljIHRvZ2dsZVdpdGhFdmVudChldmVudDogYW55KSB7XG4gICAgdGhpcy5vcGVuRXZlbnQgPSBldmVudDtcbiAgICB0aGlzLm9wZW4gPSAhdGhpcy5vcGVuO1xuICB9XG59XG4iXX0=