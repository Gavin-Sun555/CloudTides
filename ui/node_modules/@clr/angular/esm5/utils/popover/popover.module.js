/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 *
 */
import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { ClrPopoverContent } from './popover-content';
import { ClrPopoverOpenCloseButton } from './popover-open-close-button';
import { ClrPopoverCloseButton } from './popover-close-button';
import { ClrPopoverAnchor } from './popover-anchor';
import * as ɵngcc0 from '@angular/core';
var ClrPopoverModuleNext = /** @class */ (function () {
    function ClrPopoverModuleNext() {
    }
ClrPopoverModuleNext.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClrPopoverModuleNext });
ClrPopoverModuleNext.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ClrPopoverModuleNext_Factory(t) { return new (t || ClrPopoverModuleNext)(); }, imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClrPopoverModuleNext, { declarations: function () { return [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent]; }, exports: function () { return [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrPopoverModuleNext, [{
        type: NgModule,
        args: [{
                imports: [],
                declarations: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],
                exports: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent]
            }]
    }], function () { return []; }, null); })();
    return ClrPopoverModuleNext;
}());
export { ClrPopoverModuleNext };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nOi9AY2xyL2FuZ3VsYXIvdXRpbHMvcG9wb3Zlci9wb3BvdmVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN4RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUFPcEQ7QUFDbUIsSUFEbkI7QUFBa0MsSUFBQyxDQUFDO0lBQXZCLG9CQUFvQix3QkFMaEMsUUFBUSxDQUFDLGNBQ1IsT0FBTyxFQUFFLEVBQUU7V0FDWCxZQUFZLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxxQkFBcUIsRUFBRSx5QkFBeUIsRUFBRSxpQkFBaUIsQ0FBQyxjQUNyRyxPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRTtNQUFxQixFQUFFLHlCQUF5QixFQUFFLGlCQUFpQixDQUFDLFdBQ2pHLENBQUMsUUFDVyxvQkFBb0IsQ0FBRzs7Ozs7Ozs7Z0RBQ3BDO0FBQUMsSUFEa0MsMkJBQUM7QUFDbkMsQ0FEbUMsQUFBcEMsSUFBb0M7QUFDcEMsU0FEYSxvQkFBb0I7QUFDakMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICpcbiAqL1xuXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2xyUG9wb3ZlckNvbnRlbnQgfSBmcm9tICcuL3BvcG92ZXItY29udGVudCc7XG5pbXBvcnQgeyBDbHJQb3BvdmVyT3BlbkNsb3NlQnV0dG9uIH0gZnJvbSAnLi9wb3BvdmVyLW9wZW4tY2xvc2UtYnV0dG9uJztcbmltcG9ydCB7IENsclBvcG92ZXJDbG9zZUJ1dHRvbiB9IGZyb20gJy4vcG9wb3Zlci1jbG9zZS1idXR0b24nO1xuaW1wb3J0IHsgQ2xyUG9wb3ZlckFuY2hvciB9IGZyb20gJy4vcG9wb3Zlci1hbmNob3InO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXSxcbiAgZGVjbGFyYXRpb25zOiBbQ2xyUG9wb3ZlckFuY2hvciwgQ2xyUG9wb3ZlckNsb3NlQnV0dG9uLCBDbHJQb3BvdmVyT3BlbkNsb3NlQnV0dG9uLCBDbHJQb3BvdmVyQ29udGVudF0sXG4gIGV4cG9ydHM6IFtDbHJQb3BvdmVyQW5jaG9yLCBDbHJQb3BvdmVyQ2xvc2VCdXR0b24sIENsclBvcG92ZXJPcGVuQ2xvc2VCdXR0b24sIENsclBvcG92ZXJDb250ZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyUG9wb3Zlck1vZHVsZU5leHQge31cbiJdfQ==