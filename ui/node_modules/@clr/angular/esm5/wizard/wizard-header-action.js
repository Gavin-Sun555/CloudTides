/*
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

var _c0 = ["*"];
var wizardHeaderActionIndex = 0;
var ClrWizardHeaderAction = /** @class */ (function () {
    function ClrWizardHeaderAction() {
        // title is explanatory text added to the header action
        this.title = '';
        // If our host has an ID attribute, we use this instead of our index.
        this._id = (wizardHeaderActionIndex++).toString();
        this.disabled = false;
        this.headerActionClicked = new EventEmitter(false);
    }
    Object.defineProperty(ClrWizardHeaderAction.prototype, "id", {
        get: function () {
            return "clr-wizard-header-action-" + this._id;
        },
        enumerable: true,
        configurable: true
    });
    ClrWizardHeaderAction.prototype.click = function () {
        if (this.disabled) {
            return;
        }
        // passing the header action id allows users to have one method that
        // routes to many different actions based on the type of header action
        // clicked. this is further aided by users being able to specify ids
        // for their header actions.
        this.headerActionClicked.emit(this._id);
    };
    __decorate([
        Input('title')
    ], ClrWizardHeaderAction.prototype, "title", void 0);
    __decorate([
        Input('id')
    ], ClrWizardHeaderAction.prototype, "_id", void 0);
    __decorate([
        Input('clrWizardHeaderActionDisabled')
    ], ClrWizardHeaderAction.prototype, "disabled", void 0);
    __decorate([
        Output('actionClicked')
    ], ClrWizardHeaderAction.prototype, "headerActionClicked", void 0);
ClrWizardHeaderAction.ɵfac = function ClrWizardHeaderAction_Factory(t) { return new (t || ClrWizardHeaderAction)(); };
ClrWizardHeaderAction.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrWizardHeaderAction, selectors: [["clr-wizard-header-action"]], hostAttrs: [1, "clr-wizard-header-action-wrapper"], inputs: { title: "title", _id: ["id", "_id"], disabled: ["clrWizardHeaderActionDisabled", "disabled"] }, outputs: { headerActionClicked: "actionClicked" }, ngContentSelectors: _c0, decls: 2, vars: 4, consts: [["type", "button", 1, "btn", "clr-wizard-header-action", "btn-link", 3, "id", "title", "click"]], template: function ClrWizardHeaderAction_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "button", 0);
        ɵngcc0.ɵɵlistener("click", function ClrWizardHeaderAction_Template_button_click_0_listener() { return ctx.click(); });
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("disabled", ctx.disabled);
        ɵngcc0.ɵɵproperty("id", ctx.id)("title", ctx.title);
    } }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrWizardHeaderAction, [{
        type: Component,
        args: [{
                selector: 'clr-wizard-header-action',
                template: "\n        <button \n            type=\"button\"\n            class=\"btn clr-wizard-header-action btn-link\"\n            [id]=\"id\"\n            [class.disabled]=\"disabled\"\n            (click)=\"click()\"\n            [title]=\"title\">\n            <ng-content></ng-content>\n        </button>\n    ",
                host: { class: 'clr-wizard-header-action-wrapper' }
            }]
    }], function () { return []; }, { title: [{
            type: Input,
            args: ['title']
        }], _id: [{
            type: Input,
            args: ['id']
        }], disabled: [{
            type: Input,
            args: ['clrWizardHeaderActionDisabled']
        }], headerActionClicked: [{
            type: Output,
            args: ['actionClicked']
        }] }); })();
    return ClrWizardHeaderAction;
}());
export { ClrWizardHeaderAction };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2l6YXJkLWhlYWRlci1hY3Rpb24uanMiLCJzb3VyY2VzIjpbIm5nOi9AY2xyL2FuZ3VsYXIvd2l6YXJkL3dpemFyZC1oZWFkZXItYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQUV2RSxJQUFJLHVCQUF1QixHQUFHLENBQUMsQ0FBQztBQWlCaEM7QUFDb0IsSUFEcEI7QUFBbUMsUUFDakMsdURBQXVEO0FBQ3pELFFBQWtCLFVBQUssR0FBVyxFQUFFLENBQUM7QUFDckMsUUFDRSxxRUFBcUU7QUFDdkUsUUFBZSxRQUFHLEdBQVcsQ0FBQyx1QkFBdUIsRUFBRSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDcEUsUUFLaUQsYUFBUSxHQUFZLEtBQUssQ0FBQztBQUMzRSxRQUMyQix3QkFBbUIsR0FBeUIsSUFBSSxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDL0YsSUFZQSxDQUFDO0FBQ0QsSUFwQkUsc0JBQVcscUNBQUU7QUFBSSxhQUFqQjtBQUFjLFlBQ1osT0FBTyw4QkFBNEIsSUFBSSxDQUFDLEdBQUssQ0FBQztBQUNsRCxRQUFFLENBQUM7QUFFSDtBQUEwQjtBQUEyQixPQUZsRDtBQUNILElBS0UscUNBQUssR0FBTDtBQUFjLFFBQ1osSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO0FBQ3ZCLFlBQU0sT0FBTztBQUNiLFNBQUs7QUFDTCxRQUNJLG9FQUFvRTtBQUN4RSxRQUFJLHNFQUFzRTtBQUMxRSxRQUFJLG9FQUFvRTtBQUN4RSxRQUFJLDRCQUE0QjtBQUNoQyxRQUFJLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQzVDLElBQUUsQ0FBQztBQUNGLElBeEJpQjtBQUFhLFFBQTVCLEtBQUssQ0FBQyxPQUFPLENBQUM7QUFBQyx3REFBbUI7QUFFckMsSUFDZTtBQUFhLFFBQXpCLEtBQUssQ0FBQyxJQUFJLENBQUM7QUFBQyxzREFBcUQ7QUFFcEUsSUFJMEM7QUFBYSxRQUFwRCxLQUFLLENBQUMsK0JBQStCLENBQUM7QUFBQywyREFBaUM7QUFFM0UsSUFBMkI7QUFBYSxRQUFyQyxNQUFNLENBQUMsZUFBZSxDQUFDO0FBQUMsc0VBQW9FO0lBYmxGLHFCQUFxQix3QkFmakMsU0FBUyxDQUFDLGNBQ1QsUUFBUSxFQUFFLDBCQUEwQjtJQUNwQyxRQUFRLEVBQUUsbVRBVVAsY0FDSCxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsa0NBQWtDLEVBQUUsVUFDcEQsQ0FBQyxRQUNXLHFCQUFxQixDQTBCakM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUNEO0FBQUMsSUFERCw0QkFBQztBQUNBLENBREEsQUExQkQsSUEwQkM7QUFDRCxTQTNCYSxxQkFBcUI7QUFDakMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMTggVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmxldCB3aXphcmRIZWFkZXJBY3Rpb25JbmRleCA9IDA7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Nsci13aXphcmQtaGVhZGVyLWFjdGlvbicsXG4gIHRlbXBsYXRlOiBgXG4gICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgIGNsYXNzPVwiYnRuIGNsci13aXphcmQtaGVhZGVyLWFjdGlvbiBidG4tbGlua1wiXG4gICAgICAgICAgICBbaWRdPVwiaWRcIlxuICAgICAgICAgICAgW2NsYXNzLmRpc2FibGVkXT1cImRpc2FibGVkXCJcbiAgICAgICAgICAgIChjbGljayk9XCJjbGljaygpXCJcbiAgICAgICAgICAgIFt0aXRsZV09XCJ0aXRsZVwiPlxuICAgICAgICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgICAgICA8L2J1dHRvbj5cbiAgICBgLFxuICBob3N0OiB7IGNsYXNzOiAnY2xyLXdpemFyZC1oZWFkZXItYWN0aW9uLXdyYXBwZXInIH0sXG59KVxuZXhwb3J0IGNsYXNzIENscldpemFyZEhlYWRlckFjdGlvbiB7XG4gIC8vIHRpdGxlIGlzIGV4cGxhbmF0b3J5IHRleHQgYWRkZWQgdG8gdGhlIGhlYWRlciBhY3Rpb25cbiAgQElucHV0KCd0aXRsZScpIHRpdGxlOiBzdHJpbmcgPSAnJztcblxuICAvLyBJZiBvdXIgaG9zdCBoYXMgYW4gSUQgYXR0cmlidXRlLCB3ZSB1c2UgdGhpcyBpbnN0ZWFkIG9mIG91ciBpbmRleC5cbiAgQElucHV0KCdpZCcpIF9pZDogc3RyaW5nID0gKHdpemFyZEhlYWRlckFjdGlvbkluZGV4KyspLnRvU3RyaW5nKCk7XG5cbiAgcHVibGljIGdldCBpZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiBgY2xyLXdpemFyZC1oZWFkZXItYWN0aW9uLSR7dGhpcy5faWR9YDtcbiAgfVxuXG4gIEBJbnB1dCgnY2xyV2l6YXJkSGVhZGVyQWN0aW9uRGlzYWJsZWQnKSBwdWJsaWMgZGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBAT3V0cHV0KCdhY3Rpb25DbGlja2VkJykgaGVhZGVyQWN0aW9uQ2xpY2tlZDogRXZlbnRFbWl0dGVyPHN0cmluZz4gPSBuZXcgRXZlbnRFbWl0dGVyKGZhbHNlKTtcblxuICBjbGljaygpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIHBhc3NpbmcgdGhlIGhlYWRlciBhY3Rpb24gaWQgYWxsb3dzIHVzZXJzIHRvIGhhdmUgb25lIG1ldGhvZCB0aGF0XG4gICAgLy8gcm91dGVzIHRvIG1hbnkgZGlmZmVyZW50IGFjdGlvbnMgYmFzZWQgb24gdGhlIHR5cGUgb2YgaGVhZGVyIGFjdGlvblxuICAgIC8vIGNsaWNrZWQuIHRoaXMgaXMgZnVydGhlciBhaWRlZCBieSB1c2VycyBiZWluZyBhYmxlIHRvIHNwZWNpZnkgaWRzXG4gICAgLy8gZm9yIHRoZWlyIGhlYWRlciBhY3Rpb25zLlxuICAgIHRoaXMuaGVhZGVyQWN0aW9uQ2xpY2tlZC5lbWl0KHRoaXMuX2lkKTtcbiAgfVxufVxuIl19