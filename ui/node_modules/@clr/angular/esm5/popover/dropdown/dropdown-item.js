import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';
import { ClrDropdown } from './dropdown';
import { BASIC_FOCUSABLE_ITEM_PROVIDER } from '../../utils/focus/focusable-item/basic-focusable-item.service';
import { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';
import { RootDropdownService } from './providers/dropdown.service';
import * as ɵngcc0 from '@angular/core';
var ClrDropdownItem = /** @class */ (function () {
    function ClrDropdownItem(dropdown, el, _dropdownService, renderer, focusableItem) {
        this.dropdown = dropdown;
        this.el = el;
        this._dropdownService = _dropdownService;
        this.renderer = renderer;
        this.focusableItem = focusableItem;
        this.setByDeprecatedDisabled = false;
    }
    Object.defineProperty(ClrDropdownItem.prototype, "disabled", {
        get: function () {
            return this.focusableItem.disabled;
        },
        set: function (value) {
            // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.
            this.focusableItem.disabled = !!value || value === '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrDropdownItem.prototype, "disabledDeprecated", {
        get: function () {
            return this.focusableItem.disabled;
        },
        /*
         * @deprecated since 3.0, remove in 4.0. the presence of this attribute makes it not-focusable in IE11. Use [clrDisabled] input instead.
         */
        set: function (value) {
            // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.
            this.focusableItem.disabled = !!value || value === '';
            this.setByDeprecatedDisabled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrDropdownItem.prototype, "dropdownItemId", {
        get: function () {
            return this.focusableItem.id;
        },
        /**
         * Let you overwrite the focusable auto increment id.
         */
        set: function (value) {
            this.focusableItem.id = value;
        },
        enumerable: true,
        configurable: true
    });
    ClrDropdownItem.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.unlisten = this.renderer.listen(this.el.nativeElement, 'click', function () { return _this.onDropdownItemClick(); });
    };
    ClrDropdownItem.prototype.onDropdownItemClick = function () {
        if (this.dropdown.isMenuClosable && !this.el.nativeElement.classList.contains('disabled')) {
            this._dropdownService.closeMenus();
        }
    };
    ClrDropdownItem.prototype.ngOnDestroy = function () {
        if (this.unlisten) {
            this.unlisten();
        }
    };
    ClrDropdownItem.ctorParameters = function () { return [
        { type: ClrDropdown },
        { type: ElementRef },
        { type: RootDropdownService },
        { type: Renderer2 },
        { type: FocusableItem }
    ]; };
    __decorate([
        Input('clrDisabled')
    ], ClrDropdownItem.prototype, "disabled", null);
    __decorate([
        Input('disabled')
    ], ClrDropdownItem.prototype, "disabledDeprecated", null);
    __decorate([
        Input('id')
    ], ClrDropdownItem.prototype, "dropdownItemId", null);
ClrDropdownItem.ɵfac = function ClrDropdownItem_Factory(t) { return new (t || ClrDropdownItem)(ɵngcc0.ɵɵdirectiveInject(ClrDropdown), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(RootDropdownService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(FocusableItem)); };
ClrDropdownItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClrDropdownItem, selectors: [["", "clrDropdownItem", ""]], hostVars: 8, hostBindings: function ClrDropdownItem_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", "menuitem")("aria-disabled", ctx.disabled)("disabled", ctx.disabled && ctx.setByDeprecatedDisabled ? "" : null)("id", ctx.dropdownItemId);
        ɵngcc0.ɵɵclassProp("disabled", ctx.disabled)("dropdown-item", true);
    } }, inputs: { disabled: ["clrDisabled", "disabled"], disabledDeprecated: ["disabled", "disabledDeprecated"], dropdownItemId: ["id", "dropdownItemId"] }, features: [ɵngcc0.ɵɵProvidersFeature([BASIC_FOCUSABLE_ITEM_PROVIDER])] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrDropdownItem, [{
        type: Directive,
        args: [{
                selector: '[clrDropdownItem]',
                host: {
                    '[class.disabled]': 'disabled',
                    '[class.dropdown-item]': 'true',
                    '[attr.role]': '"menuitem"',
                    '[attr.aria-disabled]': 'disabled',
                    '[attr.disabled]': "(disabled && setByDeprecatedDisabled)? '' : null",
                    '[attr.id]': 'dropdownItemId'
                },
                providers: [BASIC_FOCUSABLE_ITEM_PROVIDER]
            }]
    }], function () { return [{ type: ClrDropdown }, { type: ɵngcc0.ElementRef }, { type: RootDropdownService }, { type: ɵngcc0.Renderer2 }, { type: FocusableItem }]; }, { disabled: [{
            type: Input,
            args: ['clrDisabled']
        }], disabledDeprecated: [{
            type: Input,
            args: ['disabled']
        }], dropdownItemId: [{
            type: Input,
            args: ['id']
        }] }); })();
    return ClrDropdownItem;
}());
export { ClrDropdownItem };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24taXRlbS5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci9wb3BvdmVyL2Ryb3Bkb3duL2Ryb3Bkb3duLWl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILE9BQU8sRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDekMsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sK0RBQStELENBQUM7QUFDOUcsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQWNuRTtBQUFtRCxJQUNqRCx5QkFDVSxRQUFxQixFQUNyQixFQUEyQixFQUMzQixnQkFBcUMsRUFDckMsUUFBbUIsRUFDbkIsYUFBNEI7QUFDckMsUUFMUyxhQUFRLEdBQVIsUUFBUSxDQUFhO0FBQUMsUUFDdEIsT0FBRSxHQUFGLEVBQUUsQ0FBeUI7QUFBQyxRQUM1QixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQXFCO0FBQUMsUUFDdEMsYUFBUSxHQUFSLFFBQVEsQ0FBVztBQUFDLFFBQ3BCLGtCQUFhLEdBQWIsYUFBYSxDQUFlO0FBQ3hDLFFBR1MsNEJBQXVCLEdBQVksS0FBSyxDQUFDO0FBQ2xELElBSkssQ0FBQztBQUNOLElBS0Usc0JBQUkscUNBQVE7QUFBSSxhQUtoQjtBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQztBQUN2QyxRQUFFLENBQUM7QUFFSCxhQVRFLFVBQWEsS0FBdUI7QUFDdEMsWUFBSSxrSEFBa0g7QUFDdEgsWUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsS0FBSyxJQUFJLEtB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IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5pbXBvcnQgeyBBZnRlclZpZXdJbml0LCBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ2xyRHJvcGRvd24gfSBmcm9tICcuL2Ryb3Bkb3duJztcbmltcG9ydCB7IEJBU0lDX0ZPQ1VTQUJMRV9JVEVNX1BST1ZJREVSIH0gZnJvbSAnLi4vLi4vdXRpbHMvZm9jdXMvZm9jdXNhYmxlLWl0ZW0vYmFzaWMtZm9jdXNhYmxlLWl0ZW0uc2VydmljZSc7XG5pbXBvcnQgeyBGb2N1c2FibGVJdGVtIH0gZnJvbSAnLi4vLi4vdXRpbHMvZm9jdXMvZm9jdXNhYmxlLWl0ZW0vZm9jdXNhYmxlLWl0ZW0nO1xuaW1wb3J0IHsgUm9vdERyb3Bkb3duU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL2Ryb3Bkb3duLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbY2xyRHJvcGRvd25JdGVtXScsXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzLmRpc2FibGVkXSc6ICdkaXNhYmxlZCcsXG4gICAgJ1tjbGFzcy5kcm9wZG93bi1pdGVtXSc6ICd0cnVlJyxcbiAgICAnW2F0dHIucm9sZV0nOiAnXCJtZW51aXRlbVwiJyxcbiAgICAnW2F0dHIuYXJpYS1kaXNhYmxlZF0nOiAnZGlzYWJsZWQnLFxuICAgICdbYXR0ci5kaXNhYmxlZF0nOiBcIihkaXNhYmxlZCAmJiBzZXRCeURlcHJlY2F0ZWREaXNhYmxlZCk/ICcnIDogbnVsbFwiLFxuICAgICdbYXR0ci5pZF0nOiAnZHJvcGRvd25JdGVtSWQnLFxuICB9LFxuICBwcm92aWRlcnM6IFtCQVNJQ19GT0NVU0FCTEVfSVRFTV9QUk9WSURFUl0sXG59KVxuZXhwb3J0IGNsYXNzIENsckRyb3Bkb3duSXRlbSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGRyb3Bkb3duOiBDbHJEcm9wZG93bixcbiAgICBwcml2YXRlIGVsOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICBwcml2YXRlIF9kcm9wZG93blNlcnZpY2U6IFJvb3REcm9wZG93blNlcnZpY2UsXG4gICAgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLFxuICAgIHByaXZhdGUgZm9jdXNhYmxlSXRlbTogRm9jdXNhYmxlSXRlbVxuICApIHt9XG5cbiAgcHJpdmF0ZSB1bmxpc3RlbjtcbiAgcHVibGljIHNldEJ5RGVwcmVjYXRlZERpc2FibGVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgQElucHV0KCdjbHJEaXNhYmxlZCcpXG4gIHNldCBkaXNhYmxlZCh2YWx1ZTogYm9vbGVhbiB8IHN0cmluZykge1xuICAgIC8vIEVtcHR5IHN0cmluZyBhdHRyaWJ1dGUgZXZhbHVhdGVzIHRvIGZhbHNlIGJ1dCBzaG91bGQgZGlzYWJsZSB0aGUgaXRlbSwgc28gd2UgbmVlZCB0byBhZGQgYSBzcGVjaWFsIGNhc2UgZm9yIGl0LlxuICAgIHRoaXMuZm9jdXNhYmxlSXRlbS5kaXNhYmxlZCA9ICEhdmFsdWUgfHwgdmFsdWUgPT09ICcnO1xuICB9XG5cbiAgZ2V0IGRpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLmZvY3VzYWJsZUl0ZW0uZGlzYWJsZWQ7XG4gIH1cblxuICAvKlxuICAgKiBAZGVwcmVjYXRlZCBzaW5jZSAzLjAsIHJlbW92ZSBpbiA0LjAuIHRoZSBwcmVzZW5jZSBvZiB0aGlzIGF0dHJpYnV0ZSBtYWtlcyBpdCBub3QtZm9jdXNhYmxlIGluIElFMTEuIFVzZSBbY2xyRGlzYWJsZWRdIGlucHV0IGluc3RlYWQuXG4gICAqL1xuICBASW5wdXQoJ2Rpc2FibGVkJylcbiAgc2V0IGRpc2FibGVkRGVwcmVjYXRlZCh2YWx1ZTogYm9vbGVhbiB8IHN0cmluZykge1xuICAgIC8vIEVtcHR5IHN0cmluZyBhdHRyaWJ1dGUgZXZhbHVhdGVzIHRvIGZhbHNlIGJ1dCBzaG91bGQgZGlzYWJsZSB0aGUgaXRlbSwgc28gd2UgbmVlZCB0byBhZGQgYSBzcGVjaWFsIGNhc2UgZm9yIGl0LlxuICAgIHRoaXMuZm9jdXNhYmxlSXRlbS5kaXNhYmxlZCA9ICEhdmFsdWUgfHwgdmFsdWUgPT09ICcnO1xuICAgIHRoaXMuc2V0QnlEZXByZWNhdGVkRGlzYWJsZWQgPSB0cnVlO1xuICB9XG5cbiAgZ2V0IGRpc2FibGVkRGVwcmVjYXRlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5mb2N1c2FibGVJdGVtLmRpc2FibGVkO1xuICB9XG5cbiAgLyoqXG4gICAqIExldCB5b3Ugb3ZlcndyaXRlIHRoZSBmb2N1c2FibGUgYXV0byBpbmNyZW1lbnQgaWQuXG4gICAqL1xuICBASW5wdXQoJ2lkJylcbiAgc2V0IGRyb3Bkb3duSXRlbUlkKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLmZvY3VzYWJsZUl0ZW0uaWQgPSB2YWx1ZTtcbiAgfVxuICBnZXQgZHJvcGRvd25JdGVtSWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZm9jdXNhYmxlSXRlbS5pZDtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0aGlzLnVubGlzdGVuID0gdGhpcy5yZW5kZXJlci5saXN0ZW4odGhpcy5lbC5uYXRpdmVFbGVtZW50LCAnY2xpY2snLCAoKSA9PiB0aGlzLm9uRHJvcGRvd25JdGVtQ2xpY2soKSk7XG4gIH1cblxuICBvbkRyb3Bkb3duSXRlbUNsaWNrKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmRyb3Bkb3duLmlzTWVudUNsb3NhYmxlICYmICF0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdkaXNhYmxlZCcpKSB7XG4gICAgICB0aGlzLl9kcm9wZG93blNlcnZpY2UuY2xvc2VNZW51cygpO1xuICAgIH1cbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIGlmICh0aGlzLnVubGlzdGVuKSB7XG4gICAgICB0aGlzLnVubGlzdGVuKCk7XG4gICAgfVxuICB9XG59XG4iXX0=