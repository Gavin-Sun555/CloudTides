/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate, __param } from "tslib";
import { Component, ChangeDetectionStrategy, Input, EventEmitter, Output, Inject, ContentChildren, } from '@angular/core';
import { tap } from 'rxjs/operators';
import { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../utils/id-generator/id-generator.service';
import { ClrCommonStringsService } from '../utils/i18n/common-strings.service';
import { AccordionService } from './providers/accordion.service';
import { AccordionStatus } from './enums/accordion-status.enum';
import { panelAnimation } from './utils/animation';
import { IfExpandService } from '../utils/conditional/if-expanded.service';
import { ClrAccordionDescription } from './accordion-description';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../icon/icon';

function ClrAccordionPanel_ng_container_0_div_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r7.commonStrings.keys.danger);
} }
function ClrAccordionPanel_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵtemplate(1, ClrAccordionPanel_ng_container_0_div_1_ng_container_1_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var panel_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", panel_r1.status === ctx_r2.AccordionStatus.Error);
} }
function ClrAccordionPanel_ng_container_0_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r4.commonStrings.keys.danger);
} }
function ClrAccordionPanel_ng_container_0_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r5.commonStrings.keys.success);
} }
function ClrAccordionPanel_ng_container_0_div_18_Template(rf, ctx) { if (rf & 1) {
    var _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵlistener("@toggle.done", function ClrAccordionPanel_ng_container_0_div_18_Template_div_animation_toggle_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); var panel_r1 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.collapsePanelOnAnimationDone(panel_r1); });
    ɵngcc0.ɵɵelementStart(1, "div", 16);
    ɵngcc0.ɵɵprojection(2, 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("@toggle", undefined);
} }
function ClrAccordionPanel_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ClrAccordionPanel_ng_container_0_div_1_Template, 2, 1, "div", 1);
    ɵngcc0.ɵɵelementStart(2, "div", 2);
    ɵngcc0.ɵɵelementStart(3, "div", 3);
    ɵngcc0.ɵɵelementStart(4, "button", 4, 5);
    ɵngcc0.ɵɵlistener("click", function ClrAccordionPanel_ng_container_0_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.togglePanel(); });
    ɵngcc0.ɵɵpipe(6, "async");
    ɵngcc0.ɵɵelementStart(7, "span", 6);
    ɵngcc0.ɵɵtemplate(8, ClrAccordionPanel_ng_container_0_ng_container_8_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(9, ClrAccordionPanel_ng_container_0_ng_container_9_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "span", 7);
    ɵngcc0.ɵɵelement(11, "clr-icon", 8);
    ɵngcc0.ɵɵelement(12, "span", 9);
    ɵngcc0.ɵɵelement(13, "clr-icon", 10);
    ɵngcc0.ɵɵelement(14, "clr-icon", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵprojection(15);
    ɵngcc0.ɵɵprojection(16, 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(17, "div", 12);
    ɵngcc0.ɵɵtemplate(18, ClrAccordionPanel_ng_container_0_div_18_Template, 3, 1, "div", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var panel_r1 = ctx.$implicit;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    var tmp_2_0 = null;
    var currVal_2 = ((tmp_2_0 = ɵngcc0.ɵɵpipeBind1(6, 16, ctx_r0.accordionDescription.changes)) == null ? null : tmp_2_0.length) || ctx_r0.accordionDescription.length;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", panel_r1.status !== ctx_r0.AccordionStatus.Inactive);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.getPanelStateClasses(panel_r1));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("clr-accordion-header-has-description", currVal_2);
    ɵngcc0.ɵɵproperty("id", ctx_r0.getAccordionHeaderId(panel_r1.templateId))("disabled", ctx_r0.isAccordion && panel_r1.disabled);
    ɵngcc0.ɵɵattribute("aria-disabled", !ctx_r0.isAccordion && panel_r1.disabled)("aria-controls", ctx_r0.getAccordionContentId(panel_r1.templateId))("aria-expanded", panel_r1.open);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", panel_r1.status === ctx_r0.AccordionStatus.Error);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", panel_r1.status === ctx_r0.AccordionStatus.Complete);
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵproperty("@skipInitialRender", undefined)("id", ctx_r0.getAccordionContentId(panel_r1.templateId));
    ɵngcc0.ɵɵattribute("aria-hidden", !panel_r1.open)("aria-labelledby", ctx_r0.getAccordionHeaderId(panel_r1.templateId));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", panel_r1.open);
} }
var _c0 = [[["clr-accordion-title"], ["clr-step-title"]], [["clr-accordion-description"], ["clr-step-description"]], "*"];
var _c1 = ["clr-accordion-title, clr-step-title", "clr-accordion-description, clr-step-description", "*"];
var ClrAccordionPanel = /** @class */ (function () {
    function ClrAccordionPanel(commonStrings, accordionService, ifExpandService, id) {
        this.commonStrings = commonStrings;
        this.accordionService = accordionService;
        this.ifExpandService = ifExpandService;
        this.id = id;
        this.disabled = false;
        this.panelOpen = false;
        this.panelOpenChange = new EventEmitter();
        this.AccordionStatus = AccordionStatus;
        this.isAccordion = true;
    }
    ClrAccordionPanel.prototype.ngOnInit = function () {
        var _this = this;
        this.panel = this.accordionService.getPanelChanges(this.id).pipe(tap(function (panel) { return _this.emitPanelChange(panel); }));
        this.accordionService.addPanel(this.id, this.panelOpen);
        this.accordionService.togglePanel(this.id, this.panelOpen);
        this.accordionService.disablePanel(this.id, this.disabled);
    };
    ClrAccordionPanel.prototype.ngOnChanges = function (changes) {
        if (this.panel && changes.panelOpen && changes.panelOpen.currentValue !== changes.panelOpen.previousValue) {
            this.accordionService.togglePanel(this.id, changes.panelOpen.currentValue);
        }
        if (this.panel && changes.disabled && changes.disabled.currentValue !== changes.disabled.previousValue) {
            this.accordionService.disablePanel(this.id, changes.disabled.currentValue);
        }
    };
    ClrAccordionPanel.prototype.togglePanel = function () {
        this.accordionService.togglePanel(this.id);
    };
    ClrAccordionPanel.prototype.collapsePanelOnAnimationDone = function (panel) {
        if (!panel.open) {
            this.ifExpandService.expanded = false;
        }
    };
    ClrAccordionPanel.prototype.getPanelStateClasses = function (panel) {
        return "clr-accordion-panel-" + panel.status + " " + (panel.open ? 'clr-accordion-panel-open' : '');
    };
    ClrAccordionPanel.prototype.getAccordionContentId = function (id) {
        return "clr-accordion-content-" + id + "'";
    };
    ClrAccordionPanel.prototype.getAccordionHeaderId = function (id) {
        return "clr-accordion-header-" + id;
    };
    ClrAccordionPanel.prototype.emitPanelChange = function (panel) {
        this.panelOpenChange.emit(panel.open);
        if (panel.open) {
            this.ifExpandService.expanded = true;
        }
    };
    ClrAccordionPanel.ctorParameters = function () { return [
        { type: ClrCommonStringsService },
        { type: AccordionService },
        { type: IfExpandService },
        { type: String, decorators: [{ type: Inject, args: [UNIQUE_ID,] }] }
    ]; };
    __decorate([
        Input('clrAccordionPanelDisabled')
    ], ClrAccordionPanel.prototype, "disabled", void 0);
    __decorate([
        Input('clrAccordionPanelOpen')
    ], ClrAccordionPanel.prototype, "panelOpen", void 0);
    __decorate([
        Output('clrAccordionPanelOpenChange')
    ], ClrAccordionPanel.prototype, "panelOpenChange", void 0);
    __decorate([
        ContentChildren(ClrAccordionDescription)
    ], ClrAccordionPanel.prototype, "accordionDescription", void 0);
    ClrAccordionPanel = __decorate([ __param(3, Inject(UNIQUE_ID))
    ], ClrAccordionPanel);
ClrAccordionPanel.ɵfac = function ClrAccordionPanel_Factory(t) { return new (t || ClrAccordionPanel)(ɵngcc0.ɵɵdirectiveInject(ClrCommonStringsService), ɵngcc0.ɵɵdirectiveInject(AccordionService), ɵngcc0.ɵɵdirectiveInject(IfExpandService), ɵngcc0.ɵɵdirectiveInject(UNIQUE_ID)); };
ClrAccordionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrAccordionPanel, selectors: [["clr-accordion-panel"]], contentQueries: function ClrAccordionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ClrAccordionDescription, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.accordionDescription = _t);
    } }, hostVars: 2, hostBindings: function ClrAccordionPanel_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("clr-accordion-panel", true);
    } }, inputs: { disabled: ["clrAccordionPanelDisabled", "disabled"], panelOpen: ["clrAccordionPanelOpen", "panelOpen"] }, outputs: { panelOpenChange: "clrAccordionPanelOpenChange" }, features: [ɵngcc0.ɵɵProvidersFeature([IfExpandService, UNIQUE_ID_PROVIDER]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 2, vars: 3, consts: [[4, "ngIf"], ["aria-live", "assertive", "class", "clr-sr-only", 4, "ngIf"], ["role", "group", 3, "ngClass"], [1, "clr-accordion-header"], ["type", "button", 1, "clr-accordion-header-button", 3, "id", "disabled", "click"], ["headerButton", ""], [1, "clr-sr-only"], [1, "clr-accordion-status"], ["shape", "angle", "dir", "right", 1, "clr-accordion-angle"], [1, "clr-accordion-number"], ["shape", "exclamation-circle", 1, "clr-accordion-error-icon"], ["shape", "check-circle", 1, "clr-accordion-complete-icon"], ["role", "region", 3, "id"], ["class", "clr-accordion-content", 4, "ngIf"], ["aria-live", "assertive", 1, "clr-sr-only"], [1, "clr-accordion-content"], [1, "clr-accordion-inner-content"]], template: function ClrAccordionPanel_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵtemplate(0, ClrAccordionPanel_ng_container_0_Template, 19, 18, "ng-container", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.panel));
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc2.ClrIconCustomTag], pipes: [ɵngcc1.AsyncPipe], encapsulation: 2, data: { animation: panelAnimation }, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrAccordionPanel, [{
        type: Component,
        args: [{
                selector: 'clr-accordion-panel',
                template: "<ng-container *ngIf=\"panel | async; let panel\">\n  <div *ngIf=\"panel.status !== AccordionStatus.Inactive\" aria-live=\"assertive\" class=\"clr-sr-only\">\n    <ng-container *ngIf=\"panel.status === AccordionStatus.Error\">{{commonStrings.keys.danger}}</ng-container>\n  </div>\n\n  <div role=\"group\" [ngClass]=\"getPanelStateClasses(panel)\">\n    <div class=\"clr-accordion-header\">\n      <button\n        type=\"button\"\n        class=\"clr-accordion-header-button\"\n        (click)=\"togglePanel()\"\n        [id]=\"getAccordionHeaderId(panel.templateId)\"\n        [disabled]=\"isAccordion && panel.disabled\"\n        [attr.aria-disabled]=\"!isAccordion && panel.disabled\"\n        [attr.aria-controls]=\"getAccordionContentId(panel.templateId)\"\n        [attr.aria-expanded]=\"panel.open\"\n        [class.clr-accordion-header-has-description]=\"(accordionDescription.changes | async)?.length || accordionDescription.length\"\n        #headerButton\n      >\n        <span class=\"clr-sr-only\">\n          <ng-container *ngIf=\"panel.status === AccordionStatus.Error\">{{commonStrings.keys.danger}}</ng-container>\n          <ng-container *ngIf=\"panel.status === AccordionStatus.Complete\">{{commonStrings.keys.success}}</ng-container>\n        </span>\n        <span class=\"clr-accordion-status\">\n          <clr-icon shape=\"angle\" dir=\"right\" class=\"clr-accordion-angle\"></clr-icon>\n          <span class=\"clr-accordion-number\"></span>\n          <clr-icon shape=\"exclamation-circle\" class=\"clr-accordion-error-icon\"></clr-icon>\n          <clr-icon shape=\"check-circle\" class=\"clr-accordion-complete-icon\"></clr-icon>\n        </span>\n        <ng-content select=\"clr-accordion-title, clr-step-title\"></ng-content>\n        <ng-content select=\"clr-accordion-description, clr-step-description\"></ng-content>\n      </button>\n    </div>\n    <div\n      @skipInitialRender\n      role=\"region\"\n      [id]=\"getAccordionContentId(panel.templateId)\"\n      [attr.aria-hidden]=\"!panel.open\"\n      [attr.aria-labelledby]=\"getAccordionHeaderId(panel.templateId)\"\n    >\n      <div\n        *ngIf=\"panel.open\"\n        @toggle\n        (@toggle.done)=\"collapsePanelOnAnimationDone(panel)\"\n        class=\"clr-accordion-content\">\n        <div class=\"clr-accordion-inner-content\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n",
                host: { '[class.clr-accordion-panel]': 'true' },
                changeDetection: ChangeDetectionStrategy.OnPush,
                animations: panelAnimation,
                providers: [IfExpandService, UNIQUE_ID_PROVIDER]
            }]
    }], function () { return [{ type: ClrCommonStringsService }, { type: AccordionService }, { type: IfExpandService }, { type: String, decorators: [{
                type: Inject,
                args: [UNIQUE_ID]
            }] }]; }, { disabled: [{
            type: Input,
            args: ['clrAccordionPanelDisabled']
        }], panelOpen: [{
            type: Input,
            args: ['clrAccordionPanelOpen']
        }], panelOpenChange: [{
            type: Output,
            args: ['clrAccordionPanelOpenChange']
        }], accordionDescription: [{
            type: ContentChildren,
            args: [ClrAccordionDescription]
        }] }); })();
    return ClrAccordionPanel;
}());
export { ClrAccordionPanel };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,