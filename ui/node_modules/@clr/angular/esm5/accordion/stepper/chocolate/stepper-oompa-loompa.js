/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate, __extends, __param } from "tslib";
import { ChangeDetectorRef, Directive, Optional } from '@angular/core';
import { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';
import { StepperWillyWonka } from './stepper-willy-wonka';
import { IfExpandService } from '../../../utils/conditional/if-expanded.service';
import * as ɵngcc0 from '@angular/core';
var StepperOompaLoompa = /** @class */ (function (_super) {
    __extends(StepperOompaLoompa, _super);
    function StepperOompaLoompa(cdr, willyWonka, ifExpandService) {
        var _this = this;
        if (!willyWonka) {
            throw new Error('clr-stepper-panel should only be used inside of clrStepper');
        }
        _this = _super.call(this, cdr, willyWonka) || this;
        _this.expand = ifExpandService;
        return _this;
    }
    Object.defineProperty(StepperOompaLoompa.prototype, "flavor", {
        get: function () {
            return this.expand.expanded;
        },
        enumerable: true,
        configurable: true
    });
    StepperOompaLoompa.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: StepperWillyWonka, decorators: [{ type: Optional }] },
        { type: IfExpandService }
    ]; };
    StepperOompaLoompa = __decorate([ __param(1, Optional())
    ], StepperOompaLoompa);
StepperOompaLoompa.ɵfac = function StepperOompaLoompa_Factory(t) { return new (t || StepperOompaLoompa)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(StepperWillyWonka, 8), ɵngcc0.ɵɵdirectiveInject(IfExpandService)); };
StepperOompaLoompa.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: StepperOompaLoompa, selectors: [["clr-stepper-panel"], ["", "clrStepButton", ""]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StepperOompaLoompa, [{
        type: Directive,
        args: [{ selector: 'clr-stepper-panel, [clrStepButton]' }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: StepperWillyWonka, decorators: [{
                type: Optional
            }] }, { type: IfExpandService }]; }, null); })();
    return StepperOompaLoompa;
}(OompaLoompa));
export { StepperOompaLoompa };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1vb21wYS1sb29tcGEuanMiLCJzb3VyY2VzIjpbIm5nOi9AY2xyL2FuZ3VsYXIvYWNjb3JkaW9uL3N0ZXBwZXIvY2hvY29sYXRlL3N0ZXBwZXItb29tcGEtbG9vbXBhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdkUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQzs7QUFHakY7QUFDTSxJQURrQyxzQ0FBVztBQUFDLElBR2xELDRCQUFZLEdBQXNCLEVBQWMsVUFBNkIsRUFBRSxlQUFnQztBQUNqSCxRQURFLGlCQU1DO0FBQ0gsUUFOSSxJQUFJLENBQUMsVUFBVSxFQUFFO0FBQ3JCLFlBQU0sTUFBTSxJQUFJLEtBQUssQ0FBQyw0REFBNEQsQ0FBQyxDQUFDO0FBQ3BGLFNBQUs7QUFDTCxRQUFJLFFBQUEsa0JBQU0sR0FBRyxFQUFFLFVBQVUsQ0FBQyxTQUFDO0FBQzNCLFFBQUksS0FBSSxDQUFDLE1BQU0sR0FBRyxlQUFlLENBQUM7QUFDbEM7QUFHQSxJQUhFLENBQUM7QUFDSCxJQUNFLHNCQUFJLHNDQUFNO0FBQUksYUFBZDtBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQztBQUNoQyxRQUFFLENBQUM7QUFDRjtBQUN3QjtBQUEyQixPQUZqRDtBQUNIO0FBQzZELGdCQVoxQyxpQkFBaUI7QUFBSSxnQkFBc0IsaUJBQWlCLHVCQUF4QyxRQUFRO0FBQU8sZ0JBQTRDLGVBQWU7QUFBRztBQUMzRyxJQUpJLGtCQUFrQix3QkFEOUIsU0FBUyxDQUFDLEVBQUUsckJBQ0wsQ0FHK0IsV0FBQSxRQUFRLEVBQUUsQ0FBQTtLQUo1QixFQUFFLFBBSTJCLE9BSHJDLGtCQUFrQixDQWM5QjtlQWYwRCxFQUFFLENBQUM7Ozs7Ozs7NkRBZ0I5RDtBQUFDLElBREQseUJBQUM7QUFDQSxDQURBLEFBZEQsQ0FBd0MsV0FBVyxHQWNsRDtBQUNELFNBZmEsa0JBQWtCO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBEaXJlY3RpdmUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE9vbXBhTG9vbXBhIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvY2hvY29sYXRlL29vbXBhLWxvb21wYSc7XG5pbXBvcnQgeyBTdGVwcGVyV2lsbHlXb25rYSB9IGZyb20gJy4vc3RlcHBlci13aWxseS13b25rYSc7XG5pbXBvcnQgeyBJZkV4cGFuZFNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi91dGlscy9jb25kaXRpb25hbC9pZi1leHBhbmRlZC5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnY2xyLXN0ZXBwZXItcGFuZWwsIFtjbHJTdGVwQnV0dG9uXScgfSlcbmV4cG9ydCBjbGFzcyBTdGVwcGVyT29tcGFMb29tcGEgZXh0ZW5kcyBPb21wYUxvb21wYSB7XG4gIHByaXZhdGUgZXhwYW5kOiBJZkV4cGFuZFNlcnZpY2U7XG5cbiAgY29uc3RydWN0b3IoY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgQE9wdGlvbmFsKCkgd2lsbHlXb25rYTogU3RlcHBlcldpbGx5V29ua2EsIGlmRXhwYW5kU2VydmljZTogSWZFeHBhbmRTZXJ2aWNlKSB7XG4gICAgaWYgKCF3aWxseVdvbmthKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2Nsci1zdGVwcGVyLXBhbmVsIHNob3VsZCBvbmx5IGJlIHVzZWQgaW5zaWRlIG9mIGNsclN0ZXBwZXInKTtcbiAgICB9XG4gICAgc3VwZXIoY2RyLCB3aWxseVdvbmthKTtcbiAgICB0aGlzLmV4cGFuZCA9IGlmRXhwYW5kU2VydmljZTtcbiAgfVxuXG4gIGdldCBmbGF2b3IoKSB7XG4gICAgcmV0dXJuIHRoaXMuZXhwYW5kLmV4cGFuZGVkO1xuICB9XG59XG4iXX0=