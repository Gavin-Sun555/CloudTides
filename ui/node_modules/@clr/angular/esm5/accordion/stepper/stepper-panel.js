/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate, __extends, __param } from "tslib";
import { Component, ChangeDetectionStrategy, Optional, Inject, ViewChild, PLATFORM_ID, } from '@angular/core';
import { FormGroupName, NgModelGroup } from '@angular/forms';
import { tap, filter } from 'rxjs/operators';
import { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../../utils/id-generator/id-generator.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { StepperService } from './providers/stepper.service';
import { stepAnimation } from '../utils/animation';
import { triggerAllFormControlValidation } from '../../utils/forms/validation';
import { IfExpandService } from '../../utils/conditional/if-expanded.service';
import { AccordionStatus } from '../enums/accordion-status.enum';
import { ClrAccordionPanel } from '../accordion-panel';
import { isPlatformBrowser } from '@angular/common';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/forms';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../../icon/icon';

var _c0 = ["headerButton"];
function ClrStepperPanel_ng_container_0_div_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r7.commonStrings.keys.danger);
} }
function ClrStepperPanel_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵtemplate(1, ClrStepperPanel_ng_container_0_div_1_ng_container_1_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var panel_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", panel_r1.status === ctx_r2.AccordionStatus.Error);
} }
function ClrStepperPanel_ng_container_0_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r4.commonStrings.keys.danger);
} }
function ClrStepperPanel_ng_container_0_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r5.commonStrings.keys.success);
} }
function ClrStepperPanel_ng_container_0_div_18_Template(rf, ctx) { if (rf & 1) {
    var _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵlistener("@toggle.done", function ClrStepperPanel_ng_container_0_div_18_Template_div_animation_toggle_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); var panel_r1 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.collapsePanelOnAnimationDone(panel_r1); });
    ɵngcc0.ɵɵelementStart(1, "div", 16);
    ɵngcc0.ɵɵprojection(2, 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("@toggle", undefined);
} }
function ClrStepperPanel_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ClrStepperPanel_ng_container_0_div_1_Template, 2, 1, "div", 1);
    ɵngcc0.ɵɵelementStart(2, "div", 2);
    ɵngcc0.ɵɵelementStart(3, "div", 3);
    ɵngcc0.ɵɵelementStart(4, "button", 4, 5);
    ɵngcc0.ɵɵlistener("click", function ClrStepperPanel_ng_container_0_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.togglePanel(); });
    ɵngcc0.ɵɵpipe(6, "async");
    ɵngcc0.ɵɵelementStart(7, "span", 6);
    ɵngcc0.ɵɵtemplate(8, ClrStepperPanel_ng_container_0_ng_container_8_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(9, ClrStepperPanel_ng_container_0_ng_container_9_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "span", 7);
    ɵngcc0.ɵɵelement(11, "clr-icon", 8);
    ɵngcc0.ɵɵelement(12, "span", 9);
    ɵngcc0.ɵɵelement(13, "clr-icon", 10);
    ɵngcc0.ɵɵelement(14, "clr-icon", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵprojection(15);
    ɵngcc0.ɵɵprojection(16, 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(17, "div", 12);
    ɵngcc0.ɵɵtemplate(18, ClrStepperPanel_ng_container_0_div_18_Template, 3, 1, "div", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var panel_r1 = ctx.$implicit;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    var tmp_2_0 = null;
    var currVal_2 = ((tmp_2_0 = ɵngcc0.ɵɵpipeBind1(6, 16, ctx_r0.accordionDescription.changes)) == null ? null : tmp_2_0.length) || ctx_r0.accordionDescription.length;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", panel_r1.status !== ctx_r0.AccordionStatus.Inactive);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.getPanelStateClasses(panel_r1));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("clr-accordion-header-has-description", currVal_2);
    ɵngcc0.ɵɵproperty("id", ctx_r0.getAccordionHeaderId(panel_r1.templateId))("disabled", ctx_r0.isAccordion && panel_r1.disabled);
    ɵngcc0.ɵɵattribute("aria-disabled", !ctx_r0.isAccordion && panel_r1.disabled)("aria-controls", ctx_r0.getAccordionContentId(panel_r1.templateId))("aria-expanded", panel_r1.open);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", panel_r1.status === ctx_r0.AccordionStatus.Error);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", panel_r1.status === ctx_r0.AccordionStatus.Complete);
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵproperty("@skipInitialRender", undefined)("id", ctx_r0.getAccordionContentId(panel_r1.templateId));
    ɵngcc0.ɵɵattribute("aria-hidden", !panel_r1.open)("aria-labelledby", ctx_r0.getAccordionHeaderId(panel_r1.templateId));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", panel_r1.open);
} }
var _c1 = [[["clr-accordion-title"], ["clr-step-title"]], [["clr-accordion-description"], ["clr-step-description"]], "*"];
var _c2 = ["clr-accordion-title, clr-step-title", "clr-accordion-description, clr-step-description", "*"];
var ClrStepperPanel = /** @class */ (function (_super) {
    __extends(ClrStepperPanel, _super);
    function ClrStepperPanel(platformId, commonStrings, formGroupName, ngModelGroup, stepperService, ifExpandService, id) {
        var _this = _super.call(this, commonStrings, stepperService, ifExpandService, id) || this;
        _this.platformId = platformId;
        _this.commonStrings = commonStrings;
        _this.formGroupName = formGroupName;
        _this.ngModelGroup = ngModelGroup;
        _this.stepperService = stepperService;
        _this.isAccordion = false;
        _this.subscriptions = [];
        return _this;
    }
    Object.defineProperty(ClrStepperPanel.prototype, "formGroup", {
        get: function () {
            return this.formGroupName ? this.formGroupName.control : this.ngModelGroup.control;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrStepperPanel.prototype, "id", {
        get: function () {
            return this.formGroupName ? this.formGroupName.name.toString() : this.ngModelGroup.name;
        },
        set: function (_value) { } // overriding parent id required empty setter
        ,
        enumerable: true,
        configurable: true
    });
    ClrStepperPanel.prototype.ngOnInit = function () {
        var _this = this;
        _super.prototype.ngOnInit.call(this);
        this.panel = this.panel.pipe(tap(function (panel) { return _this.triggerAllFormControlValidationIfError(panel); }));
        this.stepperService.disablePanel(this.id, true);
        this.listenToFocusChanges();
    };
    ClrStepperPanel.prototype.ngOnDestroy = function () {
        this.subscriptions.forEach(function (s) { return s.unsubscribe(); });
    };
    ClrStepperPanel.prototype.listenToFocusChanges = function () {
        var _this = this;
        this.subscriptions.push(this.stepperService.activeStep
            .pipe(filter(function (panelId) { return isPlatformBrowser(_this.platformId) && panelId === _this.id; }))
            .subscribe(function () { return _this.headerButton.nativeElement.focus(); }));
    };
    ClrStepperPanel.prototype.triggerAllFormControlValidationIfError = function (panel) {
        if (panel.status === AccordionStatus.Error) {
            triggerAllFormControlValidation(this.formGroup);
        }
    };
    ClrStepperPanel.ctorParameters = function () { return [
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
        { type: ClrCommonStringsService },
        { type: FormGroupName, decorators: [{ type: Optional }] },
        { type: NgModelGroup, decorators: [{ type: Optional }] },
        { type: StepperService },
        { type: IfExpandService },
        { type: String, decorators: [{ type: Inject, args: [UNIQUE_ID,] }] }
    ]; };
    __decorate([
        ViewChild('headerButton')
    ], ClrStepperPanel.prototype, "headerButton", void 0);
    ClrStepperPanel = __decorate([ __param(0, Inject(PLATFORM_ID)),
        __param(2, Optional()),
        __param(3, Optional()),
        __param(6, Inject(UNIQUE_ID))
    ], ClrStepperPanel);
ClrStepperPanel.ɵfac = function ClrStepperPanel_Factory(t) { return new (t || ClrStepperPanel)(ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ClrCommonStringsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormGroupName, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgModelGroup, 8), ɵngcc0.ɵɵdirectiveInject(StepperService), ɵngcc0.ɵɵdirectiveInject(IfExpandService), ɵngcc0.ɵɵdirectiveInject(UNIQUE_ID)); };
ClrStepperPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrStepperPanel, selectors: [["clr-stepper-panel"]], viewQuery: function ClrStepperPanel_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerButton = _t.first);
    } }, hostVars: 2, hostBindings: function ClrStepperPanel_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("clr-accordion-panel", true);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([IfExpandService, UNIQUE_ID_PROVIDER]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 2, vars: 3, consts: [[4, "ngIf"], ["aria-live", "assertive", "class", "clr-sr-only", 4, "ngIf"], ["role", "group", 3, "ngClass"], [1, "clr-accordion-header"], ["type", "button", 1, "clr-accordion-header-button", 3, "id", "disabled", "click"], ["headerButton", ""], [1, "clr-sr-only"], [1, "clr-accordion-status"], ["shape", "angle", "dir", "right", 1, "clr-accordion-angle"], [1, "clr-accordion-number"], ["shape", "exclamation-circle", 1, "clr-accordion-error-icon"], ["shape", "check-circle", 1, "clr-accordion-complete-icon"], ["role", "region", 3, "id"], ["class", "clr-accordion-content", 4, "ngIf"], ["aria-live", "assertive", 1, "clr-sr-only"], [1, "clr-accordion-content"], [1, "clr-accordion-inner-content"]], template: function ClrStepperPanel_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c1);
        ɵngcc0.ɵɵtemplate(0, ClrStepperPanel_ng_container_0_Template, 19, 18, "ng-container", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.panel));
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgClass, ɵngcc3.ClrIconCustomTag], pipes: [ɵngcc2.AsyncPipe], encapsulation: 2, data: { animation: stepAnimation }, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrStepperPanel, [{
        type: Component,
        args: [{
                selector: 'clr-stepper-panel',
                template: "<ng-container *ngIf=\"panel | async; let panel\">\n  <div *ngIf=\"panel.status !== AccordionStatus.Inactive\" aria-live=\"assertive\" class=\"clr-sr-only\">\n    <ng-container *ngIf=\"panel.status === AccordionStatus.Error\">{{commonStrings.keys.danger}}</ng-container>\n  </div>\n\n  <div role=\"group\" [ngClass]=\"getPanelStateClasses(panel)\">\n    <div class=\"clr-accordion-header\">\n      <button\n        type=\"button\"\n        class=\"clr-accordion-header-button\"\n        (click)=\"togglePanel()\"\n        [id]=\"getAccordionHeaderId(panel.templateId)\"\n        [disabled]=\"isAccordion && panel.disabled\"\n        [attr.aria-disabled]=\"!isAccordion && panel.disabled\"\n        [attr.aria-controls]=\"getAccordionContentId(panel.templateId)\"\n        [attr.aria-expanded]=\"panel.open\"\n        [class.clr-accordion-header-has-description]=\"(accordionDescription.changes | async)?.length || accordionDescription.length\"\n        #headerButton\n      >\n        <span class=\"clr-sr-only\">\n          <ng-container *ngIf=\"panel.status === AccordionStatus.Error\">{{commonStrings.keys.danger}}</ng-container>\n          <ng-container *ngIf=\"panel.status === AccordionStatus.Complete\">{{commonStrings.keys.success}}</ng-container>\n        </span>\n        <span class=\"clr-accordion-status\">\n          <clr-icon shape=\"angle\" dir=\"right\" class=\"clr-accordion-angle\"></clr-icon>\n          <span class=\"clr-accordion-number\"></span>\n          <clr-icon shape=\"exclamation-circle\" class=\"clr-accordion-error-icon\"></clr-icon>\n          <clr-icon shape=\"check-circle\" class=\"clr-accordion-complete-icon\"></clr-icon>\n        </span>\n        <ng-content select=\"clr-accordion-title, clr-step-title\"></ng-content>\n        <ng-content select=\"clr-accordion-description, clr-step-description\"></ng-content>\n      </button>\n    </div>\n    <div\n      @skipInitialRender\n      role=\"region\"\n      [id]=\"getAccordionContentId(panel.templateId)\"\n      [attr.aria-hidden]=\"!panel.open\"\n      [attr.aria-labelledby]=\"getAccordionHeaderId(panel.templateId)\"\n    >\n      <div\n        *ngIf=\"panel.open\"\n        @toggle\n        (@toggle.done)=\"collapsePanelOnAnimationDone(panel)\"\n        class=\"clr-accordion-content\">\n        <div class=\"clr-accordion-inner-content\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n",
                host: { '[class.clr-accordion-panel]': 'true' },
                changeDetection: ChangeDetectionStrategy.OnPush,
                animations: stepAnimation,
                providers: [IfExpandService, UNIQUE_ID_PROVIDER]
            }]
    }], function () { return [{ type: Object, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }, { type: ClrCommonStringsService }, { type: ɵngcc1.FormGroupName, decorators: [{
                type: Optional
            }] }, { type: ɵngcc1.NgModelGroup, decorators: [{
                type: Optional
            }] }, { type: StepperService }, { type: IfExpandService }, { type: String, decorators: [{
                type: Inject,
                args: [UNIQUE_ID]
            }] }]; }, { headerButton: [{
            type: ViewChild,
            args: ['headerButton']
        }] }); })();
    return ClrStepperPanel;
}(ClrAccordionPanel));
export { ClrStepperPanel };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,