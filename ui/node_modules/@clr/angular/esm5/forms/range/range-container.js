/**
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate, __extends, __param } from "tslib";
import { Component, Input, Optional, Renderer2 } from '@angular/core';
import { IfErrorService } from '../common/if-error/if-error.service';
import { NgControlService } from '../common/providers/ng-control.service';
import { LayoutService } from '../common/providers/layout.service';
import { ControlIdService } from '../common/providers/control-id.service';
import { ControlClassService } from '../common/providers/control-class.service';
import { ClrAbstractContainer } from '../common/abstract-container';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../common/label';
import * as ɵngcc3 from '../../icon/icon';

function ClrRangeContainer_label_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "label");
} }
function ClrRangeContainer_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 5);
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("width", ctx_r1.getRangeProgressFillWidth());
} }
function ClrRangeContainer_clr_icon_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-icon", 6);
} }
function ClrRangeContainer_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 2, ["*ngIf", "!invalid"]);
} }
function ClrRangeContainer_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 3, ["*ngIf", "invalid"]);
} }
var _c0 = [[["label"]], [["", "clrRange", ""]], [["clr-control-helper"]], [["clr-control-error"]]];
var _c1 = ["label", "[clrRange]", "clr-control-helper", "clr-control-error"];
var ClrRangeContainer = /** @class */ (function (_super) {
    __extends(ClrRangeContainer, _super);
    function ClrRangeContainer(ifErrorService, layoutService, controlClassService, ngControlService, renderer, idService) {
        var _this = _super.call(this, ifErrorService, layoutService, controlClassService, ngControlService) || this;
        _this.renderer = renderer;
        _this.idService = idService;
        _this._hasProgress = false;
        return _this;
    }
    Object.defineProperty(ClrRangeContainer.prototype, "hasProgress", {
        get: function () {
            return this._hasProgress;
        },
        set: function (val) {
            var valBool = !!val;
            if (valBool !== this._hasProgress) {
                this._hasProgress = valBool;
            }
        },
        enumerable: true,
        configurable: true
    });
    ClrRangeContainer.prototype.getRangeProgressFillWidth = function () {
        var input = this.renderer.selectRootElement('[clrRange]#' + this.idService.id);
        var inputWidth = input.offsetWidth;
        var inputMinValue = +input.min;
        var inputMaxValue = +input.max;
        if (inputMinValue === 0 && inputMaxValue === 0) {
            inputMaxValue = 100;
        }
        var inputMiddle = (inputMinValue + inputMaxValue) / 2;
        var inputValue = !!this.control && this.control.value !== undefined ? this.control.value : inputMiddle;
        var valueAsPercent = (inputValue - inputMinValue) * 100 / (inputMaxValue - inputMinValue);
        return valueAsPercent * inputWidth / 100 + 'px';
    };
    ClrRangeContainer.ctorParameters = function () { return [
        { type: IfErrorService },
        { type: LayoutService, decorators: [{ type: Optional }] },
        { type: ControlClassService },
        { type: NgControlService },
        { type: Renderer2 },
        { type: ControlIdService }
    ]; };
    __decorate([
        Input('clrRangeHasProgress')
    ], ClrRangeContainer.prototype, "hasProgress", null);
    ClrRangeContainer = __decorate([ __param(1, Optional())
    ], ClrRangeContainer);
ClrRangeContainer.ɵfac = function ClrRangeContainer_Factory(t) { return new (t || ClrRangeContainer)(ɵngcc0.ɵɵdirectiveInject(IfErrorService), ɵngcc0.ɵɵdirectiveInject(LayoutService, 8), ɵngcc0.ɵɵdirectiveInject(ControlClassService), ɵngcc0.ɵɵdirectiveInject(NgControlService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ControlIdService)); };
ClrRangeContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrRangeContainer, selectors: [["clr-range-container"]], hostVars: 6, hostBindings: function ClrRangeContainer_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("clr-form-control", true)("clr-form-control-disabled", ctx.control == null ? null : ctx.control.disabled)("clr-row", ctx.addGrid());
    } }, inputs: { hasProgress: ["clrRangeHasProgress", "hasProgress"] }, features: [ɵngcc0.ɵɵProvidersFeature([IfErrorService, NgControlService, ControlIdService, ControlClassService]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 9, vars: 8, consts: [[4, "ngIf"], [1, "clr-control-container", 3, "ngClass"], [1, "clr-range-wrapper"], ["class", "fill-input", 3, "width", 4, "ngIf"], ["class", "clr-validate-icon", "shape", "exclamation-circle", "aria-hidden", "true", 4, "ngIf"], [1, "fill-input"], ["shape", "exclamation-circle", "aria-hidden", "true", 1, "clr-validate-icon"]], template: function ClrRangeContainer_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵtemplate(1, ClrRangeContainer_label_1_Template, 1, 0, "label", 0);
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵprojection(4, 1);
        ɵngcc0.ɵɵtemplate(5, ClrRangeContainer_span_5_Template, 1, 2, "span", 3);
        ɵngcc0.ɵɵtemplate(6, ClrRangeContainer_clr_icon_6_Template, 1, 0, "clr-icon", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, ClrRangeContainer_7_Template, 1, 0, undefined, 0);
        ɵngcc0.ɵɵtemplate(8, ClrRangeContainer_8_Template, 1, 0, undefined, 0);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.label && ctx.addGrid());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.controlClass());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("progress-fill", ctx.hasProgress);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasProgress);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.invalid);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.invalid);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.invalid);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc2.ClrLabel, ɵngcc3.ClrIconCustomTag], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrRangeContainer, [{
        type: Component,
        args: [{
                selector: 'clr-range-container',
                template: "\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-range-wrapper\" [class.progress-fill]=\"hasProgress\">\n                <ng-content select=\"[clrRange]\"></ng-content>\n                <span\n                  *ngIf=\"hasProgress\"\n                  class=\"fill-input\"\n                  [style.width]=\"getRangeProgressFillWidth()\"\n                ></span>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    ",
                host: {
                    '[class.clr-form-control]': 'true',
                    '[class.clr-form-control-disabled]': 'control?.disabled',
                    '[class.clr-row]': 'addGrid()'
                },
                providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService]
            }]
    }], function () { return [{ type: IfErrorService }, { type: LayoutService, decorators: [{
                type: Optional
            }] }, { type: ControlClassService }, { type: NgControlService }, { type: ɵngcc0.Renderer2 }, { type: ControlIdService }]; }, { hasProgress: [{
            type: Input,
            args: ['clrRangeHasProgress']
        }] }); })();
    return ClrRangeContainer;
}(ClrAbstractContainer));
export { ClrRangeContainer };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZ2UtY29udGFpbmVyLmpzIiwic291cmNlcyI6WyJuZzovQGNsci9hbmd1bGFyL2Zvcm1zL3JhbmdlL3JhbmdlLWNvbnRhaW5lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMxRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUNoRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0QnBFO0FBQTJELElBQXBCLHFDQUFvQjtBQUFDLElBZTFELDJCQUNFLGNBQThCLEVBQ2xCLGFBQTRCLEVBQ3hDLG1CQUF3QyxFQUN4QyxnQkFBa0MsRUFDMUIsUUFBbUIsRUFDbkIsU0FBMkI7QUFDcEMsUUFQRCxZQVFFLGtCQUFNLGNBQWMsRUFBRSxhQUFhLEVBQUUsbUJBQW1CLEVBQUUsZ0JBQWdCLENBQUMsU0FDNUU7QUFDSCxRQUxZLGNBQVEsR0FBUixRQUFRLENBQVc7QUFBQyxRQUNwQixlQUFTLEdBQVQsU0FBUyxDQUFrQjtBQUN2QyxRQXJCVSxrQkFBWSxHQUFZLEtBQUssQ0FBQztBQUN4QztBQUNxQixJQXFCbkIsQ0FBQztBQUNILElBckJFLHNCQUFJLDBDQUFXO0FBQUksYUFPbkI7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztBQUM3QixRQUFFLENBQUM7QUFFSCxhQVhFLFVBQWdCLEdBQVk7QUFDOUIsWUFBSSxJQUFNLE9BQU8sR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO0FBQzFCLFlBQUksSUFBSSxPQUFPLEtBQUssSUFBSSxDQUFDLFlBQVksRUFBRTtBQUN2QyxnQkFBTSxJQUFJLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQztBQUNsQyxhQUFLO0FBQ0wsUUFBRSxDQUFDO0FBRUg7QUFDSTtBQUNILE9BSkU7QUFDSCxJQWdCRSxxREFBeUIsR0FBekI7QUFBYyxRQUNaLElBQU0sS0FBSyxHQUFxQixJQUFJLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3ZHLFFBQ0ksSUFBTSxVQUFVLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQztBQUN6QyxRQUFJLElBQU0sYUFBYSxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztBQUNyQyxRQUFJLElBQUksYUFBYSxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztBQUNuQyxRQUNJLElBQUksYUFBYSxLQUFLLENBQUMsSUFBSSxhQUFhLEtBQUssQ0FBQyxFQUFFO0FBQ3BELFlBQU0sYUFBYSxHQUFHLEdBQUcsQ0FBQztBQUMxQixTQUFLO0FBQ0wsUUFDSSxJQUFNLFdBQVcsR0FBRyxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDNUQsUUFBSSxJQUFNLFVBQVUsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUM7QUFDN0csUUFBSSxJQUFNLGNBQWMsR0FBRyxDQUFDLFVBQVUsR0FBRyxhQUFhLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDLENBQUM7QUFDaEcsUUFDSSxPQUFPLGNBQWMsR0FBRyxVQUFVLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQztBQUNwRCxJQUFFLENBQUM7QUFDRjtBQUM0RCxnQkE1QnpDLGNBQWM7QUFDaEMsZ0JBQTZCLGFBQWEsdUJBQXZDLFFBQVE7QUFBTyxnQkFDSyxtQkFBbUI7QUFDMUMsZ0JBQW9CLGdCQUFnQjtBQUNwQyxnQkFBb0IsU0FBUztBQUM3QixnQkFBcUIsZ0JBQWdCO0FBQ3JDO0FBQ0ksSUFuQko7QUFBYSxRQURaLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQztBQUMvQix3REFLRztBQUVILElBWGEsaUJBQWlCLHdCQTFCN0IsU0FBUyxDQUFDLG5CQTBCSCxDQWlCSCxXQUFBLFFBQVEsRUFBRSxDQUFBO1NBMUNiLFFBQVEsRUFBRSxuQkEwQ0ksT0FqQkgsaUJBQWlCLENBMkM3QjthQXBFZ0MsY0FDL0IsUUFBUSxFQUFFOzs7cUxBZ0JQLGNBQ0gsSUFBSSxFQUFFLGtCQUNKLDBCQUEwQixFQUFFLE1BQU0sa0JBQ2xDLG1DQUFtQyxFQUFFLG1CQUFtQixrQkFDeEQsaUJBQWlCLEVBQUUsV0FBVyxlQUMvQixjQUNELFNBQVMsRUFBRSxDQUFDLGNBQWMsRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBRSxtQkFBbUIsQ0FBQyxVQUNyRixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQTZDRjtBQUFDLElBREQsd0JBQUM7QUFDQSxDQURBLEFBM0NELENBQXVDLG9CQUFvQixHQTJDMUQ7QUFDRCxTQTVDYSxpQkFBaUI7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9wdGlvbmFsLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgSWZFcnJvclNlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vaWYtZXJyb3IvaWYtZXJyb3Iuc2VydmljZSc7XG5pbXBvcnQgeyBOZ0NvbnRyb2xTZXJ2aWNlIH0gZnJvbSAnLi4vY29tbW9uL3Byb3ZpZGVycy9uZy1jb250cm9sLnNlcnZpY2UnO1xuaW1wb3J0IHsgTGF5b3V0U2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9wcm92aWRlcnMvbGF5b3V0LnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29udHJvbElkU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9wcm92aWRlcnMvY29udHJvbC1pZC5zZXJ2aWNlJztcbmltcG9ydCB7IENvbnRyb2xDbGFzc1NlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vcHJvdmlkZXJzL2NvbnRyb2wtY2xhc3Muc2VydmljZSc7XG5pbXBvcnQgeyBDbHJBYnN0cmFjdENvbnRhaW5lciB9IGZyb20gJy4uL2NvbW1vbi9hYnN0cmFjdC1jb250YWluZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjbHItcmFuZ2UtY29udGFpbmVyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwibGFiZWxcIj48L25nLWNvbnRlbnQ+XG4gICAgICAgIDxsYWJlbCAqbmdJZj1cIiFsYWJlbCAmJiBhZGRHcmlkKClcIj48L2xhYmVsPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2xyLWNvbnRyb2wtY29udGFpbmVyXCIgW25nQ2xhc3NdPVwiY29udHJvbENsYXNzKClcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjbHItcmFuZ2Utd3JhcHBlclwiIFtjbGFzcy5wcm9ncmVzcy1maWxsXT1cImhhc1Byb2dyZXNzXCI+XG4gICAgICAgICAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW2NsclJhbmdlXVwiPjwvbmctY29udGVudD5cbiAgICAgICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgICAgKm5nSWY9XCJoYXNQcm9ncmVzc1wiXG4gICAgICAgICAgICAgICAgICBjbGFzcz1cImZpbGwtaW5wdXRcIlxuICAgICAgICAgICAgICAgICAgW3N0eWxlLndpZHRoXT1cImdldFJhbmdlUHJvZ3Jlc3NGaWxsV2lkdGgoKVwiXG4gICAgICAgICAgICAgICAgPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8Y2xyLWljb24gKm5nSWY9XCJpbnZhbGlkXCIgY2xhc3M9XCJjbHItdmFsaWRhdGUtaWNvblwiIHNoYXBlPVwiZXhjbGFtYXRpb24tY2lyY2xlXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9jbHItaWNvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiY2xyLWNvbnRyb2wtaGVscGVyXCIgKm5nSWY9XCIhaW52YWxpZFwiPjwvbmctY29udGVudD5cbiAgICAgICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cImNsci1jb250cm9sLWVycm9yXCIgKm5nSWY9XCJpbnZhbGlkXCI+PC9uZy1jb250ZW50PlxuICAgICAgICA8L2Rpdj5cbiAgICBgLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5jbHItZm9ybS1jb250cm9sXSc6ICd0cnVlJyxcbiAgICAnW2NsYXNzLmNsci1mb3JtLWNvbnRyb2wtZGlzYWJsZWRdJzogJ2NvbnRyb2w/LmRpc2FibGVkJyxcbiAgICAnW2NsYXNzLmNsci1yb3ddJzogJ2FkZEdyaWQoKScsXG4gIH0sXG4gIHByb3ZpZGVyczogW0lmRXJyb3JTZXJ2aWNlLCBOZ0NvbnRyb2xTZXJ2aWNlLCBDb250cm9sSWRTZXJ2aWNlLCBDb250cm9sQ2xhc3NTZXJ2aWNlXSxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyUmFuZ2VDb250YWluZXIgZXh0ZW5kcyBDbHJBYnN0cmFjdENvbnRhaW5lciB7XG4gIHByaXZhdGUgX2hhc1Byb2dyZXNzOiBib29sZWFuID0gZmFsc2U7XG5cbiAgQElucHV0KCdjbHJSYW5nZUhhc1Byb2dyZXNzJylcbiAgc2V0IGhhc1Byb2dyZXNzKHZhbDogYm9vbGVhbikge1xuICAgIGNvbnN0IHZhbEJvb2wgPSAhIXZhbDtcbiAgICBpZiAodmFsQm9vbCAhPT0gdGhpcy5faGFzUHJvZ3Jlc3MpIHtcbiAgICAgIHRoaXMuX2hhc1Byb2dyZXNzID0gdmFsQm9vbDtcbiAgICB9XG4gIH1cblxuICBnZXQgaGFzUHJvZ3Jlc3MoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2hhc1Byb2dyZXNzO1xuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgaWZFcnJvclNlcnZpY2U6IElmRXJyb3JTZXJ2aWNlLFxuICAgIEBPcHRpb25hbCgpIGxheW91dFNlcnZpY2U6IExheW91dFNlcnZpY2UsXG4gICAgY29udHJvbENsYXNzU2VydmljZTogQ29udHJvbENsYXNzU2VydmljZSxcbiAgICBuZ0NvbnRyb2xTZXJ2aWNlOiBOZ0NvbnRyb2xTZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICBwcml2YXRlIGlkU2VydmljZTogQ29udHJvbElkU2VydmljZVxuICApIHtcbiAgICBzdXBlcihpZkVycm9yU2VydmljZSwgbGF5b3V0U2VydmljZSwgY29udHJvbENsYXNzU2VydmljZSwgbmdDb250cm9sU2VydmljZSk7XG4gIH1cblxuICBnZXRSYW5nZVByb2dyZXNzRmlsbFdpZHRoKCk6IHN0cmluZyB7XG4gICAgY29uc3QgaW5wdXQgPSA8SFRNTElucHV0RWxlbWVudD50aGlzLnJlbmRlcmVyLnNlbGVjdFJvb3RFbGVtZW50KCdbY2xyUmFuZ2VdIycgKyB0aGlzLmlkU2VydmljZS5pZCk7XG5cbiAgICBjb25zdCBpbnB1dFdpZHRoID0gaW5wdXQub2Zmc2V0V2lkdGg7XG4gICAgY29uc3QgaW5wdXRNaW5WYWx1ZSA9ICtpbnB1dC5taW47XG4gICAgbGV0IGlucHV0TWF4VmFsdWUgPSAraW5wdXQubWF4O1xuXG4gICAgaWYgKGlucHV0TWluVmFsdWUgPT09IDAgJiYgaW5wdXRNYXhWYWx1ZSA9PT0gMCkge1xuICAgICAgaW5wdXRNYXhWYWx1ZSA9IDEwMDtcbiAgICB9XG5cbiAgICBjb25zdCBpbnB1dE1pZGRsZSA9IChpbnB1dE1pblZhbHVlICsgaW5wdXRNYXhWYWx1ZSkgLyAyO1xuICAgIGNvbnN0IGlucHV0VmFsdWUgPSAhIXRoaXMuY29udHJvbCAmJiB0aGlzLmNvbnRyb2wudmFsdWUgIT09IHVuZGVmaW5lZCA/IHRoaXMuY29udHJvbC52YWx1ZSA6IGlucHV0TWlkZGxlO1xuICAgIGNvbnN0IHZhbHVlQXNQZXJjZW50ID0gKGlucHV0VmFsdWUgLSBpbnB1dE1pblZhbHVlKSAqIDEwMCAvIChpbnB1dE1heFZhbHVlIC0gaW5wdXRNaW5WYWx1ZSk7XG5cbiAgICByZXR1cm4gdmFsdWVBc1BlcmNlbnQgKiBpbnB1dFdpZHRoIC8gMTAwICsgJ3B4JztcbiAgfVxufVxuIl19