/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate } from "tslib";
import { Component, Input } from '@angular/core';
import { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';
import { DateFormControlService } from './providers/date-form-control.service';
import { DateNavigationService } from './providers/date-navigation.service';
import * as ɵngcc0 from '@angular/core';
var ClrDay = /** @class */ (function () {
    function ClrDay(_dateNavigationService, _toggleService, dateFormControlService) {
        this._dateNavigationService = _dateNavigationService;
        this._toggleService = _toggleService;
        this.dateFormControlService = dateFormControlService;
    }
    Object.defineProperty(ClrDay.prototype, "dayView", {
        get: function () {
            return this._dayView;
        },
        /**
         * DayViewModel input which is used to build the Day View.
         */
        set: function (day) {
            this._dayView = day;
            this.dayString = this._dayView.dayModel.toDateString();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates the focusedDay in the DateNavigationService when the ClrDay is focused.
     */
    ClrDay.prototype.onDayViewFocus = function () {
        this._dateNavigationService.focusedDay = this.dayView.dayModel;
    };
    /**
     * Updates the selectedDay when the ClrDay is selected and closes the datepicker popover.
     */
    ClrDay.prototype.selectDay = function () {
        var day = this.dayView.dayModel;
        this._dateNavigationService.notifySelectedDayChanged(day);
        this.dateFormControlService.markAsDirty();
        this._toggleService.open = false;
    };
    ClrDay.ctorParameters = function () { return [
        { type: DateNavigationService },
        { type: ClrPopoverToggleService },
        { type: DateFormControlService }
    ]; };
    __decorate([
        Input('clrDayView')
    ], ClrDay.prototype, "dayView", null);
ClrDay.ɵfac = function ClrDay_Factory(t) { return new (t || ClrDay)(ɵngcc0.ɵɵdirectiveInject(DateNavigationService), ɵngcc0.ɵɵdirectiveInject(ClrPopoverToggleService), ɵngcc0.ɵɵdirectiveInject(DateFormControlService)); };
ClrDay.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrDay, selectors: [["clr-day"]], hostVars: 2, hostBindings: function ClrDay_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("day", true);
    } }, inputs: { dayView: ["clrDayView", "dayView"] }, decls: 2, vars: 11, consts: [["type", "button", 1, "day-btn", 3, "click", "focus"]], template: function ClrDay_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "button", 0);
        ɵngcc0.ɵɵlistener("click", function ClrDay_Template_button_click_0_listener() { return ctx.selectDay(); })("focus", function ClrDay_Template_button_focus_0_listener() { return ctx.onDayViewFocus(); });
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("is-today", ctx.dayView.isTodaysDate)("is-excluded", ctx.dayView.isExcluded)("is-disabled", ctx.dayView.isDisabled)("is-selected", ctx.dayView.isSelected);
        ɵngcc0.ɵɵattribute("tabindex", ctx.dayView.tabIndex)("aria-label", ctx.dayString);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.dayView.dayModel.date, " ");
    } }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrDay, [{
        type: Component,
        args: [{
                selector: 'clr-day',
                template: "\n        <button\n            class=\"day-btn\"\n            type=\"button\"\n            [class.is-today]=\"dayView.isTodaysDate\"\n            [class.is-excluded]=\"dayView.isExcluded\"\n            [class.is-disabled]=\"dayView.isDisabled\"\n            [class.is-selected]=\"dayView.isSelected\"\n            [attr.tabindex]=\"dayView.tabIndex\"\n            (click)=\"selectDay()\"\n            (focus)=\"onDayViewFocus()\"\n            [attr.aria-label]=\"dayString\">\n            {{dayView.dayModel.date}}\n        </button>\n    ",
                host: { '[class.day]': 'true' }
            }]
    }], function () { return [{ type: DateNavigationService }, { type: ClrPopoverToggleService }, { type: DateFormControlService }]; }, { dayView: [{
            type: Input,
            args: ['clrDayView']
        }] }); })();
    return ClrDay;
}());
export { ClrDay };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF5LmpzIiwic291cmNlcyI6WyJuZzovQGNsci9hbmd1bGFyL2Zvcm1zL2RhdGVwaWNrZXIvZGF5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFJL0YsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDL0UsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUNBQXFDLENBQUM7O0FBcUI1RTtBQUNvQixJQUdsQixnQkFDVSxzQkFBNkMsRUFDN0MsY0FBdUMsRUFDdkMsc0JBQThDO0FBQ3ZELFFBSFMsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUF1QjtBQUFDLFFBQzlDLG1CQUFjLEdBQWQsY0FBYyxDQUF5QjtBQUFDLFFBQ3hDLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBd0I7QUFDMUQsSUFBSyxDQUFDO0FBQ04sSUFNRSxzQkFBVywyQkFBTztBQUFJLGFBS3RCO0FBQWMsWUFDWixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7QUFDekIsUUFBRSxDQUFDO0FBRUgsUUFkRTtBQUNGO0FBRUEsV0FESztBQUNMLGFBRUUsVUFBbUIsR0FBaUI7QUFDdEMsWUFBSSxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQztBQUN4QixZQUFJLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLENBQUM7QUFDM0QsUUFBRSxDQUFDO0FBRUg7QUFBMEI7QUFDWixPQUhYO0FBQ0gsSUFLRTtBQUNGO0FBQ0UsT0FBRztBQUNMLElBQUUsK0JBQWMsR0FBZDtBQUFjLFFBQ1osSUFBSSxDQUFDLHNCQUFzQixDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUNuRSxJQUFFLENBQUM7QUFFSCxJQUFFO0FBQ0Y7QUFDRSxPQUFHO0FBQ0wsSUFBRSwwQkFBUyxHQUFUO0FBQWMsUUFDWixJQUFNLEdBQUcsR0FBYSxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUNoRCxRQUFJLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUM5RCxRQUFJLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUM5QyxRQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztBQUNyQyxJQUFFLENBQUM7QUFDRjtBQUNpRCxnQkFwQ2QscUJBQXFCO0FBQ3ZELGdCQUEwQix1QkFBdUI7QUFDakQsZ0JBQWtDLHNCQUFzQjtBQUN4RDtBQUVFLElBS0Y7QUFBYSxRQURaLEtBQUssQ0FBQyxZQUFZLENBQUM7QUFDdEIseUNBR0c7SUFsQlUsTUFBTSx3QkFuQmxCLFNBQVMsQ0FBQyxjQUNULFFBQVEsRUFBRSxTQUFTLGNBQ25CLFFBQVEsRUFBRTs7OztlQWNQLGNBQ0gsSUFBSSxFQUFFLEVBQUU7R0FBYSxFQUFFLE1BQU0sRUFBRSxVQUNoQyxDQUFDLFFBQ1csTUFBTSxDQXdDbEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxJQURELGFBQUM7QUFDQSxDQURBLEFBeENELElBd0NDO0FBQ0QsU0F6Q2EsTUFBTTtBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDbHJQb3BvdmVyVG9nZ2xlU2VydmljZSB9IGZyb20gJy4uLy4uL3V0aWxzL3BvcG92ZXIvcHJvdmlkZXJzL3BvcG92ZXItdG9nZ2xlLnNlcnZpY2UnO1xuXG5pbXBvcnQgeyBEYXlWaWV3TW9kZWwgfSBmcm9tICcuL21vZGVsL2RheS12aWV3Lm1vZGVsJztcbmltcG9ydCB7IERheU1vZGVsIH0gZnJvbSAnLi9tb2RlbC9kYXkubW9kZWwnO1xuaW1wb3J0IHsgRGF0ZUZvcm1Db250cm9sU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL2RhdGUtZm9ybS1jb250cm9sLnNlcnZpY2UnO1xuaW1wb3J0IHsgRGF0ZU5hdmlnYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvZGF0ZS1uYXZpZ2F0aW9uLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjbHItZGF5JyxcbiAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgY2xhc3M9XCJkYXktYnRuXCJcbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgW2NsYXNzLmlzLXRvZGF5XT1cImRheVZpZXcuaXNUb2RheXNEYXRlXCJcbiAgICAgICAgICAgIFtjbGFzcy5pcy1leGNsdWRlZF09XCJkYXlWaWV3LmlzRXhjbHVkZWRcIlxuICAgICAgICAgICAgW2NsYXNzLmlzLWRpc2FibGVkXT1cImRheVZpZXcuaXNEaXNhYmxlZFwiXG4gICAgICAgICAgICBbY2xhc3MuaXMtc2VsZWN0ZWRdPVwiZGF5Vmlldy5pc1NlbGVjdGVkXCJcbiAgICAgICAgICAgIFthdHRyLnRhYmluZGV4XT1cImRheVZpZXcudGFiSW5kZXhcIlxuICAgICAgICAgICAgKGNsaWNrKT1cInNlbGVjdERheSgpXCJcbiAgICAgICAgICAgIChmb2N1cyk9XCJvbkRheVZpZXdGb2N1cygpXCJcbiAgICAgICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiZGF5U3RyaW5nXCI+XG4gICAgICAgICAgICB7e2RheVZpZXcuZGF5TW9kZWwuZGF0ZX19XG4gICAgICAgIDwvYnV0dG9uPlxuICAgIGAsXG4gIGhvc3Q6IHsgJ1tjbGFzcy5kYXldJzogJ3RydWUnIH0sXG59KVxuZXhwb3J0IGNsYXNzIENsckRheSB7XG4gIHByaXZhdGUgX2RheVZpZXc6IERheVZpZXdNb2RlbDtcbiAgcHVibGljIGRheVN0cmluZzogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgX2RhdGVOYXZpZ2F0aW9uU2VydmljZTogRGF0ZU5hdmlnYXRpb25TZXJ2aWNlLFxuICAgIHByaXZhdGUgX3RvZ2dsZVNlcnZpY2U6IENsclBvcG92ZXJUb2dnbGVTZXJ2aWNlLFxuICAgIHByaXZhdGUgZGF0ZUZvcm1Db250cm9sU2VydmljZTogRGF0ZUZvcm1Db250cm9sU2VydmljZVxuICApIHt9XG5cbiAgLyoqXG4gICAqIERheVZpZXdNb2RlbCBpbnB1dCB3aGljaCBpcyB1c2VkIHRvIGJ1aWxkIHRoZSBEYXkgVmlldy5cbiAgICovXG5cbiAgQElucHV0KCdjbHJEYXlWaWV3JylcbiAgcHVibGljIHNldCBkYXlWaWV3KGRheTogRGF5Vmlld01vZGVsKSB7XG4gICAgdGhpcy5fZGF5VmlldyA9IGRheTtcbiAgICB0aGlzLmRheVN0cmluZyA9IHRoaXMuX2RheVZpZXcuZGF5TW9kZWwudG9EYXRlU3RyaW5nKCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGRheVZpZXcoKTogRGF5Vmlld01vZGVsIHtcbiAgICByZXR1cm4gdGhpcy5fZGF5VmlldztcbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGVzIHRoZSBmb2N1c2VkRGF5IGluIHRoZSBEYXRlTmF2aWdhdGlvblNlcnZpY2Ugd2hlbiB0aGUgQ2xyRGF5IGlzIGZvY3VzZWQuXG4gICAqL1xuICBvbkRheVZpZXdGb2N1cygpIHtcbiAgICB0aGlzLl9kYXRlTmF2aWdhdGlvblNlcnZpY2UuZm9jdXNlZERheSA9IHRoaXMuZGF5Vmlldy5kYXlNb2RlbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGVzIHRoZSBzZWxlY3RlZERheSB3aGVuIHRoZSBDbHJEYXkgaXMgc2VsZWN0ZWQgYW5kIGNsb3NlcyB0aGUgZGF0ZXBpY2tlciBwb3BvdmVyLlxuICAgKi9cbiAgc2VsZWN0RGF5KCk6IHZvaWQge1xuICAgIGNvbnN0IGRheTogRGF5TW9kZWwgPSB0aGlzLmRheVZpZXcuZGF5TW9kZWw7XG4gICAgdGhpcy5fZGF0ZU5hdmlnYXRpb25TZXJ2aWNlLm5vdGlmeVNlbGVjdGVkRGF5Q2hhbmdlZChkYXkpO1xuICAgIHRoaXMuZGF0ZUZvcm1Db250cm9sU2VydmljZS5tYXJrQXNEaXJ0eSgpO1xuICAgIHRoaXMuX3RvZ2dsZVNlcnZpY2Uub3BlbiA9IGZhbHNlO1xuICB9XG59XG4iXX0=