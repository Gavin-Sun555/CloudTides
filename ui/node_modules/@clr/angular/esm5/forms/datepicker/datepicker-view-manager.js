/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { DatepickerFocusService } from './providers/datepicker-focus.service';
import { ViewManagerService } from './providers/view-manager.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './monthpicker';
import * as ɵngcc3 from './yearpicker';
import * as ɵngcc4 from './daypicker';

function ClrDatepickerViewManager_clr_monthpicker_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-monthpicker");
} }
function ClrDatepickerViewManager_clr_yearpicker_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-yearpicker");
} }
function ClrDatepickerViewManager_clr_daypicker_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-daypicker");
} }
var ClrDatepickerViewManager = /** @class */ (function () {
    function ClrDatepickerViewManager(viewManagerService) {
        this.viewManagerService = viewManagerService;
    }
    Object.defineProperty(ClrDatepickerViewManager.prototype, "isMonthView", {
        /**
         * Returns if the current view is the monthpicker.
         */
        get: function () {
            return this.viewManagerService.isMonthView;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrDatepickerViewManager.prototype, "isYearView", {
        /**
         * Returns if the current view is the yearpicker.
         */
        get: function () {
            return this.viewManagerService.isYearView;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrDatepickerViewManager.prototype, "isDayView", {
        /**
         * Returns if the current view is the daypicker.
         */
        get: function () {
            return this.viewManagerService.isDayView;
        },
        enumerable: true,
        configurable: true
    });
    ClrDatepickerViewManager.ctorParameters = function () { return [
        { type: ViewManagerService }
    ]; };
ClrDatepickerViewManager.ɵfac = function ClrDatepickerViewManager_Factory(t) { return new (t || ClrDatepickerViewManager)(ɵngcc0.ɵɵdirectiveInject(ViewManagerService)); };
ClrDatepickerViewManager.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrDatepickerViewManager, selectors: [["clr-datepicker-view-manager"]], hostVars: 3, hostBindings: function ClrDatepickerViewManager_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-modal", true);
        ɵngcc0.ɵɵclassProp("datepicker", true);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([DatepickerFocusService])], decls: 3, vars: 3, consts: [[4, "ngIf"]], template: function ClrDatepickerViewManager_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ClrDatepickerViewManager_clr_monthpicker_0_Template, 1, 0, "clr-monthpicker", 0);
        ɵngcc0.ɵɵtemplate(1, ClrDatepickerViewManager_clr_yearpicker_1_Template, 1, 0, "clr-yearpicker", 0);
        ɵngcc0.ɵɵtemplate(2, ClrDatepickerViewManager_clr_daypicker_2_Template, 1, 0, "clr-daypicker", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.isMonthView);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isYearView);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isDayView);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.ClrMonthpicker, ɵngcc3.ClrYearpicker, ɵngcc4.ClrDaypicker], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrDatepickerViewManager, [{
        type: Component,
        args: [{
                selector: 'clr-datepicker-view-manager',
                template: "<!--\n* Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n* This software is released under MIT license.\n* The full license information can be found in LICENSE in the root directory of this project.\n-->\n\n<clr-monthpicker *ngIf=\"isMonthView\"></clr-monthpicker>\n<clr-yearpicker *ngIf=\"isYearView\"></clr-yearpicker>\n<clr-daypicker *ngIf=\"isDayView\"></clr-daypicker>\n",
                providers: [DatepickerFocusService],
                host: {
                    '[class.datepicker]': 'true',
                    '[attr.aria-modal]': 'true'
                }
            }]
    }], function () { return [{ type: ViewManagerService }]; }, null); })();
    return ClrDatepickerViewManager;
}());
export { ClrDatepickerViewManager };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci12aWV3LW1hbmFnZXIuanMiLCJzb3VyY2VzIjpbIm5nOi9AY2xyL2FuZ3VsYXIvZm9ybXMvZGF0ZXBpY2tlci9kYXRlcGlja2VyLXZpZXctbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDOUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7QUFXdEU7QUFDb0IsSUFBbEIsa0NBQW9CLGtCQUFzQztBQUFJLFFBQTFDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7QUFBQyxJQUFFLENBQUM7QUFDaEUsSUFJRSxzQkFBSSxpREFBVztBQUFJLFFBSG5CO0FBQ0Y7QUFFQSxXQURLO0FBQ0wsYUFBRTtBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDO0FBQy9DLFFBQUUsQ0FBQztBQUVIO0FBQ29CO0FBQTJCLE9BSDVDO0FBQ0gsSUFJRSxzQkFBSSxnREFBVTtBQUFJLFFBSGxCO0FBQ0Y7QUFFQSxXQURLO0FBQ0wsYUFBRTtBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUMsVUFBVSxDQUFDO0FBQzlDLFFBQUUsQ0FBQztBQUVIO0FBQ29CO0FBQTJCLE9BSDVDO0FBQ0gsSUFJRSxzQkFBSSwrQ0FBUztBQUFJLFFBSGpCO0FBQ0Y7QUFFQSxXQURLO0FBQ0wsYUFBRTtBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDO0FBQzdDLFFBQUUsQ0FBQztBQUNGO0FBQ3dCO0FBQTJCLE9BRmpEO0FBQ0g7QUFDbUUsZ0JBdkJ6QixrQkFBa0I7QUFBRztJQURsRCx3QkFBd0Isd0JBVHBDLFNBQVMsQ0FBQyxjQUNULFFBQVEsRUFBRSw2QkFBNkIsY0FDdkM7Ozs7c0JBQTZDLGNBQzdDLFNBQVMsRUFBRSxDQUFDLHNCQUFzQixDQUFDLGNBQ25DLElBQUksRUFBRSxrQkFDSixvQkFBb0IsRUFBRSxNQUFNLGtCQUM1QixtQkFBbUIsRUFBRSxNQUFNO0dBQzVCLFVBQ0YsQ0FBQyxRQUNXLHdCQUF3QixDQXVCcEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0RUFDRDtBQUFDLElBREQsK0JBQUM7QUFDQSxDQURBLEFBdkJELElBdUJDO0FBQ0QsU0F4QmEsd0JBQXdCO0FBQ3BDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgRGF0ZXBpY2tlckZvY3VzU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL2RhdGVwaWNrZXItZm9jdXMuc2VydmljZSc7XG5pbXBvcnQgeyBWaWV3TWFuYWdlclNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy92aWV3LW1hbmFnZXIuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Nsci1kYXRlcGlja2VyLXZpZXctbWFuYWdlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9kYXRlcGlja2VyLXZpZXctbWFuYWdlci5odG1sJyxcbiAgcHJvdmlkZXJzOiBbRGF0ZXBpY2tlckZvY3VzU2VydmljZV0sXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzLmRhdGVwaWNrZXJdJzogJ3RydWUnLFxuICAgICdbYXR0ci5hcmlhLW1vZGFsXSc6ICd0cnVlJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyRGF0ZXBpY2tlclZpZXdNYW5hZ2VyIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSB2aWV3TWFuYWdlclNlcnZpY2U6IFZpZXdNYW5hZ2VyU2VydmljZSkge31cblxuICAvKipcbiAgICogUmV0dXJucyBpZiB0aGUgY3VycmVudCB2aWV3IGlzIHRoZSBtb250aHBpY2tlci5cbiAgICovXG4gIGdldCBpc01vbnRoVmlldygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy52aWV3TWFuYWdlclNlcnZpY2UuaXNNb250aFZpZXc7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBpZiB0aGUgY3VycmVudCB2aWV3IGlzIHRoZSB5ZWFycGlja2VyLlxuICAgKi9cbiAgZ2V0IGlzWWVhclZpZXcoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMudmlld01hbmFnZXJTZXJ2aWNlLmlzWWVhclZpZXc7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBpZiB0aGUgY3VycmVudCB2aWV3IGlzIHRoZSBkYXlwaWNrZXIuXG4gICAqL1xuICBnZXQgaXNEYXlWaWV3KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnZpZXdNYW5hZ2VyU2VydmljZS5pc0RheVZpZXc7XG4gIH1cbn1cbiJdfQ==