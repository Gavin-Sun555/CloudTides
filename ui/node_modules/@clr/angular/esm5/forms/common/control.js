import { __decorate, __extends, __param } from "tslib";
/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, ElementRef, Injector, Optional, Renderer2, Self, ViewContainerRef } from '@angular/core';
import { WrappedFormControl } from './wrapped-control';
import { ClrControlContainer } from './control-container';
import { NgControl } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/forms';
var ClrControl = /** @class */ (function (_super) {
    __extends(ClrControl, _super);
    function ClrControl(vcr, injector, control, renderer, el) {
        var _this = _super.call(this, vcr, ClrControlContainer, injector, control, renderer, el) || this;
        _this.index = 1;
        return _this;
    }
    ClrControl.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: Injector },
        { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },
        { type: Renderer2 },
        { type: ElementRef }
    ]; };
    ClrControl = __decorate([ __param(2, Self()),
        __param(2, Optional())
    ], ClrControl);
ClrControl.ɵfac = function ClrControl_Factory(t) { return new (t || ClrControl)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ClrControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClrControl, selectors: [["", "clrControl", ""]], hostVars: 2, hostBindings: function ClrControl_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("clr-input", true);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrControl, [{
        type: Directive,
        args: [{ selector: '[clrControl]', host: { '[class.clr-input]': 'true' } }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.Injector }, { type: ɵngcc1.NgControl, decorators: [{
                type: Self
            }, {
                type: Optional
            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();
    return ClrControl;
}(WrappedFormControl));
export { ClrControl };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci9mb3Jtcy9jb21tb24vY29udHJvbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdHLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzFELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7O0FBRzNDO0FBQW9ELElBQXBCLDhCQUF1QztBQUFDLElBR3RFLG9CQUNFLEdBQXFCLEVBQ3JCLFFBQWtCLEVBR2xCLE9BQWtCLEVBQ2xCLFFBQW1CLEVBQ25CLEVBQWM7QUFDZixRQVJELFlBU0Usa0JBQU0sR0FBRyxFQUFFLG1CQUFtQixFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxTQUNqRTtBQUNILFFBYlksV0FBSyxHQUFHLENBQUMsQ0FBQztBQUN0QjtBQUVNLElBU0osQ0FBQztBQUNIO0FBQ3FELGdCQVg1QyxnQkFBZ0I7QUFDdkIsZ0JBQVksUUFBUTtBQUNwQixnQkFFVyxTQUFTLHVCQUZqQixJQUFJLFlBQ0osUUFBUTtBQUNULGdCQUNVLFNBQVM7QUFDckIsZ0JBQU0sVUFBVTtBQUNoQjtBQUNJLElBWk8sVUFBVSx3QkFEdEIsU0FBUyxDQUFDLG5CQUNILENBTUgsV0FBQSxJQUFJLEVBQUUsQ0FBQTtBQVBFLFFBQVEsRUFBRSxjQUFjLEVBQUUsSUFBSSw5QkFRMUMsUUFBSSxXQUFBLFFBQVEsRUFBRSxDQUFBO0NBUjhCLEVBQUUsSEFTL0MsT0FSYSxVQUFVLENBY3RCO0VBZmlFLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQzs7Ozs7Ozs7Ozs7MkZBZ0IvRTtBQUFDLElBREQsaUJBQUM7QUFDQSxDQURBLEFBZEQsQ0FBZ0Msa0JBQWtCLEdBY2pEO0FBQ0QsU0FmYSxVQUFVO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEluamVjdG9yLCBPcHRpb25hbCwgUmVuZGVyZXIyLCBTZWxmLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBXcmFwcGVkRm9ybUNvbnRyb2wgfSBmcm9tICcuL3dyYXBwZWQtY29udHJvbCc7XG5pbXBvcnQgeyBDbHJDb250cm9sQ29udGFpbmVyIH0gZnJvbSAnLi9jb250cm9sLWNvbnRhaW5lcic7XG5pbXBvcnQgeyBOZ0NvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1tjbHJDb250cm9sXScsIGhvc3Q6IHsgJ1tjbGFzcy5jbHItaW5wdXRdJzogJ3RydWUnIH0gfSlcbmV4cG9ydCBjbGFzcyBDbHJDb250cm9sIGV4dGVuZHMgV3JhcHBlZEZvcm1Db250cm9sPENsckNvbnRyb2xDb250YWluZXI+IHtcbiAgcHJvdGVjdGVkIGluZGV4ID0gMTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICB2Y3I6IFZpZXdDb250YWluZXJSZWYsXG4gICAgaW5qZWN0b3I6IEluamVjdG9yLFxuICAgIEBTZWxmKClcbiAgICBAT3B0aW9uYWwoKVxuICAgIGNvbnRyb2w6IE5nQ29udHJvbCxcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyLFxuICAgIGVsOiBFbGVtZW50UmVmXG4gICkge1xuICAgIHN1cGVyKHZjciwgQ2xyQ29udHJvbENvbnRhaW5lciwgaW5qZWN0b3IsIGNvbnRyb2wsIHJlbmRlcmVyLCBlbCk7XG4gIH1cbn1cbiJdfQ==