/**
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ClrIconModule } from '../../icon/icon.module';
import { ClrControlError } from './error';
import { ClrControlHelper } from './helper';
import { ClrIfError } from './if-error/if-error';
import { ClrLabel } from './label';
import { ClrForm } from './form';
import { ClrLayout } from './layout';
import { ClrControlContainer } from './control-container';
import { ClrControl } from './control';
import * as ɵngcc0 from '@angular/core';
var ClrCommonFormsModule = /** @class */ (function () {
    function ClrCommonFormsModule() {
    }
ClrCommonFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClrCommonFormsModule });
ClrCommonFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ClrCommonFormsModule_Factory(t) { return new (t || ClrCommonFormsModule)(); }, imports: [[CommonModule, ClrIconModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClrCommonFormsModule, { declarations: function () { return [ClrLabel,
        ClrControlError,
        ClrControlHelper,
        ClrIfError,
        ClrForm,
        ClrLayout,
        ClrControlContainer,
        ClrControl]; }, imports: function () { return [CommonModule, ClrIconModule]; }, exports: function () { return [ClrLabel,
        ClrControlError,
        ClrControlHelper,
        ClrIfError,
        ClrForm,
        ClrLayout,
        ClrControlContainer,
        ClrControl]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClrCommonFormsModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ClrIconModule],
                declarations: [
                    ClrLabel,
                    ClrControlError,
                    ClrControlHelper,
                    ClrIfError,
                    ClrForm,
                    ClrLayout,
                    ClrControlContainer,
                    ClrControl,
                ],
                exports: [
                    ClrLabel,
                    ClrControlError,
                    ClrControlHelper,
                    ClrIfError,
                    ClrForm,
                    ClrLayout,
                    ClrControlContainer,
                    ClrControl,
                ],
                entryComponents: [ClrControlContainer]
            }]
    }], function () { return []; }, null); })();
    return ClrCommonFormsModule;
}());
export { ClrCommonFormsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L0BjbHIvYW5ndWxhci9mb3Jtcy9jb21tb24vY29tbW9uLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV2RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQzFDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUM1QyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUNuQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ2pDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDckMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLFdBQVcsQ0FBQzs7QUEwQnZDO0FBQ21CLElBRG5CO0FBQWtDLElBQUMsQ0FBQztJQUF2QixvQkFBb0Isd0JBeEJoQyxRQUFRLENBQUMsY0FDUixPQUFPLEVBQUUsQ0FBQztRQUFZLEVBQUUsYUFBYSxDQUFDLGNBQ3RDLFlBQVksRUFBRSxrQkFDWixRQUFRLGtCQUNSLGVBQWUsa0JBQ2YsZ0JBQWdCLGtCQUNoQixVQUFVLGtCQUNWO0VBQU8sa0JBQ1AsU0FBUyxrQkFDVCxtQkFBbUIsa0JBQ25CLFVBQVUsZUFDWCxjQUNELE9BQU8sRUFBRSxrQkFDUCxRQUFRO2NBQ1I7SUFBZSxrQkFDZjtZQUFnQjtVQUNoQjtHQUFVO0VBQ1YsT0FBTyxrQkFDUDtPQUFTLGtCQUNULG1CQUFtQixrQkFDbkIsVUFBVSxlQUNYLGNBQ0QsZUFBZSxFQUFFLENBQUM7U0FBbUIsQ0FBQyxXQUN2QyxDQUFDO0tBQ1csb0JBQW9CO0FBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBQ3BDO0FBQUMsSUFEa0MsMkJBQUM7QUFDbkMsQ0FEbUMsQUFBcEMsSUFBb0M7QUFDcEMsU0FEYSxvQkFBb0I7QUFDakMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENsckljb25Nb2R1bGUgfSBmcm9tICcuLi8uLi9pY29uL2ljb24ubW9kdWxlJztcblxuaW1wb3J0IHsgQ2xyQ29udHJvbEVycm9yIH0gZnJvbSAnLi9lcnJvcic7XG5pbXBvcnQgeyBDbHJDb250cm9sSGVscGVyIH0gZnJvbSAnLi9oZWxwZXInO1xuaW1wb3J0IHsgQ2xySWZFcnJvciB9IGZyb20gJy4vaWYtZXJyb3IvaWYtZXJyb3InO1xuaW1wb3J0IHsgQ2xyTGFiZWwgfSBmcm9tICcuL2xhYmVsJztcbmltcG9ydCB7IENsckZvcm0gfSBmcm9tICcuL2Zvcm0nO1xuaW1wb3J0IHsgQ2xyTGF5b3V0IH0gZnJvbSAnLi9sYXlvdXQnO1xuaW1wb3J0IHsgQ2xyQ29udHJvbENvbnRhaW5lciB9IGZyb20gJy4vY29udHJvbC1jb250YWluZXInO1xuaW1wb3J0IHsgQ2xyQ29udHJvbCB9IGZyb20gJy4vY29udHJvbCc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIENsckljb25Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBDbHJMYWJlbCxcbiAgICBDbHJDb250cm9sRXJyb3IsXG4gICAgQ2xyQ29udHJvbEhlbHBlcixcbiAgICBDbHJJZkVycm9yLFxuICAgIENsckZvcm0sXG4gICAgQ2xyTGF5b3V0LFxuICAgIENsckNvbnRyb2xDb250YWluZXIsXG4gICAgQ2xyQ29udHJvbCxcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIENsckxhYmVsLFxuICAgIENsckNvbnRyb2xFcnJvcixcbiAgICBDbHJDb250cm9sSGVscGVyLFxuICAgIENscklmRXJyb3IsXG4gICAgQ2xyRm9ybSxcbiAgICBDbHJMYXlvdXQsXG4gICAgQ2xyQ29udHJvbENvbnRhaW5lcixcbiAgICBDbHJDb250cm9sLFxuICBdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtDbHJDb250cm9sQ29udGFpbmVyXSxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyQ29tbW9uRm9ybXNNb2R1bGUge31cbiJdfQ==