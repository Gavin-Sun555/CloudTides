// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetUserProfileHandlerFunc turns a function with the right signature into a get user profile handler
type GetUserProfileHandlerFunc func(GetUserProfileParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUserProfileHandlerFunc) Handle(params GetUserProfileParams) middleware.Responder {
	return fn(params)
}

// GetUserProfileHandler interface for that can handle valid get user profile params
type GetUserProfileHandler interface {
	Handle(GetUserProfileParams) middleware.Responder
}

// NewGetUserProfile creates a new http.Handler for the get user profile operation
func NewGetUserProfile(ctx *middleware.Context, handler GetUserProfileHandler) *GetUserProfile {
	return &GetUserProfile{Context: ctx, Handler: handler}
}

/*GetUserProfile swagger:route GET /users/profile user getUserProfile

get user profile

*/
type GetUserProfile struct {
	Context *middleware.Context
	Handler GetUserProfileHandler
}

func (o *GetUserProfile) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetUserProfileParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetUserProfileNotFoundBody get user profile not found body
//
// swagger:model GetUserProfileNotFoundBody
type GetUserProfileNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get user profile not found body
func (o *GetUserProfileNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUserProfileNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserProfileNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetUserProfileNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetUserProfileOKBody get user profile o k body
//
// swagger:model GetUserProfileOKBody
type GetUserProfileOKBody struct {

	// message
	Message string `json:"message,omitempty"`

	// results
	Results *GetUserProfileOKBodyResults `json:"results,omitempty"`
}

// Validate validates this get user profile o k body
func (o *GetUserProfileOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResults(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUserProfileOKBody) validateResults(formats strfmt.Registry) error {

	if swag.IsZero(o.Results) { // not required
		return nil
	}

	if o.Results != nil {
		if err := o.Results.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getUserProfileOK" + "." + "results")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserProfileOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserProfileOKBody) UnmarshalBinary(b []byte) error {
	var res GetUserProfileOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetUserProfileOKBodyResults get user profile o k body results
//
// swagger:model GetUserProfileOKBodyResults
type GetUserProfileOKBodyResults struct {

	// city
	City string `json:"city,omitempty"`

	// company name
	CompanyName string `json:"companyName,omitempty"`

	// country
	Country string `json:"country,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// first name
	FirstName string `json:"firstName,omitempty"`

	// last name
	LastName string `json:"lastName,omitempty"`

	// position
	Position string `json:"position,omitempty"`
}

// Validate validates this get user profile o k body results
func (o *GetUserProfileOKBodyResults) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUserProfileOKBodyResults) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserProfileOKBodyResults) UnmarshalBinary(b []byte) error {
	var res GetUserProfileOKBodyResults
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
